// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : sipeed_tang_mega_138k_pro.v
// Device     : GW5AST-LV138FPG676AES
// LiteX sha1 : c1225736a
// Date       : 2024-10-25 16:50:31
//------------------------------------------------------------------------------

`timescale 1ns / 1ps

//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module sipeed_tang_mega_138k_pro (
    input  wire          clk50,
    output wire   [14:0] ddram_a,
    output wire    [2:0] ddram_ba,
    output wire          ddram_cas_n,
    output wire          ddram_cke,
    output wire          ddram_clk_n,
    output wire          ddram_clk_p,
    output wire          ddram_cs_n,
    output wire    [3:0] ddram_dm,
    inout  wire   [31:0] ddram_dq,
    inout  wire    [3:0] ddram_dqs_n,
    inout  wire    [3:0] ddram_dqs_p,
    output wire          ddram_odt,
    output wire          ddram_ras_n,
    output wire          ddram_reset_n,
    output wire          ddram_we_n,
    input  wire          rst,
    input  wire          serial_rx,
    output reg           serial_tx
);


//------------------------------------------------------------------------------
// Hierarchy
//------------------------------------------------------------------------------

/*
BaseSoC
└─── crg (_CRG)
│    └─── pll (GW5APLL)
│    │    └─── [PLL]
│    └─── [DHCE]
└─── bus (SoCBusHandler)
│    └─── _interconnect (InterconnectShared)
│    │    └─── arbiter (Arbiter)
│    │    │    └─── rr (RoundRobin)
│    │    └─── decoder (Decoder)
│    │    └─── timeout (Timeout)
│    │    │    └─── waittimer_0* (WaitTimer)
└─── csr (SoCCSRHandler)
└─── irq (SoCIRQHandler)
└─── ctrl (SoCController)
└─── cpu (VexRiscvSMP)
│    └─── [VexRiscvLitexSmpCluster_Cc1_Iw32Is4096Iy1_Dw32Ds4096Dy1_ITs4DTs4_Ldw256_Ood_Hb1]
└─── rom (SRAM)
└─── sram (SRAM)
└─── identifier (Identifier)
└─── uart_phy (RS232PHY)
│    └─── tx (RS232PHYTX)
│    │    └─── clk_phase_accum (RS232ClkPhaseAccum)
│    │    └─── fsm (FSM)
│    └─── rx (RS232PHYRX)
│    │    └─── clk_phase_accum (RS232ClkPhaseAccum)
│    │    └─── fsm (FSM)
└─── uart (UART)
│    └─── ev (EventManager)
│    │    └─── eventsourceprocess_0* (EventSourceProcess)
│    │    └─── eventsourceprocess_1* (EventSourceProcess)
│    └─── tx_fifo (SyncFIFO)
│    │    └─── fifo (SyncFIFOBuffered)
│    │    │    └─── fifo (SyncFIFO)
│    └─── rx_fifo (SyncFIFO)
│    │    └─── fifo (SyncFIFOBuffered)
│    │    │    └─── fifo (SyncFIFO)
└─── timer0 (Timer)
│    └─── ev (EventManager)
│    │    └─── eventsourceprocess_0* (EventSourceProcess)
└─── ddrphy (GW5DDRPHY)
│    └─── init (GW5DDRPHYInit)
│    │    └─── [DDRDLL]
│    └─── bitslip_0* (BitSlip)
│    └─── bitslip_1* (BitSlip)
│    └─── bitslip_2* (BitSlip)
│    └─── bitslip_3* (BitSlip)
│    └─── bitslip_4* (BitSlip)
│    └─── bitslip_5* (BitSlip)
│    └─── bitslip_6* (BitSlip)
│    └─── bitslip_7* (BitSlip)
│    └─── bitslip_8* (BitSlip)
│    └─── bitslip_9* (BitSlip)
│    └─── bitslip_10* (BitSlip)
│    └─── bitslip_11* (BitSlip)
│    └─── bitslip_12* (BitSlip)
│    └─── bitslip_13* (BitSlip)
│    └─── bitslip_14* (BitSlip)
│    └─── bitslip_15* (BitSlip)
│    └─── bitslip_16* (BitSlip)
│    └─── bitslip_17* (BitSlip)
│    └─── bitslip_18* (BitSlip)
│    └─── bitslip_19* (BitSlip)
│    └─── bitslip_20* (BitSlip)
│    └─── bitslip_21* (BitSlip)
│    └─── bitslip_22* (BitSlip)
│    └─── bitslip_23* (BitSlip)
│    └─── bitslip_24* (BitSlip)
│    └─── bitslip_25* (BitSlip)
│    └─── bitslip_26* (BitSlip)
│    └─── bitslip_27* (BitSlip)
│    └─── bitslip_28* (BitSlip)
│    └─── bitslip_29* (BitSlip)
│    └─── bitslip_30* (BitSlip)
│    └─── bitslip_31* (BitSlip)
│    └─── tappeddelayline_0* (TappedDelayLine)
│    └─── tappeddelayline_1* (TappedDelayLine)
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [DQS]
│    └─── [OSER4_MEM]
│    └─── [ELVDS_IOBUF]
│    └─── [OSER4_MEM]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [DQS]
│    └─── [OSER4_MEM]
│    └─── [ELVDS_IOBUF]
│    └─── [OSER4_MEM]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [ELVDS_OBUF]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [DQS]
│    └─── [OSER4_MEM]
│    └─── [ELVDS_IOBUF]
│    └─── [OSER4_MEM]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [DQS]
│    └─── [OSER4_MEM]
│    └─── [ELVDS_IOBUF]
│    └─── [OSER4_MEM]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
└─── sdram (LiteDRAMCore)
│    └─── dfii (DFIInjector)
│    │    └─── pi0 (PhaseInjector)
│    │    └─── pi1 (PhaseInjector)
│    └─── controller (LiteDRAMController)
│    │    └─── refresher (Refresher)
│    │    │    └─── timer (RefreshTimer)
│    │    │    └─── postponer (RefreshPostponer)
│    │    │    └─── sequencer (RefreshSequencer)
│    │    │    │    └─── refreshexecuter_0* (RefreshExecuter)
│    │    │    └─── zqcs_timer (RefreshTimer)
│    │    │    └─── zqs_executer (ZQCSExecuter)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_0* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_1* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_2* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_3* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_4* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_5* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_6* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_7* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── multiplexer (Multiplexer)
│    │    │    └─── choose_cmd (_CommandChooser)
│    │    │    │    └─── roundrobin_0* (RoundRobin)
│    │    │    └─── choose_req (_CommandChooser)
│    │    │    │    └─── roundrobin_0* (RoundRobin)
│    │    │    └─── _steerer_0* (_Steerer)
│    │    │    └─── trrdcon (tXXDController)
│    │    │    └─── tfawcon (tFAWController)
│    │    │    └─── tccdcon (tXXDController)
│    │    │    └─── twtrcon (tXXDController)
│    │    │    └─── fsm (FSM)
│    └─── crossbar (LiteDRAMCrossbar)
│    │    └─── roundrobin_0* (RoundRobin)
│    │    └─── roundrobin_1* (RoundRobin)
│    │    └─── roundrobin_2* (RoundRobin)
│    │    └─── roundrobin_3* (RoundRobin)
│    │    └─── roundrobin_4* (RoundRobin)
│    │    └─── roundrobin_5* (RoundRobin)
│    │    └─── roundrobin_6* (RoundRobin)
│    │    └─── roundrobin_7* (RoundRobin)
└─── converter_0* (Converter)
│    └─── upconverter_0* (UpConverter)
└─── wishbone_bridge (LiteDRAMWishbone2Native)
│    └─── fsm (FSM)
└─── csr_bridge (Wishbone2CSR)
│    └─── fsm (FSM)
└─── csr_bankarray (CSRBankArray)
│    └─── csrbank_0* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    └─── csrbank_1* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    └─── sram_0* (SRAM)
│    └─── csrbank_2* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstorage_4* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_5* (CSRStorage)
│    │    └─── csrstorage_6* (CSRStorage)
│    │    └─── csrstorage_7* (CSRStorage)
│    │    └─── csrstorage_8* (CSRStorage)
│    │    └─── csrstatus_1* (CSRStatus)
│    └─── csrbank_3* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstorage_4* (CSRStorage)
│    └─── csrbank_4* (CSRBank)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstatus_3* (CSRStatus)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_4* (CSRStatus)
│    │    └─── csrstatus_5* (CSRStatus)
└─── csr_interconnect (InterconnectShared)
└─── [DFFP]
└─── [DFFP]
└─── [DFFP]
└─── [DFFP]
* : Generated name.
[]: BlackBox.
*/

//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

reg     [2:0] bankmachine0_next_state = 3'd0;
reg     [2:0] bankmachine0_state = 3'd0;
reg     [2:0] bankmachine1_next_state = 3'd0;
reg     [2:0] bankmachine1_state = 3'd0;
reg     [2:0] bankmachine2_next_state = 3'd0;
reg     [2:0] bankmachine2_state = 3'd0;
reg     [2:0] bankmachine3_next_state = 3'd0;
reg     [2:0] bankmachine3_state = 3'd0;
reg     [2:0] bankmachine4_next_state = 3'd0;
reg     [2:0] bankmachine4_state = 3'd0;
reg     [2:0] bankmachine5_next_state = 3'd0;
reg     [2:0] bankmachine5_state = 3'd0;
reg     [2:0] bankmachine6_next_state = 3'd0;
reg     [2:0] bankmachine6_state = 3'd0;
reg     [2:0] bankmachine7_next_state = 3'd0;
reg     [2:0] bankmachine7_state = 3'd0;
reg           basesoc_aborted = 1'd0;
reg           basesoc_aborted_litedramwishbone2native_next_value = 1'd0;
reg           basesoc_aborted_litedramwishbone2native_next_value_ce = 1'd0;
reg           basesoc_bankmachine0_auto_precharge = 1'd0;
reg    [13:0] basesoc_bankmachine0_cmd_payload_a = 14'd0;
wire    [2:0] basesoc_bankmachine0_cmd_payload_ba;
reg           basesoc_bankmachine0_cmd_payload_cas = 1'd0;
reg           basesoc_bankmachine0_cmd_payload_is_cmd = 1'd0;
reg           basesoc_bankmachine0_cmd_payload_is_read = 1'd0;
reg           basesoc_bankmachine0_cmd_payload_is_write = 1'd0;
reg           basesoc_bankmachine0_cmd_payload_ras = 1'd0;
reg           basesoc_bankmachine0_cmd_payload_we = 1'd0;
reg           basesoc_bankmachine0_cmd_ready = 1'd0;
reg           basesoc_bankmachine0_cmd_valid = 1'd0;
reg     [2:0] basesoc_bankmachine0_consume = 3'd0;
wire          basesoc_bankmachine0_do_read;
wire          basesoc_bankmachine0_fifo_in_first;
wire          basesoc_bankmachine0_fifo_in_last;
wire   [20:0] basesoc_bankmachine0_fifo_in_payload_addr;
wire          basesoc_bankmachine0_fifo_in_payload_we;
wire          basesoc_bankmachine0_fifo_out_first;
wire          basesoc_bankmachine0_fifo_out_last;
wire   [20:0] basesoc_bankmachine0_fifo_out_payload_addr;
wire          basesoc_bankmachine0_fifo_out_payload_we;
reg     [3:0] basesoc_bankmachine0_level = 4'd0;
wire          basesoc_bankmachine0_pipe_valid_sink_first;
wire          basesoc_bankmachine0_pipe_valid_sink_last;
wire   [20:0] basesoc_bankmachine0_pipe_valid_sink_payload_addr;
wire          basesoc_bankmachine0_pipe_valid_sink_payload_we;
wire          basesoc_bankmachine0_pipe_valid_sink_ready;
wire          basesoc_bankmachine0_pipe_valid_sink_valid;
reg           basesoc_bankmachine0_pipe_valid_source_first = 1'd0;
reg           basesoc_bankmachine0_pipe_valid_source_last = 1'd0;
reg    [20:0] basesoc_bankmachine0_pipe_valid_source_payload_addr = 21'd0;
reg           basesoc_bankmachine0_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_bankmachine0_pipe_valid_source_ready;
reg           basesoc_bankmachine0_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_bankmachine0_produce = 3'd0;
wire    [2:0] basesoc_bankmachine0_rdport_adr;
wire   [23:0] basesoc_bankmachine0_rdport_dat_r;
reg           basesoc_bankmachine0_refresh_gnt = 1'd0;
wire          basesoc_bankmachine0_refresh_req;
reg           basesoc_bankmachine0_replace = 1'd0;
wire   [20:0] basesoc_bankmachine0_req_addr;
wire          basesoc_bankmachine0_req_lock;
reg           basesoc_bankmachine0_req_rdata_valid = 1'd0;
wire          basesoc_bankmachine0_req_ready;
wire          basesoc_bankmachine0_req_valid;
reg           basesoc_bankmachine0_req_wdata_ready = 1'd0;
wire          basesoc_bankmachine0_req_we;
reg    [13:0] basesoc_bankmachine0_row = 14'd0;
reg           basesoc_bankmachine0_row_close = 1'd0;
reg           basesoc_bankmachine0_row_col_n_addr_sel = 1'd0;
wire          basesoc_bankmachine0_row_hit;
reg           basesoc_bankmachine0_row_open = 1'd0;
reg           basesoc_bankmachine0_row_opened = 1'd0;
reg           basesoc_bankmachine0_sink_first = 1'd0;
reg           basesoc_bankmachine0_sink_last = 1'd0;
wire   [20:0] basesoc_bankmachine0_sink_payload_addr;
wire          basesoc_bankmachine0_sink_payload_we;
wire          basesoc_bankmachine0_sink_ready;
wire          basesoc_bankmachine0_sink_sink_first;
wire          basesoc_bankmachine0_sink_sink_last;
wire   [20:0] basesoc_bankmachine0_sink_sink_payload_addr;
wire          basesoc_bankmachine0_sink_sink_payload_we;
wire          basesoc_bankmachine0_sink_sink_ready;
wire          basesoc_bankmachine0_sink_sink_valid;
wire          basesoc_bankmachine0_sink_valid;
wire          basesoc_bankmachine0_source_first;
wire          basesoc_bankmachine0_source_last;
wire   [20:0] basesoc_bankmachine0_source_payload_addr;
wire          basesoc_bankmachine0_source_payload_we;
wire          basesoc_bankmachine0_source_ready;
wire          basesoc_bankmachine0_source_source_first;
wire          basesoc_bankmachine0_source_source_last;
wire   [20:0] basesoc_bankmachine0_source_source_payload_addr;
wire          basesoc_bankmachine0_source_source_payload_we;
wire          basesoc_bankmachine0_source_source_ready;
wire          basesoc_bankmachine0_source_source_valid;
wire          basesoc_bankmachine0_source_valid;
wire   [23:0] basesoc_bankmachine0_syncfifo0_din;
wire   [23:0] basesoc_bankmachine0_syncfifo0_dout;
wire          basesoc_bankmachine0_syncfifo0_re;
wire          basesoc_bankmachine0_syncfifo0_readable;
wire          basesoc_bankmachine0_syncfifo0_we;
wire          basesoc_bankmachine0_syncfifo0_writable;
reg     [1:0] basesoc_bankmachine0_trascon_count = 2'd0;
reg           basesoc_bankmachine0_trascon_ready = 1'd0;
wire          basesoc_bankmachine0_trascon_valid;
reg     [1:0] basesoc_bankmachine0_trccon_count = 2'd0;
reg           basesoc_bankmachine0_trccon_ready = 1'd0;
wire          basesoc_bankmachine0_trccon_valid;
reg     [2:0] basesoc_bankmachine0_twtpcon_count = 3'd0;
reg           basesoc_bankmachine0_twtpcon_ready = 1'd0;
wire          basesoc_bankmachine0_twtpcon_valid;
reg     [2:0] basesoc_bankmachine0_wrport_adr = 3'd0;
wire   [23:0] basesoc_bankmachine0_wrport_dat_r;
wire   [23:0] basesoc_bankmachine0_wrport_dat_w;
wire          basesoc_bankmachine0_wrport_we;
reg           basesoc_bankmachine1_auto_precharge = 1'd0;
reg    [13:0] basesoc_bankmachine1_cmd_payload_a = 14'd0;
wire    [2:0] basesoc_bankmachine1_cmd_payload_ba;
reg           basesoc_bankmachine1_cmd_payload_cas = 1'd0;
reg           basesoc_bankmachine1_cmd_payload_is_cmd = 1'd0;
reg           basesoc_bankmachine1_cmd_payload_is_read = 1'd0;
reg           basesoc_bankmachine1_cmd_payload_is_write = 1'd0;
reg           basesoc_bankmachine1_cmd_payload_ras = 1'd0;
reg           basesoc_bankmachine1_cmd_payload_we = 1'd0;
reg           basesoc_bankmachine1_cmd_ready = 1'd0;
reg           basesoc_bankmachine1_cmd_valid = 1'd0;
reg     [2:0] basesoc_bankmachine1_consume = 3'd0;
wire          basesoc_bankmachine1_do_read;
wire          basesoc_bankmachine1_fifo_in_first;
wire          basesoc_bankmachine1_fifo_in_last;
wire   [20:0] basesoc_bankmachine1_fifo_in_payload_addr;
wire          basesoc_bankmachine1_fifo_in_payload_we;
wire          basesoc_bankmachine1_fifo_out_first;
wire          basesoc_bankmachine1_fifo_out_last;
wire   [20:0] basesoc_bankmachine1_fifo_out_payload_addr;
wire          basesoc_bankmachine1_fifo_out_payload_we;
reg     [3:0] basesoc_bankmachine1_level = 4'd0;
wire          basesoc_bankmachine1_pipe_valid_sink_first;
wire          basesoc_bankmachine1_pipe_valid_sink_last;
wire   [20:0] basesoc_bankmachine1_pipe_valid_sink_payload_addr;
wire          basesoc_bankmachine1_pipe_valid_sink_payload_we;
wire          basesoc_bankmachine1_pipe_valid_sink_ready;
wire          basesoc_bankmachine1_pipe_valid_sink_valid;
reg           basesoc_bankmachine1_pipe_valid_source_first = 1'd0;
reg           basesoc_bankmachine1_pipe_valid_source_last = 1'd0;
reg    [20:0] basesoc_bankmachine1_pipe_valid_source_payload_addr = 21'd0;
reg           basesoc_bankmachine1_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_bankmachine1_pipe_valid_source_ready;
reg           basesoc_bankmachine1_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_bankmachine1_produce = 3'd0;
wire    [2:0] basesoc_bankmachine1_rdport_adr;
wire   [23:0] basesoc_bankmachine1_rdport_dat_r;
reg           basesoc_bankmachine1_refresh_gnt = 1'd0;
wire          basesoc_bankmachine1_refresh_req;
reg           basesoc_bankmachine1_replace = 1'd0;
wire   [20:0] basesoc_bankmachine1_req_addr;
wire          basesoc_bankmachine1_req_lock;
reg           basesoc_bankmachine1_req_rdata_valid = 1'd0;
wire          basesoc_bankmachine1_req_ready;
wire          basesoc_bankmachine1_req_valid;
reg           basesoc_bankmachine1_req_wdata_ready = 1'd0;
wire          basesoc_bankmachine1_req_we;
reg    [13:0] basesoc_bankmachine1_row = 14'd0;
reg           basesoc_bankmachine1_row_close = 1'd0;
reg           basesoc_bankmachine1_row_col_n_addr_sel = 1'd0;
wire          basesoc_bankmachine1_row_hit;
reg           basesoc_bankmachine1_row_open = 1'd0;
reg           basesoc_bankmachine1_row_opened = 1'd0;
reg           basesoc_bankmachine1_sink_first = 1'd0;
reg           basesoc_bankmachine1_sink_last = 1'd0;
wire   [20:0] basesoc_bankmachine1_sink_payload_addr;
wire          basesoc_bankmachine1_sink_payload_we;
wire          basesoc_bankmachine1_sink_ready;
wire          basesoc_bankmachine1_sink_sink_first;
wire          basesoc_bankmachine1_sink_sink_last;
wire   [20:0] basesoc_bankmachine1_sink_sink_payload_addr;
wire          basesoc_bankmachine1_sink_sink_payload_we;
wire          basesoc_bankmachine1_sink_sink_ready;
wire          basesoc_bankmachine1_sink_sink_valid;
wire          basesoc_bankmachine1_sink_valid;
wire          basesoc_bankmachine1_source_first;
wire          basesoc_bankmachine1_source_last;
wire   [20:0] basesoc_bankmachine1_source_payload_addr;
wire          basesoc_bankmachine1_source_payload_we;
wire          basesoc_bankmachine1_source_ready;
wire          basesoc_bankmachine1_source_source_first;
wire          basesoc_bankmachine1_source_source_last;
wire   [20:0] basesoc_bankmachine1_source_source_payload_addr;
wire          basesoc_bankmachine1_source_source_payload_we;
wire          basesoc_bankmachine1_source_source_ready;
wire          basesoc_bankmachine1_source_source_valid;
wire          basesoc_bankmachine1_source_valid;
wire   [23:0] basesoc_bankmachine1_syncfifo1_din;
wire   [23:0] basesoc_bankmachine1_syncfifo1_dout;
wire          basesoc_bankmachine1_syncfifo1_re;
wire          basesoc_bankmachine1_syncfifo1_readable;
wire          basesoc_bankmachine1_syncfifo1_we;
wire          basesoc_bankmachine1_syncfifo1_writable;
reg     [1:0] basesoc_bankmachine1_trascon_count = 2'd0;
reg           basesoc_bankmachine1_trascon_ready = 1'd0;
wire          basesoc_bankmachine1_trascon_valid;
reg     [1:0] basesoc_bankmachine1_trccon_count = 2'd0;
reg           basesoc_bankmachine1_trccon_ready = 1'd0;
wire          basesoc_bankmachine1_trccon_valid;
reg     [2:0] basesoc_bankmachine1_twtpcon_count = 3'd0;
reg           basesoc_bankmachine1_twtpcon_ready = 1'd0;
wire          basesoc_bankmachine1_twtpcon_valid;
reg     [2:0] basesoc_bankmachine1_wrport_adr = 3'd0;
wire   [23:0] basesoc_bankmachine1_wrport_dat_r;
wire   [23:0] basesoc_bankmachine1_wrport_dat_w;
wire          basesoc_bankmachine1_wrport_we;
reg           basesoc_bankmachine2_auto_precharge = 1'd0;
reg    [13:0] basesoc_bankmachine2_cmd_payload_a = 14'd0;
wire    [2:0] basesoc_bankmachine2_cmd_payload_ba;
reg           basesoc_bankmachine2_cmd_payload_cas = 1'd0;
reg           basesoc_bankmachine2_cmd_payload_is_cmd = 1'd0;
reg           basesoc_bankmachine2_cmd_payload_is_read = 1'd0;
reg           basesoc_bankmachine2_cmd_payload_is_write = 1'd0;
reg           basesoc_bankmachine2_cmd_payload_ras = 1'd0;
reg           basesoc_bankmachine2_cmd_payload_we = 1'd0;
reg           basesoc_bankmachine2_cmd_ready = 1'd0;
reg           basesoc_bankmachine2_cmd_valid = 1'd0;
reg     [2:0] basesoc_bankmachine2_consume = 3'd0;
wire          basesoc_bankmachine2_do_read;
wire          basesoc_bankmachine2_fifo_in_first;
wire          basesoc_bankmachine2_fifo_in_last;
wire   [20:0] basesoc_bankmachine2_fifo_in_payload_addr;
wire          basesoc_bankmachine2_fifo_in_payload_we;
wire          basesoc_bankmachine2_fifo_out_first;
wire          basesoc_bankmachine2_fifo_out_last;
wire   [20:0] basesoc_bankmachine2_fifo_out_payload_addr;
wire          basesoc_bankmachine2_fifo_out_payload_we;
reg     [3:0] basesoc_bankmachine2_level = 4'd0;
wire          basesoc_bankmachine2_pipe_valid_sink_first;
wire          basesoc_bankmachine2_pipe_valid_sink_last;
wire   [20:0] basesoc_bankmachine2_pipe_valid_sink_payload_addr;
wire          basesoc_bankmachine2_pipe_valid_sink_payload_we;
wire          basesoc_bankmachine2_pipe_valid_sink_ready;
wire          basesoc_bankmachine2_pipe_valid_sink_valid;
reg           basesoc_bankmachine2_pipe_valid_source_first = 1'd0;
reg           basesoc_bankmachine2_pipe_valid_source_last = 1'd0;
reg    [20:0] basesoc_bankmachine2_pipe_valid_source_payload_addr = 21'd0;
reg           basesoc_bankmachine2_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_bankmachine2_pipe_valid_source_ready;
reg           basesoc_bankmachine2_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_bankmachine2_produce = 3'd0;
wire    [2:0] basesoc_bankmachine2_rdport_adr;
wire   [23:0] basesoc_bankmachine2_rdport_dat_r;
reg           basesoc_bankmachine2_refresh_gnt = 1'd0;
wire          basesoc_bankmachine2_refresh_req;
reg           basesoc_bankmachine2_replace = 1'd0;
wire   [20:0] basesoc_bankmachine2_req_addr;
wire          basesoc_bankmachine2_req_lock;
reg           basesoc_bankmachine2_req_rdata_valid = 1'd0;
wire          basesoc_bankmachine2_req_ready;
wire          basesoc_bankmachine2_req_valid;
reg           basesoc_bankmachine2_req_wdata_ready = 1'd0;
wire          basesoc_bankmachine2_req_we;
reg    [13:0] basesoc_bankmachine2_row = 14'd0;
reg           basesoc_bankmachine2_row_close = 1'd0;
reg           basesoc_bankmachine2_row_col_n_addr_sel = 1'd0;
wire          basesoc_bankmachine2_row_hit;
reg           basesoc_bankmachine2_row_open = 1'd0;
reg           basesoc_bankmachine2_row_opened = 1'd0;
reg           basesoc_bankmachine2_sink_first = 1'd0;
reg           basesoc_bankmachine2_sink_last = 1'd0;
wire   [20:0] basesoc_bankmachine2_sink_payload_addr;
wire          basesoc_bankmachine2_sink_payload_we;
wire          basesoc_bankmachine2_sink_ready;
wire          basesoc_bankmachine2_sink_sink_first;
wire          basesoc_bankmachine2_sink_sink_last;
wire   [20:0] basesoc_bankmachine2_sink_sink_payload_addr;
wire          basesoc_bankmachine2_sink_sink_payload_we;
wire          basesoc_bankmachine2_sink_sink_ready;
wire          basesoc_bankmachine2_sink_sink_valid;
wire          basesoc_bankmachine2_sink_valid;
wire          basesoc_bankmachine2_source_first;
wire          basesoc_bankmachine2_source_last;
wire   [20:0] basesoc_bankmachine2_source_payload_addr;
wire          basesoc_bankmachine2_source_payload_we;
wire          basesoc_bankmachine2_source_ready;
wire          basesoc_bankmachine2_source_source_first;
wire          basesoc_bankmachine2_source_source_last;
wire   [20:0] basesoc_bankmachine2_source_source_payload_addr;
wire          basesoc_bankmachine2_source_source_payload_we;
wire          basesoc_bankmachine2_source_source_ready;
wire          basesoc_bankmachine2_source_source_valid;
wire          basesoc_bankmachine2_source_valid;
wire   [23:0] basesoc_bankmachine2_syncfifo2_din;
wire   [23:0] basesoc_bankmachine2_syncfifo2_dout;
wire          basesoc_bankmachine2_syncfifo2_re;
wire          basesoc_bankmachine2_syncfifo2_readable;
wire          basesoc_bankmachine2_syncfifo2_we;
wire          basesoc_bankmachine2_syncfifo2_writable;
reg     [1:0] basesoc_bankmachine2_trascon_count = 2'd0;
reg           basesoc_bankmachine2_trascon_ready = 1'd0;
wire          basesoc_bankmachine2_trascon_valid;
reg     [1:0] basesoc_bankmachine2_trccon_count = 2'd0;
reg           basesoc_bankmachine2_trccon_ready = 1'd0;
wire          basesoc_bankmachine2_trccon_valid;
reg     [2:0] basesoc_bankmachine2_twtpcon_count = 3'd0;
reg           basesoc_bankmachine2_twtpcon_ready = 1'd0;
wire          basesoc_bankmachine2_twtpcon_valid;
reg     [2:0] basesoc_bankmachine2_wrport_adr = 3'd0;
wire   [23:0] basesoc_bankmachine2_wrport_dat_r;
wire   [23:0] basesoc_bankmachine2_wrport_dat_w;
wire          basesoc_bankmachine2_wrport_we;
reg           basesoc_bankmachine3_auto_precharge = 1'd0;
reg    [13:0] basesoc_bankmachine3_cmd_payload_a = 14'd0;
wire    [2:0] basesoc_bankmachine3_cmd_payload_ba;
reg           basesoc_bankmachine3_cmd_payload_cas = 1'd0;
reg           basesoc_bankmachine3_cmd_payload_is_cmd = 1'd0;
reg           basesoc_bankmachine3_cmd_payload_is_read = 1'd0;
reg           basesoc_bankmachine3_cmd_payload_is_write = 1'd0;
reg           basesoc_bankmachine3_cmd_payload_ras = 1'd0;
reg           basesoc_bankmachine3_cmd_payload_we = 1'd0;
reg           basesoc_bankmachine3_cmd_ready = 1'd0;
reg           basesoc_bankmachine3_cmd_valid = 1'd0;
reg     [2:0] basesoc_bankmachine3_consume = 3'd0;
wire          basesoc_bankmachine3_do_read;
wire          basesoc_bankmachine3_fifo_in_first;
wire          basesoc_bankmachine3_fifo_in_last;
wire   [20:0] basesoc_bankmachine3_fifo_in_payload_addr;
wire          basesoc_bankmachine3_fifo_in_payload_we;
wire          basesoc_bankmachine3_fifo_out_first;
wire          basesoc_bankmachine3_fifo_out_last;
wire   [20:0] basesoc_bankmachine3_fifo_out_payload_addr;
wire          basesoc_bankmachine3_fifo_out_payload_we;
reg     [3:0] basesoc_bankmachine3_level = 4'd0;
wire          basesoc_bankmachine3_pipe_valid_sink_first;
wire          basesoc_bankmachine3_pipe_valid_sink_last;
wire   [20:0] basesoc_bankmachine3_pipe_valid_sink_payload_addr;
wire          basesoc_bankmachine3_pipe_valid_sink_payload_we;
wire          basesoc_bankmachine3_pipe_valid_sink_ready;
wire          basesoc_bankmachine3_pipe_valid_sink_valid;
reg           basesoc_bankmachine3_pipe_valid_source_first = 1'd0;
reg           basesoc_bankmachine3_pipe_valid_source_last = 1'd0;
reg    [20:0] basesoc_bankmachine3_pipe_valid_source_payload_addr = 21'd0;
reg           basesoc_bankmachine3_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_bankmachine3_pipe_valid_source_ready;
reg           basesoc_bankmachine3_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_bankmachine3_produce = 3'd0;
wire    [2:0] basesoc_bankmachine3_rdport_adr;
wire   [23:0] basesoc_bankmachine3_rdport_dat_r;
reg           basesoc_bankmachine3_refresh_gnt = 1'd0;
wire          basesoc_bankmachine3_refresh_req;
reg           basesoc_bankmachine3_replace = 1'd0;
wire   [20:0] basesoc_bankmachine3_req_addr;
wire          basesoc_bankmachine3_req_lock;
reg           basesoc_bankmachine3_req_rdata_valid = 1'd0;
wire          basesoc_bankmachine3_req_ready;
wire          basesoc_bankmachine3_req_valid;
reg           basesoc_bankmachine3_req_wdata_ready = 1'd0;
wire          basesoc_bankmachine3_req_we;
reg    [13:0] basesoc_bankmachine3_row = 14'd0;
reg           basesoc_bankmachine3_row_close = 1'd0;
reg           basesoc_bankmachine3_row_col_n_addr_sel = 1'd0;
wire          basesoc_bankmachine3_row_hit;
reg           basesoc_bankmachine3_row_open = 1'd0;
reg           basesoc_bankmachine3_row_opened = 1'd0;
reg           basesoc_bankmachine3_sink_first = 1'd0;
reg           basesoc_bankmachine3_sink_last = 1'd0;
wire   [20:0] basesoc_bankmachine3_sink_payload_addr;
wire          basesoc_bankmachine3_sink_payload_we;
wire          basesoc_bankmachine3_sink_ready;
wire          basesoc_bankmachine3_sink_sink_first;
wire          basesoc_bankmachine3_sink_sink_last;
wire   [20:0] basesoc_bankmachine3_sink_sink_payload_addr;
wire          basesoc_bankmachine3_sink_sink_payload_we;
wire          basesoc_bankmachine3_sink_sink_ready;
wire          basesoc_bankmachine3_sink_sink_valid;
wire          basesoc_bankmachine3_sink_valid;
wire          basesoc_bankmachine3_source_first;
wire          basesoc_bankmachine3_source_last;
wire   [20:0] basesoc_bankmachine3_source_payload_addr;
wire          basesoc_bankmachine3_source_payload_we;
wire          basesoc_bankmachine3_source_ready;
wire          basesoc_bankmachine3_source_source_first;
wire          basesoc_bankmachine3_source_source_last;
wire   [20:0] basesoc_bankmachine3_source_source_payload_addr;
wire          basesoc_bankmachine3_source_source_payload_we;
wire          basesoc_bankmachine3_source_source_ready;
wire          basesoc_bankmachine3_source_source_valid;
wire          basesoc_bankmachine3_source_valid;
wire   [23:0] basesoc_bankmachine3_syncfifo3_din;
wire   [23:0] basesoc_bankmachine3_syncfifo3_dout;
wire          basesoc_bankmachine3_syncfifo3_re;
wire          basesoc_bankmachine3_syncfifo3_readable;
wire          basesoc_bankmachine3_syncfifo3_we;
wire          basesoc_bankmachine3_syncfifo3_writable;
reg     [1:0] basesoc_bankmachine3_trascon_count = 2'd0;
reg           basesoc_bankmachine3_trascon_ready = 1'd0;
wire          basesoc_bankmachine3_trascon_valid;
reg     [1:0] basesoc_bankmachine3_trccon_count = 2'd0;
reg           basesoc_bankmachine3_trccon_ready = 1'd0;
wire          basesoc_bankmachine3_trccon_valid;
reg     [2:0] basesoc_bankmachine3_twtpcon_count = 3'd0;
reg           basesoc_bankmachine3_twtpcon_ready = 1'd0;
wire          basesoc_bankmachine3_twtpcon_valid;
reg     [2:0] basesoc_bankmachine3_wrport_adr = 3'd0;
wire   [23:0] basesoc_bankmachine3_wrport_dat_r;
wire   [23:0] basesoc_bankmachine3_wrport_dat_w;
wire          basesoc_bankmachine3_wrport_we;
reg           basesoc_bankmachine4_auto_precharge = 1'd0;
reg    [13:0] basesoc_bankmachine4_cmd_payload_a = 14'd0;
wire    [2:0] basesoc_bankmachine4_cmd_payload_ba;
reg           basesoc_bankmachine4_cmd_payload_cas = 1'd0;
reg           basesoc_bankmachine4_cmd_payload_is_cmd = 1'd0;
reg           basesoc_bankmachine4_cmd_payload_is_read = 1'd0;
reg           basesoc_bankmachine4_cmd_payload_is_write = 1'd0;
reg           basesoc_bankmachine4_cmd_payload_ras = 1'd0;
reg           basesoc_bankmachine4_cmd_payload_we = 1'd0;
reg           basesoc_bankmachine4_cmd_ready = 1'd0;
reg           basesoc_bankmachine4_cmd_valid = 1'd0;
reg     [2:0] basesoc_bankmachine4_consume = 3'd0;
wire          basesoc_bankmachine4_do_read;
wire          basesoc_bankmachine4_fifo_in_first;
wire          basesoc_bankmachine4_fifo_in_last;
wire   [20:0] basesoc_bankmachine4_fifo_in_payload_addr;
wire          basesoc_bankmachine4_fifo_in_payload_we;
wire          basesoc_bankmachine4_fifo_out_first;
wire          basesoc_bankmachine4_fifo_out_last;
wire   [20:0] basesoc_bankmachine4_fifo_out_payload_addr;
wire          basesoc_bankmachine4_fifo_out_payload_we;
reg     [3:0] basesoc_bankmachine4_level = 4'd0;
wire          basesoc_bankmachine4_pipe_valid_sink_first;
wire          basesoc_bankmachine4_pipe_valid_sink_last;
wire   [20:0] basesoc_bankmachine4_pipe_valid_sink_payload_addr;
wire          basesoc_bankmachine4_pipe_valid_sink_payload_we;
wire          basesoc_bankmachine4_pipe_valid_sink_ready;
wire          basesoc_bankmachine4_pipe_valid_sink_valid;
reg           basesoc_bankmachine4_pipe_valid_source_first = 1'd0;
reg           basesoc_bankmachine4_pipe_valid_source_last = 1'd0;
reg    [20:0] basesoc_bankmachine4_pipe_valid_source_payload_addr = 21'd0;
reg           basesoc_bankmachine4_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_bankmachine4_pipe_valid_source_ready;
reg           basesoc_bankmachine4_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_bankmachine4_produce = 3'd0;
wire    [2:0] basesoc_bankmachine4_rdport_adr;
wire   [23:0] basesoc_bankmachine4_rdport_dat_r;
reg           basesoc_bankmachine4_refresh_gnt = 1'd0;
wire          basesoc_bankmachine4_refresh_req;
reg           basesoc_bankmachine4_replace = 1'd0;
wire   [20:0] basesoc_bankmachine4_req_addr;
wire          basesoc_bankmachine4_req_lock;
reg           basesoc_bankmachine4_req_rdata_valid = 1'd0;
wire          basesoc_bankmachine4_req_ready;
wire          basesoc_bankmachine4_req_valid;
reg           basesoc_bankmachine4_req_wdata_ready = 1'd0;
wire          basesoc_bankmachine4_req_we;
reg    [13:0] basesoc_bankmachine4_row = 14'd0;
reg           basesoc_bankmachine4_row_close = 1'd0;
reg           basesoc_bankmachine4_row_col_n_addr_sel = 1'd0;
wire          basesoc_bankmachine4_row_hit;
reg           basesoc_bankmachine4_row_open = 1'd0;
reg           basesoc_bankmachine4_row_opened = 1'd0;
reg           basesoc_bankmachine4_sink_first = 1'd0;
reg           basesoc_bankmachine4_sink_last = 1'd0;
wire   [20:0] basesoc_bankmachine4_sink_payload_addr;
wire          basesoc_bankmachine4_sink_payload_we;
wire          basesoc_bankmachine4_sink_ready;
wire          basesoc_bankmachine4_sink_sink_first;
wire          basesoc_bankmachine4_sink_sink_last;
wire   [20:0] basesoc_bankmachine4_sink_sink_payload_addr;
wire          basesoc_bankmachine4_sink_sink_payload_we;
wire          basesoc_bankmachine4_sink_sink_ready;
wire          basesoc_bankmachine4_sink_sink_valid;
wire          basesoc_bankmachine4_sink_valid;
wire          basesoc_bankmachine4_source_first;
wire          basesoc_bankmachine4_source_last;
wire   [20:0] basesoc_bankmachine4_source_payload_addr;
wire          basesoc_bankmachine4_source_payload_we;
wire          basesoc_bankmachine4_source_ready;
wire          basesoc_bankmachine4_source_source_first;
wire          basesoc_bankmachine4_source_source_last;
wire   [20:0] basesoc_bankmachine4_source_source_payload_addr;
wire          basesoc_bankmachine4_source_source_payload_we;
wire          basesoc_bankmachine4_source_source_ready;
wire          basesoc_bankmachine4_source_source_valid;
wire          basesoc_bankmachine4_source_valid;
wire   [23:0] basesoc_bankmachine4_syncfifo4_din;
wire   [23:0] basesoc_bankmachine4_syncfifo4_dout;
wire          basesoc_bankmachine4_syncfifo4_re;
wire          basesoc_bankmachine4_syncfifo4_readable;
wire          basesoc_bankmachine4_syncfifo4_we;
wire          basesoc_bankmachine4_syncfifo4_writable;
reg     [1:0] basesoc_bankmachine4_trascon_count = 2'd0;
reg           basesoc_bankmachine4_trascon_ready = 1'd0;
wire          basesoc_bankmachine4_trascon_valid;
reg     [1:0] basesoc_bankmachine4_trccon_count = 2'd0;
reg           basesoc_bankmachine4_trccon_ready = 1'd0;
wire          basesoc_bankmachine4_trccon_valid;
reg     [2:0] basesoc_bankmachine4_twtpcon_count = 3'd0;
reg           basesoc_bankmachine4_twtpcon_ready = 1'd0;
wire          basesoc_bankmachine4_twtpcon_valid;
reg     [2:0] basesoc_bankmachine4_wrport_adr = 3'd0;
wire   [23:0] basesoc_bankmachine4_wrport_dat_r;
wire   [23:0] basesoc_bankmachine4_wrport_dat_w;
wire          basesoc_bankmachine4_wrport_we;
reg           basesoc_bankmachine5_auto_precharge = 1'd0;
reg    [13:0] basesoc_bankmachine5_cmd_payload_a = 14'd0;
wire    [2:0] basesoc_bankmachine5_cmd_payload_ba;
reg           basesoc_bankmachine5_cmd_payload_cas = 1'd0;
reg           basesoc_bankmachine5_cmd_payload_is_cmd = 1'd0;
reg           basesoc_bankmachine5_cmd_payload_is_read = 1'd0;
reg           basesoc_bankmachine5_cmd_payload_is_write = 1'd0;
reg           basesoc_bankmachine5_cmd_payload_ras = 1'd0;
reg           basesoc_bankmachine5_cmd_payload_we = 1'd0;
reg           basesoc_bankmachine5_cmd_ready = 1'd0;
reg           basesoc_bankmachine5_cmd_valid = 1'd0;
reg     [2:0] basesoc_bankmachine5_consume = 3'd0;
wire          basesoc_bankmachine5_do_read;
wire          basesoc_bankmachine5_fifo_in_first;
wire          basesoc_bankmachine5_fifo_in_last;
wire   [20:0] basesoc_bankmachine5_fifo_in_payload_addr;
wire          basesoc_bankmachine5_fifo_in_payload_we;
wire          basesoc_bankmachine5_fifo_out_first;
wire          basesoc_bankmachine5_fifo_out_last;
wire   [20:0] basesoc_bankmachine5_fifo_out_payload_addr;
wire          basesoc_bankmachine5_fifo_out_payload_we;
reg     [3:0] basesoc_bankmachine5_level = 4'd0;
wire          basesoc_bankmachine5_pipe_valid_sink_first;
wire          basesoc_bankmachine5_pipe_valid_sink_last;
wire   [20:0] basesoc_bankmachine5_pipe_valid_sink_payload_addr;
wire          basesoc_bankmachine5_pipe_valid_sink_payload_we;
wire          basesoc_bankmachine5_pipe_valid_sink_ready;
wire          basesoc_bankmachine5_pipe_valid_sink_valid;
reg           basesoc_bankmachine5_pipe_valid_source_first = 1'd0;
reg           basesoc_bankmachine5_pipe_valid_source_last = 1'd0;
reg    [20:0] basesoc_bankmachine5_pipe_valid_source_payload_addr = 21'd0;
reg           basesoc_bankmachine5_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_bankmachine5_pipe_valid_source_ready;
reg           basesoc_bankmachine5_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_bankmachine5_produce = 3'd0;
wire    [2:0] basesoc_bankmachine5_rdport_adr;
wire   [23:0] basesoc_bankmachine5_rdport_dat_r;
reg           basesoc_bankmachine5_refresh_gnt = 1'd0;
wire          basesoc_bankmachine5_refresh_req;
reg           basesoc_bankmachine5_replace = 1'd0;
wire   [20:0] basesoc_bankmachine5_req_addr;
wire          basesoc_bankmachine5_req_lock;
reg           basesoc_bankmachine5_req_rdata_valid = 1'd0;
wire          basesoc_bankmachine5_req_ready;
wire          basesoc_bankmachine5_req_valid;
reg           basesoc_bankmachine5_req_wdata_ready = 1'd0;
wire          basesoc_bankmachine5_req_we;
reg    [13:0] basesoc_bankmachine5_row = 14'd0;
reg           basesoc_bankmachine5_row_close = 1'd0;
reg           basesoc_bankmachine5_row_col_n_addr_sel = 1'd0;
wire          basesoc_bankmachine5_row_hit;
reg           basesoc_bankmachine5_row_open = 1'd0;
reg           basesoc_bankmachine5_row_opened = 1'd0;
reg           basesoc_bankmachine5_sink_first = 1'd0;
reg           basesoc_bankmachine5_sink_last = 1'd0;
wire   [20:0] basesoc_bankmachine5_sink_payload_addr;
wire          basesoc_bankmachine5_sink_payload_we;
wire          basesoc_bankmachine5_sink_ready;
wire          basesoc_bankmachine5_sink_sink_first;
wire          basesoc_bankmachine5_sink_sink_last;
wire   [20:0] basesoc_bankmachine5_sink_sink_payload_addr;
wire          basesoc_bankmachine5_sink_sink_payload_we;
wire          basesoc_bankmachine5_sink_sink_ready;
wire          basesoc_bankmachine5_sink_sink_valid;
wire          basesoc_bankmachine5_sink_valid;
wire          basesoc_bankmachine5_source_first;
wire          basesoc_bankmachine5_source_last;
wire   [20:0] basesoc_bankmachine5_source_payload_addr;
wire          basesoc_bankmachine5_source_payload_we;
wire          basesoc_bankmachine5_source_ready;
wire          basesoc_bankmachine5_source_source_first;
wire          basesoc_bankmachine5_source_source_last;
wire   [20:0] basesoc_bankmachine5_source_source_payload_addr;
wire          basesoc_bankmachine5_source_source_payload_we;
wire          basesoc_bankmachine5_source_source_ready;
wire          basesoc_bankmachine5_source_source_valid;
wire          basesoc_bankmachine5_source_valid;
wire   [23:0] basesoc_bankmachine5_syncfifo5_din;
wire   [23:0] basesoc_bankmachine5_syncfifo5_dout;
wire          basesoc_bankmachine5_syncfifo5_re;
wire          basesoc_bankmachine5_syncfifo5_readable;
wire          basesoc_bankmachine5_syncfifo5_we;
wire          basesoc_bankmachine5_syncfifo5_writable;
reg     [1:0] basesoc_bankmachine5_trascon_count = 2'd0;
reg           basesoc_bankmachine5_trascon_ready = 1'd0;
wire          basesoc_bankmachine5_trascon_valid;
reg     [1:0] basesoc_bankmachine5_trccon_count = 2'd0;
reg           basesoc_bankmachine5_trccon_ready = 1'd0;
wire          basesoc_bankmachine5_trccon_valid;
reg     [2:0] basesoc_bankmachine5_twtpcon_count = 3'd0;
reg           basesoc_bankmachine5_twtpcon_ready = 1'd0;
wire          basesoc_bankmachine5_twtpcon_valid;
reg     [2:0] basesoc_bankmachine5_wrport_adr = 3'd0;
wire   [23:0] basesoc_bankmachine5_wrport_dat_r;
wire   [23:0] basesoc_bankmachine5_wrport_dat_w;
wire          basesoc_bankmachine5_wrport_we;
reg           basesoc_bankmachine6_auto_precharge = 1'd0;
reg    [13:0] basesoc_bankmachine6_cmd_payload_a = 14'd0;
wire    [2:0] basesoc_bankmachine6_cmd_payload_ba;
reg           basesoc_bankmachine6_cmd_payload_cas = 1'd0;
reg           basesoc_bankmachine6_cmd_payload_is_cmd = 1'd0;
reg           basesoc_bankmachine6_cmd_payload_is_read = 1'd0;
reg           basesoc_bankmachine6_cmd_payload_is_write = 1'd0;
reg           basesoc_bankmachine6_cmd_payload_ras = 1'd0;
reg           basesoc_bankmachine6_cmd_payload_we = 1'd0;
reg           basesoc_bankmachine6_cmd_ready = 1'd0;
reg           basesoc_bankmachine6_cmd_valid = 1'd0;
reg     [2:0] basesoc_bankmachine6_consume = 3'd0;
wire          basesoc_bankmachine6_do_read;
wire          basesoc_bankmachine6_fifo_in_first;
wire          basesoc_bankmachine6_fifo_in_last;
wire   [20:0] basesoc_bankmachine6_fifo_in_payload_addr;
wire          basesoc_bankmachine6_fifo_in_payload_we;
wire          basesoc_bankmachine6_fifo_out_first;
wire          basesoc_bankmachine6_fifo_out_last;
wire   [20:0] basesoc_bankmachine6_fifo_out_payload_addr;
wire          basesoc_bankmachine6_fifo_out_payload_we;
reg     [3:0] basesoc_bankmachine6_level = 4'd0;
wire          basesoc_bankmachine6_pipe_valid_sink_first;
wire          basesoc_bankmachine6_pipe_valid_sink_last;
wire   [20:0] basesoc_bankmachine6_pipe_valid_sink_payload_addr;
wire          basesoc_bankmachine6_pipe_valid_sink_payload_we;
wire          basesoc_bankmachine6_pipe_valid_sink_ready;
wire          basesoc_bankmachine6_pipe_valid_sink_valid;
reg           basesoc_bankmachine6_pipe_valid_source_first = 1'd0;
reg           basesoc_bankmachine6_pipe_valid_source_last = 1'd0;
reg    [20:0] basesoc_bankmachine6_pipe_valid_source_payload_addr = 21'd0;
reg           basesoc_bankmachine6_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_bankmachine6_pipe_valid_source_ready;
reg           basesoc_bankmachine6_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_bankmachine6_produce = 3'd0;
wire    [2:0] basesoc_bankmachine6_rdport_adr;
wire   [23:0] basesoc_bankmachine6_rdport_dat_r;
reg           basesoc_bankmachine6_refresh_gnt = 1'd0;
wire          basesoc_bankmachine6_refresh_req;
reg           basesoc_bankmachine6_replace = 1'd0;
wire   [20:0] basesoc_bankmachine6_req_addr;
wire          basesoc_bankmachine6_req_lock;
reg           basesoc_bankmachine6_req_rdata_valid = 1'd0;
wire          basesoc_bankmachine6_req_ready;
wire          basesoc_bankmachine6_req_valid;
reg           basesoc_bankmachine6_req_wdata_ready = 1'd0;
wire          basesoc_bankmachine6_req_we;
reg    [13:0] basesoc_bankmachine6_row = 14'd0;
reg           basesoc_bankmachine6_row_close = 1'd0;
reg           basesoc_bankmachine6_row_col_n_addr_sel = 1'd0;
wire          basesoc_bankmachine6_row_hit;
reg           basesoc_bankmachine6_row_open = 1'd0;
reg           basesoc_bankmachine6_row_opened = 1'd0;
reg           basesoc_bankmachine6_sink_first = 1'd0;
reg           basesoc_bankmachine6_sink_last = 1'd0;
wire   [20:0] basesoc_bankmachine6_sink_payload_addr;
wire          basesoc_bankmachine6_sink_payload_we;
wire          basesoc_bankmachine6_sink_ready;
wire          basesoc_bankmachine6_sink_sink_first;
wire          basesoc_bankmachine6_sink_sink_last;
wire   [20:0] basesoc_bankmachine6_sink_sink_payload_addr;
wire          basesoc_bankmachine6_sink_sink_payload_we;
wire          basesoc_bankmachine6_sink_sink_ready;
wire          basesoc_bankmachine6_sink_sink_valid;
wire          basesoc_bankmachine6_sink_valid;
wire          basesoc_bankmachine6_source_first;
wire          basesoc_bankmachine6_source_last;
wire   [20:0] basesoc_bankmachine6_source_payload_addr;
wire          basesoc_bankmachine6_source_payload_we;
wire          basesoc_bankmachine6_source_ready;
wire          basesoc_bankmachine6_source_source_first;
wire          basesoc_bankmachine6_source_source_last;
wire   [20:0] basesoc_bankmachine6_source_source_payload_addr;
wire          basesoc_bankmachine6_source_source_payload_we;
wire          basesoc_bankmachine6_source_source_ready;
wire          basesoc_bankmachine6_source_source_valid;
wire          basesoc_bankmachine6_source_valid;
wire   [23:0] basesoc_bankmachine6_syncfifo6_din;
wire   [23:0] basesoc_bankmachine6_syncfifo6_dout;
wire          basesoc_bankmachine6_syncfifo6_re;
wire          basesoc_bankmachine6_syncfifo6_readable;
wire          basesoc_bankmachine6_syncfifo6_we;
wire          basesoc_bankmachine6_syncfifo6_writable;
reg     [1:0] basesoc_bankmachine6_trascon_count = 2'd0;
reg           basesoc_bankmachine6_trascon_ready = 1'd0;
wire          basesoc_bankmachine6_trascon_valid;
reg     [1:0] basesoc_bankmachine6_trccon_count = 2'd0;
reg           basesoc_bankmachine6_trccon_ready = 1'd0;
wire          basesoc_bankmachine6_trccon_valid;
reg     [2:0] basesoc_bankmachine6_twtpcon_count = 3'd0;
reg           basesoc_bankmachine6_twtpcon_ready = 1'd0;
wire          basesoc_bankmachine6_twtpcon_valid;
reg     [2:0] basesoc_bankmachine6_wrport_adr = 3'd0;
wire   [23:0] basesoc_bankmachine6_wrport_dat_r;
wire   [23:0] basesoc_bankmachine6_wrport_dat_w;
wire          basesoc_bankmachine6_wrport_we;
reg           basesoc_bankmachine7_auto_precharge = 1'd0;
reg    [13:0] basesoc_bankmachine7_cmd_payload_a = 14'd0;
wire    [2:0] basesoc_bankmachine7_cmd_payload_ba;
reg           basesoc_bankmachine7_cmd_payload_cas = 1'd0;
reg           basesoc_bankmachine7_cmd_payload_is_cmd = 1'd0;
reg           basesoc_bankmachine7_cmd_payload_is_read = 1'd0;
reg           basesoc_bankmachine7_cmd_payload_is_write = 1'd0;
reg           basesoc_bankmachine7_cmd_payload_ras = 1'd0;
reg           basesoc_bankmachine7_cmd_payload_we = 1'd0;
reg           basesoc_bankmachine7_cmd_ready = 1'd0;
reg           basesoc_bankmachine7_cmd_valid = 1'd0;
reg     [2:0] basesoc_bankmachine7_consume = 3'd0;
wire          basesoc_bankmachine7_do_read;
wire          basesoc_bankmachine7_fifo_in_first;
wire          basesoc_bankmachine7_fifo_in_last;
wire   [20:0] basesoc_bankmachine7_fifo_in_payload_addr;
wire          basesoc_bankmachine7_fifo_in_payload_we;
wire          basesoc_bankmachine7_fifo_out_first;
wire          basesoc_bankmachine7_fifo_out_last;
wire   [20:0] basesoc_bankmachine7_fifo_out_payload_addr;
wire          basesoc_bankmachine7_fifo_out_payload_we;
reg     [3:0] basesoc_bankmachine7_level = 4'd0;
wire          basesoc_bankmachine7_pipe_valid_sink_first;
wire          basesoc_bankmachine7_pipe_valid_sink_last;
wire   [20:0] basesoc_bankmachine7_pipe_valid_sink_payload_addr;
wire          basesoc_bankmachine7_pipe_valid_sink_payload_we;
wire          basesoc_bankmachine7_pipe_valid_sink_ready;
wire          basesoc_bankmachine7_pipe_valid_sink_valid;
reg           basesoc_bankmachine7_pipe_valid_source_first = 1'd0;
reg           basesoc_bankmachine7_pipe_valid_source_last = 1'd0;
reg    [20:0] basesoc_bankmachine7_pipe_valid_source_payload_addr = 21'd0;
reg           basesoc_bankmachine7_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_bankmachine7_pipe_valid_source_ready;
reg           basesoc_bankmachine7_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_bankmachine7_produce = 3'd0;
wire    [2:0] basesoc_bankmachine7_rdport_adr;
wire   [23:0] basesoc_bankmachine7_rdport_dat_r;
reg           basesoc_bankmachine7_refresh_gnt = 1'd0;
wire          basesoc_bankmachine7_refresh_req;
reg           basesoc_bankmachine7_replace = 1'd0;
wire   [20:0] basesoc_bankmachine7_req_addr;
wire          basesoc_bankmachine7_req_lock;
reg           basesoc_bankmachine7_req_rdata_valid = 1'd0;
wire          basesoc_bankmachine7_req_ready;
wire          basesoc_bankmachine7_req_valid;
reg           basesoc_bankmachine7_req_wdata_ready = 1'd0;
wire          basesoc_bankmachine7_req_we;
reg    [13:0] basesoc_bankmachine7_row = 14'd0;
reg           basesoc_bankmachine7_row_close = 1'd0;
reg           basesoc_bankmachine7_row_col_n_addr_sel = 1'd0;
wire          basesoc_bankmachine7_row_hit;
reg           basesoc_bankmachine7_row_open = 1'd0;
reg           basesoc_bankmachine7_row_opened = 1'd0;
reg           basesoc_bankmachine7_sink_first = 1'd0;
reg           basesoc_bankmachine7_sink_last = 1'd0;
wire   [20:0] basesoc_bankmachine7_sink_payload_addr;
wire          basesoc_bankmachine7_sink_payload_we;
wire          basesoc_bankmachine7_sink_ready;
wire          basesoc_bankmachine7_sink_sink_first;
wire          basesoc_bankmachine7_sink_sink_last;
wire   [20:0] basesoc_bankmachine7_sink_sink_payload_addr;
wire          basesoc_bankmachine7_sink_sink_payload_we;
wire          basesoc_bankmachine7_sink_sink_ready;
wire          basesoc_bankmachine7_sink_sink_valid;
wire          basesoc_bankmachine7_sink_valid;
wire          basesoc_bankmachine7_source_first;
wire          basesoc_bankmachine7_source_last;
wire   [20:0] basesoc_bankmachine7_source_payload_addr;
wire          basesoc_bankmachine7_source_payload_we;
wire          basesoc_bankmachine7_source_ready;
wire          basesoc_bankmachine7_source_source_first;
wire          basesoc_bankmachine7_source_source_last;
wire   [20:0] basesoc_bankmachine7_source_source_payload_addr;
wire          basesoc_bankmachine7_source_source_payload_we;
wire          basesoc_bankmachine7_source_source_ready;
wire          basesoc_bankmachine7_source_source_valid;
wire          basesoc_bankmachine7_source_valid;
wire   [23:0] basesoc_bankmachine7_syncfifo7_din;
wire   [23:0] basesoc_bankmachine7_syncfifo7_dout;
wire          basesoc_bankmachine7_syncfifo7_re;
wire          basesoc_bankmachine7_syncfifo7_readable;
wire          basesoc_bankmachine7_syncfifo7_we;
wire          basesoc_bankmachine7_syncfifo7_writable;
reg     [1:0] basesoc_bankmachine7_trascon_count = 2'd0;
reg           basesoc_bankmachine7_trascon_ready = 1'd0;
wire          basesoc_bankmachine7_trascon_valid;
reg     [1:0] basesoc_bankmachine7_trccon_count = 2'd0;
reg           basesoc_bankmachine7_trccon_ready = 1'd0;
wire          basesoc_bankmachine7_trccon_valid;
reg     [2:0] basesoc_bankmachine7_twtpcon_count = 3'd0;
reg           basesoc_bankmachine7_twtpcon_ready = 1'd0;
wire          basesoc_bankmachine7_twtpcon_valid;
reg     [2:0] basesoc_bankmachine7_wrport_adr = 3'd0;
wire   [23:0] basesoc_bankmachine7_wrport_dat_r;
wire   [23:0] basesoc_bankmachine7_wrport_dat_w;
wire          basesoc_bankmachine7_wrport_we;
wire   [14:0] basesoc_basesoc_adr;
reg           basesoc_basesoc_adr_burst = 1'd0;
wire   [31:0] basesoc_basesoc_dat_r;
reg           basesoc_basesoc_ram_bus_ack = 1'd0;
wire   [29:0] basesoc_basesoc_ram_bus_adr;
wire    [1:0] basesoc_basesoc_ram_bus_bte;
wire    [2:0] basesoc_basesoc_ram_bus_cti;
wire          basesoc_basesoc_ram_bus_cyc;
wire   [31:0] basesoc_basesoc_ram_bus_dat_r;
wire   [31:0] basesoc_basesoc_ram_bus_dat_w;
reg           basesoc_basesoc_ram_bus_err = 1'd0;
wire    [3:0] basesoc_basesoc_ram_bus_sel;
wire          basesoc_basesoc_ram_bus_stb;
wire          basesoc_basesoc_ram_bus_we;
wire          basesoc_bus_error;
reg    [31:0] basesoc_bus_errors = 32'd0;
reg           basesoc_bus_errors_re = 1'd0;
wire   [31:0] basesoc_bus_errors_status;
wire          basesoc_bus_errors_we;
wire          basesoc_cas_allowed;
wire          basesoc_choose_cmd_ce;
wire   [13:0] basesoc_choose_cmd_cmd_payload_a;
wire    [2:0] basesoc_choose_cmd_cmd_payload_ba;
reg           basesoc_choose_cmd_cmd_payload_cas = 1'd0;
wire          basesoc_choose_cmd_cmd_payload_is_cmd;
wire          basesoc_choose_cmd_cmd_payload_is_read;
wire          basesoc_choose_cmd_cmd_payload_is_write;
reg           basesoc_choose_cmd_cmd_payload_ras = 1'd0;
reg           basesoc_choose_cmd_cmd_payload_we = 1'd0;
reg           basesoc_choose_cmd_cmd_ready = 1'd0;
wire          basesoc_choose_cmd_cmd_valid;
reg     [2:0] basesoc_choose_cmd_grant = 3'd0;
wire    [7:0] basesoc_choose_cmd_request;
reg     [7:0] basesoc_choose_cmd_valids = 8'd0;
reg           basesoc_choose_cmd_want_activates = 1'd0;
reg           basesoc_choose_cmd_want_cmds = 1'd0;
reg           basesoc_choose_cmd_want_reads = 1'd0;
reg           basesoc_choose_cmd_want_writes = 1'd0;
wire          basesoc_choose_req_ce;
wire   [13:0] basesoc_choose_req_cmd_payload_a;
wire    [2:0] basesoc_choose_req_cmd_payload_ba;
reg           basesoc_choose_req_cmd_payload_cas = 1'd0;
wire          basesoc_choose_req_cmd_payload_is_cmd;
wire          basesoc_choose_req_cmd_payload_is_read;
wire          basesoc_choose_req_cmd_payload_is_write;
reg           basesoc_choose_req_cmd_payload_ras = 1'd0;
reg           basesoc_choose_req_cmd_payload_we = 1'd0;
reg           basesoc_choose_req_cmd_ready = 1'd0;
wire          basesoc_choose_req_cmd_valid;
reg     [2:0] basesoc_choose_req_grant = 3'd0;
wire    [7:0] basesoc_choose_req_request;
reg     [7:0] basesoc_choose_req_valids = 8'd0;
reg           basesoc_choose_req_want_activates = 1'd0;
reg           basesoc_choose_req_want_cmds = 1'd0;
reg           basesoc_choose_req_want_reads = 1'd0;
reg           basesoc_choose_req_want_writes = 1'd0;
wire          basesoc_cke;
wire          basesoc_clintbus_ack;
wire   [29:0] basesoc_clintbus_adr;
wire    [1:0] basesoc_clintbus_bte;
wire    [2:0] basesoc_clintbus_cti;
wire          basesoc_clintbus_cyc;
wire   [31:0] basesoc_clintbus_dat_r;
wire   [31:0] basesoc_clintbus_dat_w;
reg           basesoc_clintbus_err = 1'd0;
wire    [3:0] basesoc_clintbus_sel;
wire          basesoc_clintbus_stb;
wire          basesoc_clintbus_we;
reg           basesoc_cmd_last = 1'd0;
reg    [13:0] basesoc_cmd_payload_a = 14'd0;
reg     [2:0] basesoc_cmd_payload_ba = 3'd0;
reg           basesoc_cmd_payload_cas = 1'd0;
reg           basesoc_cmd_payload_is_read = 1'd0;
reg           basesoc_cmd_payload_is_write = 1'd0;
reg           basesoc_cmd_payload_ras = 1'd0;
reg           basesoc_cmd_payload_we = 1'd0;
reg           basesoc_cmd_ready = 1'd0;
reg           basesoc_cmd_valid = 1'd0;
wire          basesoc_cpu_rst;
reg           basesoc_csr_dfi_p0_act_n = 1'd1;
wire   [13:0] basesoc_csr_dfi_p0_address;
wire    [2:0] basesoc_csr_dfi_p0_bank;
reg           basesoc_csr_dfi_p0_cas_n = 1'd1;
reg           basesoc_csr_dfi_p0_cke = 1'd0;
reg           basesoc_csr_dfi_p0_cs_n = 1'd1;
reg           basesoc_csr_dfi_p0_odt = 1'd0;
reg           basesoc_csr_dfi_p0_ras_n = 1'd1;
reg   [127:0] basesoc_csr_dfi_p0_rddata = 128'd0;
wire          basesoc_csr_dfi_p0_rddata_en;
reg           basesoc_csr_dfi_p0_rddata_valid = 1'd0;
wire          basesoc_csr_dfi_p0_reset_n;
reg           basesoc_csr_dfi_p0_we_n = 1'd1;
wire  [127:0] basesoc_csr_dfi_p0_wrdata;
wire          basesoc_csr_dfi_p0_wrdata_en;
wire   [15:0] basesoc_csr_dfi_p0_wrdata_mask;
reg           basesoc_csr_dfi_p1_act_n = 1'd1;
wire   [13:0] basesoc_csr_dfi_p1_address;
wire    [2:0] basesoc_csr_dfi_p1_bank;
reg           basesoc_csr_dfi_p1_cas_n = 1'd1;
reg           basesoc_csr_dfi_p1_cke = 1'd0;
reg           basesoc_csr_dfi_p1_cs_n = 1'd1;
reg           basesoc_csr_dfi_p1_odt = 1'd0;
reg           basesoc_csr_dfi_p1_ras_n = 1'd1;
reg   [127:0] basesoc_csr_dfi_p1_rddata = 128'd0;
wire          basesoc_csr_dfi_p1_rddata_en;
reg           basesoc_csr_dfi_p1_rddata_valid = 1'd0;
wire          basesoc_csr_dfi_p1_reset_n;
reg           basesoc_csr_dfi_p1_we_n = 1'd1;
wire  [127:0] basesoc_csr_dfi_p1_wrdata;
wire          basesoc_csr_dfi_p1_wrdata_en;
wire   [15:0] basesoc_csr_dfi_p1_wrdata_mask;
reg           basesoc_dbus_cmd_first = 1'd0;
reg           basesoc_dbus_cmd_last = 1'd0;
wire   [31:0] basesoc_dbus_cmd_payload_addr;
wire          basesoc_dbus_cmd_payload_we;
wire          basesoc_dbus_cmd_ready;
wire          basesoc_dbus_cmd_valid;
wire          basesoc_dbus_rdata_first;
wire          basesoc_dbus_rdata_last;
wire  [255:0] basesoc_dbus_rdata_payload_data;
wire          basesoc_dbus_rdata_ready;
wire          basesoc_dbus_rdata_valid;
reg           basesoc_dbus_wdata_first = 1'd0;
reg           basesoc_dbus_wdata_last = 1'd0;
wire  [255:0] basesoc_dbus_wdata_payload_data;
wire   [31:0] basesoc_dbus_wdata_payload_we;
wire          basesoc_dbus_wdata_ready;
wire          basesoc_dbus_wdata_valid;
reg           basesoc_dfi_p0_act_n = 1'd1;
reg    [13:0] basesoc_dfi_p0_address = 14'd0;
reg     [2:0] basesoc_dfi_p0_bank = 3'd0;
reg           basesoc_dfi_p0_cas_n = 1'd1;
wire          basesoc_dfi_p0_cke;
reg           basesoc_dfi_p0_cs_n = 1'd1;
wire          basesoc_dfi_p0_odt;
reg           basesoc_dfi_p0_ras_n = 1'd1;
wire  [127:0] basesoc_dfi_p0_rddata;
reg           basesoc_dfi_p0_rddata_en = 1'd0;
wire          basesoc_dfi_p0_rddata_valid;
wire          basesoc_dfi_p0_reset_n;
reg           basesoc_dfi_p0_we_n = 1'd1;
wire  [127:0] basesoc_dfi_p0_wrdata;
reg           basesoc_dfi_p0_wrdata_en = 1'd0;
wire   [15:0] basesoc_dfi_p0_wrdata_mask;
reg           basesoc_dfi_p1_act_n = 1'd1;
reg    [13:0] basesoc_dfi_p1_address = 14'd0;
reg     [2:0] basesoc_dfi_p1_bank = 3'd0;
reg           basesoc_dfi_p1_cas_n = 1'd1;
wire          basesoc_dfi_p1_cke;
reg           basesoc_dfi_p1_cs_n = 1'd1;
wire          basesoc_dfi_p1_odt;
reg           basesoc_dfi_p1_ras_n = 1'd1;
wire  [127:0] basesoc_dfi_p1_rddata;
reg           basesoc_dfi_p1_rddata_en = 1'd0;
wire          basesoc_dfi_p1_rddata_valid;
wire          basesoc_dfi_p1_reset_n;
reg           basesoc_dfi_p1_we_n = 1'd1;
wire  [127:0] basesoc_dfi_p1_wrdata;
reg           basesoc_dfi_p1_wrdata_en = 1'd0;
wire   [15:0] basesoc_dfi_p1_wrdata_mask;
reg           basesoc_en0 = 1'd0;
reg           basesoc_en1 = 1'd0;
reg           basesoc_ext_dfi_p0_act_n = 1'd1;
reg    [13:0] basesoc_ext_dfi_p0_address = 14'd0;
reg     [2:0] basesoc_ext_dfi_p0_bank = 3'd0;
reg           basesoc_ext_dfi_p0_cas_n = 1'd1;
reg           basesoc_ext_dfi_p0_cke = 1'd0;
reg           basesoc_ext_dfi_p0_cs_n = 1'd1;
reg           basesoc_ext_dfi_p0_odt = 1'd0;
reg           basesoc_ext_dfi_p0_ras_n = 1'd1;
reg   [127:0] basesoc_ext_dfi_p0_rddata = 128'd0;
reg           basesoc_ext_dfi_p0_rddata_en = 1'd0;
reg           basesoc_ext_dfi_p0_rddata_valid = 1'd0;
reg           basesoc_ext_dfi_p0_reset_n = 1'd0;
reg           basesoc_ext_dfi_p0_we_n = 1'd1;
reg   [127:0] basesoc_ext_dfi_p0_wrdata = 128'd0;
reg           basesoc_ext_dfi_p0_wrdata_en = 1'd0;
reg    [15:0] basesoc_ext_dfi_p0_wrdata_mask = 16'd0;
reg           basesoc_ext_dfi_p1_act_n = 1'd1;
reg    [13:0] basesoc_ext_dfi_p1_address = 14'd0;
reg     [2:0] basesoc_ext_dfi_p1_bank = 3'd0;
reg           basesoc_ext_dfi_p1_cas_n = 1'd1;
reg           basesoc_ext_dfi_p1_cke = 1'd0;
reg           basesoc_ext_dfi_p1_cs_n = 1'd1;
reg           basesoc_ext_dfi_p1_odt = 1'd0;
reg           basesoc_ext_dfi_p1_ras_n = 1'd1;
reg   [127:0] basesoc_ext_dfi_p1_rddata = 128'd0;
reg           basesoc_ext_dfi_p1_rddata_en = 1'd0;
reg           basesoc_ext_dfi_p1_rddata_valid = 1'd0;
reg           basesoc_ext_dfi_p1_reset_n = 1'd0;
reg           basesoc_ext_dfi_p1_we_n = 1'd1;
reg   [127:0] basesoc_ext_dfi_p1_wrdata = 128'd0;
reg           basesoc_ext_dfi_p1_wrdata_en = 1'd0;
reg    [15:0] basesoc_ext_dfi_p1_wrdata_mask = 16'd0;
reg           basesoc_ext_dfi_sel = 1'd0;
wire          basesoc_go_to_refresh;
reg           basesoc_ibus_cmd_first = 1'd0;
reg           basesoc_ibus_cmd_last = 1'd0;
wire   [31:0] basesoc_ibus_cmd_payload_addr;
wire          basesoc_ibus_cmd_payload_we;
wire          basesoc_ibus_cmd_ready;
wire          basesoc_ibus_cmd_valid;
wire          basesoc_ibus_rdata_first;
wire          basesoc_ibus_rdata_last;
wire  [255:0] basesoc_ibus_rdata_payload_data;
wire          basesoc_ibus_rdata_ready;
wire          basesoc_ibus_rdata_valid;
reg           basesoc_ibus_wdata_first = 1'd0;
reg           basesoc_ibus_wdata_last = 1'd0;
wire  [255:0] basesoc_ibus_wdata_payload_data;
wire   [31:0] basesoc_ibus_wdata_payload_we;
wire          basesoc_ibus_wdata_ready;
wire          basesoc_ibus_wdata_valid;
wire   [20:0] basesoc_interface_bank0_addr;
wire          basesoc_interface_bank0_lock;
wire          basesoc_interface_bank0_rdata_valid;
wire          basesoc_interface_bank0_ready;
wire          basesoc_interface_bank0_valid;
wire          basesoc_interface_bank0_wdata_ready;
wire          basesoc_interface_bank0_we;
wire   [20:0] basesoc_interface_bank1_addr;
wire          basesoc_interface_bank1_lock;
wire          basesoc_interface_bank1_rdata_valid;
wire          basesoc_interface_bank1_ready;
wire          basesoc_interface_bank1_valid;
wire          basesoc_interface_bank1_wdata_ready;
wire          basesoc_interface_bank1_we;
wire   [20:0] basesoc_interface_bank2_addr;
wire          basesoc_interface_bank2_lock;
wire          basesoc_interface_bank2_rdata_valid;
wire          basesoc_interface_bank2_ready;
wire          basesoc_interface_bank2_valid;
wire          basesoc_interface_bank2_wdata_ready;
wire          basesoc_interface_bank2_we;
wire   [20:0] basesoc_interface_bank3_addr;
wire          basesoc_interface_bank3_lock;
wire          basesoc_interface_bank3_rdata_valid;
wire          basesoc_interface_bank3_ready;
wire          basesoc_interface_bank3_valid;
wire          basesoc_interface_bank3_wdata_ready;
wire          basesoc_interface_bank3_we;
wire   [20:0] basesoc_interface_bank4_addr;
wire          basesoc_interface_bank4_lock;
wire          basesoc_interface_bank4_rdata_valid;
wire          basesoc_interface_bank4_ready;
wire          basesoc_interface_bank4_valid;
wire          basesoc_interface_bank4_wdata_ready;
wire          basesoc_interface_bank4_we;
wire   [20:0] basesoc_interface_bank5_addr;
wire          basesoc_interface_bank5_lock;
wire          basesoc_interface_bank5_rdata_valid;
wire          basesoc_interface_bank5_ready;
wire          basesoc_interface_bank5_valid;
wire          basesoc_interface_bank5_wdata_ready;
wire          basesoc_interface_bank5_we;
wire   [20:0] basesoc_interface_bank6_addr;
wire          basesoc_interface_bank6_lock;
wire          basesoc_interface_bank6_rdata_valid;
wire          basesoc_interface_bank6_ready;
wire          basesoc_interface_bank6_valid;
wire          basesoc_interface_bank6_wdata_ready;
wire          basesoc_interface_bank6_we;
wire   [20:0] basesoc_interface_bank7_addr;
wire          basesoc_interface_bank7_lock;
wire          basesoc_interface_bank7_rdata_valid;
wire          basesoc_interface_bank7_ready;
wire          basesoc_interface_bank7_valid;
wire          basesoc_interface_bank7_wdata_ready;
wire          basesoc_interface_bank7_we;
wire  [255:0] basesoc_interface_rdata;
reg   [255:0] basesoc_interface_wdata = 256'd0;
reg    [31:0] basesoc_interface_wdata_we = 32'd0;
reg    [31:0] basesoc_interrupt = 32'd0;
reg           basesoc_is_ongoing = 1'd0;
reg           basesoc_jtag_capture = 1'd0;
reg           basesoc_jtag_clk = 1'd0;
reg           basesoc_jtag_enable = 1'd0;
reg           basesoc_jtag_reset = 1'd0;
reg           basesoc_jtag_shift = 1'd0;
reg           basesoc_jtag_tdi = 1'd0;
wire          basesoc_jtag_tdo;
reg           basesoc_jtag_update = 1'd0;
reg           basesoc_litedram_wb_ack = 1'd0;
reg    [26:0] basesoc_litedram_wb_adr = 27'd0;
wire    [1:0] basesoc_litedram_wb_bte;
wire    [2:0] basesoc_litedram_wb_cti;
wire          basesoc_litedram_wb_cyc;
reg   [255:0] basesoc_litedram_wb_dat_r = 256'd0;
reg   [255:0] basesoc_litedram_wb_dat_w = 256'd0;
reg           basesoc_litedram_wb_err = 1'd0;
reg    [31:0] basesoc_litedram_wb_sel = 32'd0;
wire          basesoc_litedram_wb_stb;
wire          basesoc_litedram_wb_we;
wire          basesoc_litedramnativeport0_cmd_first;
wire          basesoc_litedramnativeport0_cmd_last;
wire   [23:0] basesoc_litedramnativeport0_cmd_payload_addr;
wire          basesoc_litedramnativeport0_cmd_payload_we;
wire          basesoc_litedramnativeport0_cmd_ready;
wire          basesoc_litedramnativeport0_cmd_valid;
reg           basesoc_litedramnativeport0_rdata_first = 1'd0;
reg           basesoc_litedramnativeport0_rdata_last = 1'd0;
wire  [255:0] basesoc_litedramnativeport0_rdata_payload_data;
wire          basesoc_litedramnativeport0_rdata_ready;
wire          basesoc_litedramnativeport0_rdata_valid;
wire          basesoc_litedramnativeport0_wdata_first;
wire          basesoc_litedramnativeport0_wdata_last;
wire  [255:0] basesoc_litedramnativeport0_wdata_payload_data;
wire   [31:0] basesoc_litedramnativeport0_wdata_payload_we;
wire          basesoc_litedramnativeport0_wdata_ready;
wire          basesoc_litedramnativeport0_wdata_valid;
wire          basesoc_litedramnativeport1_cmd_first;
wire          basesoc_litedramnativeport1_cmd_last;
wire   [23:0] basesoc_litedramnativeport1_cmd_payload_addr;
wire          basesoc_litedramnativeport1_cmd_payload_we;
wire          basesoc_litedramnativeport1_cmd_ready;
wire          basesoc_litedramnativeport1_cmd_valid;
reg           basesoc_litedramnativeport1_rdata_first = 1'd0;
reg           basesoc_litedramnativeport1_rdata_last = 1'd0;
wire  [255:0] basesoc_litedramnativeport1_rdata_payload_data;
wire          basesoc_litedramnativeport1_rdata_ready;
wire          basesoc_litedramnativeport1_rdata_valid;
wire          basesoc_litedramnativeport1_wdata_first;
wire          basesoc_litedramnativeport1_wdata_last;
wire  [255:0] basesoc_litedramnativeport1_wdata_payload_data;
wire   [31:0] basesoc_litedramnativeport1_wdata_payload_we;
wire          basesoc_litedramnativeport1_wdata_ready;
wire          basesoc_litedramnativeport1_wdata_valid;
wire          basesoc_litedramnativeport2_cmd_last;
wire   [23:0] basesoc_litedramnativeport2_cmd_payload_addr;
wire          basesoc_litedramnativeport2_cmd_payload_we;
wire          basesoc_litedramnativeport2_cmd_ready;
reg           basesoc_litedramnativeport2_cmd_valid = 1'd0;
wire          basesoc_litedramnativeport2_flush;
wire  [255:0] basesoc_litedramnativeport2_rdata_payload_data;
wire          basesoc_litedramnativeport2_rdata_ready;
wire          basesoc_litedramnativeport2_rdata_valid;
wire  [255:0] basesoc_litedramnativeport2_wdata_payload_data;
wire   [31:0] basesoc_litedramnativeport2_wdata_payload_we;
wire          basesoc_litedramnativeport2_wdata_ready;
reg           basesoc_litedramnativeport2_wdata_valid = 1'd0;
reg           basesoc_master_p0_act_n = 1'd1;
reg    [13:0] basesoc_master_p0_address = 14'd0;
reg     [2:0] basesoc_master_p0_bank = 3'd0;
reg           basesoc_master_p0_cas_n = 1'd1;
reg           basesoc_master_p0_cke = 1'd0;
reg           basesoc_master_p0_cs_n = 1'd1;
reg           basesoc_master_p0_odt = 1'd0;
reg           basesoc_master_p0_ras_n = 1'd1;
wire  [127:0] basesoc_master_p0_rddata;
reg           basesoc_master_p0_rddata_en = 1'd0;
wire          basesoc_master_p0_rddata_valid;
reg           basesoc_master_p0_reset_n = 1'd0;
reg           basesoc_master_p0_we_n = 1'd1;
reg   [127:0] basesoc_master_p0_wrdata = 128'd0;
reg           basesoc_master_p0_wrdata_en = 1'd0;
reg    [15:0] basesoc_master_p0_wrdata_mask = 16'd0;
reg           basesoc_master_p1_act_n = 1'd1;
reg    [13:0] basesoc_master_p1_address = 14'd0;
reg     [2:0] basesoc_master_p1_bank = 3'd0;
reg           basesoc_master_p1_cas_n = 1'd1;
reg           basesoc_master_p1_cke = 1'd0;
reg           basesoc_master_p1_cs_n = 1'd1;
reg           basesoc_master_p1_odt = 1'd0;
reg           basesoc_master_p1_ras_n = 1'd1;
wire  [127:0] basesoc_master_p1_rddata;
reg           basesoc_master_p1_rddata_en = 1'd0;
wire          basesoc_master_p1_rddata_valid;
reg           basesoc_master_p1_reset_n = 1'd0;
reg           basesoc_master_p1_we_n = 1'd1;
reg   [127:0] basesoc_master_p1_wrdata = 128'd0;
reg           basesoc_master_p1_wrdata_en = 1'd0;
reg    [15:0] basesoc_master_p1_wrdata_mask = 16'd0;
wire          basesoc_max_time0;
wire          basesoc_max_time1;
reg    [13:0] basesoc_nop_a = 14'd0;
reg     [2:0] basesoc_nop_ba = 3'd0;
wire          basesoc_odt;
wire          basesoc_pbus_ack;
wire   [29:0] basesoc_pbus_adr;
wire    [1:0] basesoc_pbus_bte;
wire    [2:0] basesoc_pbus_cti;
wire          basesoc_pbus_cyc;
wire   [31:0] basesoc_pbus_dat_r;
wire   [31:0] basesoc_pbus_dat_w;
wire          basesoc_pbus_err;
wire    [3:0] basesoc_pbus_sel;
wire          basesoc_pbus_stb;
wire          basesoc_pbus_we;
reg           basesoc_phaseinjector0_address_re = 1'd0;
reg    [13:0] basesoc_phaseinjector0_address_storage = 14'd0;
reg           basesoc_phaseinjector0_baddress_re = 1'd0;
reg     [2:0] basesoc_phaseinjector0_baddress_storage = 3'd0;
wire          basesoc_phaseinjector0_command_issue_r;
reg           basesoc_phaseinjector0_command_issue_re = 1'd0;
reg           basesoc_phaseinjector0_command_issue_w = 1'd0;
reg           basesoc_phaseinjector0_command_issue_we = 1'd0;
reg           basesoc_phaseinjector0_command_re = 1'd0;
reg     [7:0] basesoc_phaseinjector0_command_storage = 8'd0;
wire          basesoc_phaseinjector0_csrfield_cas;
wire          basesoc_phaseinjector0_csrfield_cs;
wire          basesoc_phaseinjector0_csrfield_cs_bottom;
wire          basesoc_phaseinjector0_csrfield_cs_top;
wire          basesoc_phaseinjector0_csrfield_ras;
wire          basesoc_phaseinjector0_csrfield_rden;
wire          basesoc_phaseinjector0_csrfield_we;
wire          basesoc_phaseinjector0_csrfield_wren;
reg           basesoc_phaseinjector0_rddata_re = 1'd0;
reg   [127:0] basesoc_phaseinjector0_rddata_status = 128'd0;
wire          basesoc_phaseinjector0_rddata_we;
reg           basesoc_phaseinjector0_wrdata_re = 1'd0;
reg   [127:0] basesoc_phaseinjector0_wrdata_storage = 128'd0;
reg           basesoc_phaseinjector1_address_re = 1'd0;
reg    [13:0] basesoc_phaseinjector1_address_storage = 14'd0;
reg           basesoc_phaseinjector1_baddress_re = 1'd0;
reg     [2:0] basesoc_phaseinjector1_baddress_storage = 3'd0;
wire          basesoc_phaseinjector1_command_issue_r;
reg           basesoc_phaseinjector1_command_issue_re = 1'd0;
reg           basesoc_phaseinjector1_command_issue_w = 1'd0;
reg           basesoc_phaseinjector1_command_issue_we = 1'd0;
reg           basesoc_phaseinjector1_command_re = 1'd0;
reg     [7:0] basesoc_phaseinjector1_command_storage = 8'd0;
wire          basesoc_phaseinjector1_csrfield_cas;
wire          basesoc_phaseinjector1_csrfield_cs;
wire          basesoc_phaseinjector1_csrfield_cs_bottom;
wire          basesoc_phaseinjector1_csrfield_cs_top;
wire          basesoc_phaseinjector1_csrfield_ras;
wire          basesoc_phaseinjector1_csrfield_rden;
wire          basesoc_phaseinjector1_csrfield_we;
wire          basesoc_phaseinjector1_csrfield_wren;
reg           basesoc_phaseinjector1_rddata_re = 1'd0;
reg   [127:0] basesoc_phaseinjector1_rddata_status = 128'd0;
wire          basesoc_phaseinjector1_rddata_we;
reg           basesoc_phaseinjector1_wrdata_re = 1'd0;
reg   [127:0] basesoc_phaseinjector1_wrdata_storage = 128'd0;
wire          basesoc_plicbus_ack;
wire   [29:0] basesoc_plicbus_adr;
wire    [1:0] basesoc_plicbus_bte;
wire    [2:0] basesoc_plicbus_cti;
wire          basesoc_plicbus_cyc;
wire   [31:0] basesoc_plicbus_dat_r;
wire   [31:0] basesoc_plicbus_dat_w;
reg           basesoc_plicbus_err = 1'd0;
wire    [3:0] basesoc_plicbus_sel;
wire          basesoc_plicbus_stb;
wire          basesoc_plicbus_we;
reg           basesoc_postponer_count = 1'd0;
wire          basesoc_postponer_req_i;
reg           basesoc_postponer_req_o = 1'd0;
wire   [10:0] basesoc_ram_adr;
reg           basesoc_ram_adr_burst = 1'd0;
reg           basesoc_ram_bus_ram_bus_ack = 1'd0;
wire   [29:0] basesoc_ram_bus_ram_bus_adr;
wire    [1:0] basesoc_ram_bus_ram_bus_bte;
wire    [2:0] basesoc_ram_bus_ram_bus_cti;
wire          basesoc_ram_bus_ram_bus_cyc;
wire   [31:0] basesoc_ram_bus_ram_bus_dat_r;
wire   [31:0] basesoc_ram_bus_ram_bus_dat_w;
reg           basesoc_ram_bus_ram_bus_err = 1'd0;
wire    [3:0] basesoc_ram_bus_ram_bus_sel;
wire          basesoc_ram_bus_ram_bus_stb;
wire          basesoc_ram_bus_ram_bus_we;
wire   [31:0] basesoc_ram_dat_r;
wire   [31:0] basesoc_ram_dat_w;
reg     [3:0] basesoc_ram_we = 4'd0;
wire          basesoc_ras_allowed;
reg           basesoc_re = 1'd0;
wire          basesoc_read_available;
wire          basesoc_reset;
wire          basesoc_reset_n;
reg           basesoc_reset_re = 1'd0;
reg     [1:0] basesoc_reset_storage = 2'd0;
reg     [3:0] basesoc_rx_count = 4'd0;
reg     [3:0] basesoc_rx_count_rs232phyrx_next_value0 = 4'd0;
reg           basesoc_rx_count_rs232phyrx_next_value_ce0 = 1'd0;
reg     [7:0] basesoc_rx_data = 8'd0;
reg     [7:0] basesoc_rx_data_rs232phyrx_next_value1 = 8'd0;
reg           basesoc_rx_data_rs232phyrx_next_value_ce1 = 1'd0;
reg           basesoc_rx_enable = 1'd0;
reg    [31:0] basesoc_rx_phase = 32'd0;
wire          basesoc_rx_rx;
reg           basesoc_rx_rx_d = 1'd0;
reg           basesoc_rx_source_first = 1'd0;
reg           basesoc_rx_source_last = 1'd0;
reg     [7:0] basesoc_rx_source_payload_data = 8'd0;
wire          basesoc_rx_source_ready;
reg           basesoc_rx_source_valid = 1'd0;
reg           basesoc_rx_tick = 1'd0;
reg           basesoc_scratch_re = 1'd0;
reg    [31:0] basesoc_scratch_storage = 32'd305419896;
wire          basesoc_sel;
reg           basesoc_sequencer_count = 1'd0;
wire          basesoc_sequencer_done0;
reg           basesoc_sequencer_done1 = 1'd0;
reg           basesoc_sequencer_start0 = 1'd0;
wire          basesoc_sequencer_start1;
reg     [5:0] basesoc_sequencer_trigger = 6'd0;
reg           basesoc_serial_tx_rs232phytx_next_value1 = 1'd0;
reg           basesoc_serial_tx_rs232phytx_next_value_ce1 = 1'd0;
wire          basesoc_slave_p0_act_n;
wire   [13:0] basesoc_slave_p0_address;
wire    [2:0] basesoc_slave_p0_bank;
wire          basesoc_slave_p0_cas_n;
wire          basesoc_slave_p0_cke;
wire          basesoc_slave_p0_cs_n;
wire          basesoc_slave_p0_odt;
wire          basesoc_slave_p0_ras_n;
reg   [127:0] basesoc_slave_p0_rddata = 128'd0;
wire          basesoc_slave_p0_rddata_en;
reg           basesoc_slave_p0_rddata_valid = 1'd0;
wire          basesoc_slave_p0_reset_n;
wire          basesoc_slave_p0_we_n;
wire  [127:0] basesoc_slave_p0_wrdata;
wire          basesoc_slave_p0_wrdata_en;
wire   [15:0] basesoc_slave_p0_wrdata_mask;
wire          basesoc_slave_p1_act_n;
wire   [13:0] basesoc_slave_p1_address;
wire    [2:0] basesoc_slave_p1_bank;
wire          basesoc_slave_p1_cas_n;
wire          basesoc_slave_p1_cke;
wire          basesoc_slave_p1_cs_n;
wire          basesoc_slave_p1_odt;
wire          basesoc_slave_p1_ras_n;
reg   [127:0] basesoc_slave_p1_rddata = 128'd0;
wire          basesoc_slave_p1_rddata_en;
reg           basesoc_slave_p1_rddata_valid = 1'd0;
wire          basesoc_slave_p1_reset_n;
wire          basesoc_slave_p1_we_n;
wire  [127:0] basesoc_slave_p1_wrdata;
wire          basesoc_slave_p1_wrdata_en;
wire   [15:0] basesoc_slave_p1_wrdata_mask;
reg           basesoc_soc_rst = 1'd0;
reg     [1:0] basesoc_steerer0 = 2'd0;
reg     [1:0] basesoc_steerer1 = 2'd0;
reg           basesoc_steerer2 = 1'd1;
reg           basesoc_steerer3 = 1'd1;
reg           basesoc_steerer4 = 1'd1;
reg           basesoc_steerer5 = 1'd1;
reg     [3:0] basesoc_storage = 4'd1;
reg           basesoc_tccdcon_count = 1'd0;
reg           basesoc_tccdcon_ready = 1'd0;
wire          basesoc_tccdcon_valid;
wire    [1:0] basesoc_tfawcon_count;
reg           basesoc_tfawcon_ready = 1'd1;
wire          basesoc_tfawcon_valid;
reg     [2:0] basesoc_tfawcon_window = 3'd0;
reg     [4:0] basesoc_time0 = 5'd0;
reg     [3:0] basesoc_time1 = 4'd0;
wire    [8:0] basesoc_timer_count0;
reg     [8:0] basesoc_timer_count1 = 9'd390;
wire          basesoc_timer_done0;
wire          basesoc_timer_done1;
reg           basesoc_timer_en_re = 1'd0;
reg           basesoc_timer_en_storage = 1'd0;
reg           basesoc_timer_enable_re = 1'd0;
reg           basesoc_timer_enable_storage = 1'd0;
wire          basesoc_timer_irq;
reg           basesoc_timer_load_re = 1'd0;
reg    [31:0] basesoc_timer_load_storage = 32'd0;
reg           basesoc_timer_pending_r = 1'd0;
reg           basesoc_timer_pending_re = 1'd0;
reg           basesoc_timer_pending_status = 1'd0;
wire          basesoc_timer_pending_we;
reg           basesoc_timer_reload_re = 1'd0;
reg    [31:0] basesoc_timer_reload_storage = 32'd0;
reg           basesoc_timer_status_re = 1'd0;
reg           basesoc_timer_status_status = 1'd0;
wire          basesoc_timer_status_we;
reg           basesoc_timer_update_value_re = 1'd0;
reg           basesoc_timer_update_value_storage = 1'd0;
reg    [31:0] basesoc_timer_value = 32'd0;
reg           basesoc_timer_value_re = 1'd0;
reg    [31:0] basesoc_timer_value_status = 32'd0;
wire          basesoc_timer_value_we;
wire          basesoc_timer_wait;
wire          basesoc_timer_zero0;
wire          basesoc_timer_zero1;
wire          basesoc_timer_zero2;
reg           basesoc_timer_zero_clear = 1'd0;
reg           basesoc_timer_zero_pending = 1'd0;
wire          basesoc_timer_zero_status;
wire          basesoc_timer_zero_trigger;
reg           basesoc_timer_zero_trigger_d = 1'd0;
reg           basesoc_trrdcon_count = 1'd0;
reg           basesoc_trrdcon_ready = 1'd0;
wire          basesoc_trrdcon_valid;
reg     [2:0] basesoc_twtrcon_count = 3'd0;
reg           basesoc_twtrcon_ready = 1'd0;
wire          basesoc_twtrcon_valid;
reg     [3:0] basesoc_tx_count = 4'd0;
reg     [3:0] basesoc_tx_count_rs232phytx_next_value0 = 4'd0;
reg           basesoc_tx_count_rs232phytx_next_value_ce0 = 1'd0;
reg     [7:0] basesoc_tx_data = 8'd0;
reg     [7:0] basesoc_tx_data_rs232phytx_next_value2 = 8'd0;
reg           basesoc_tx_data_rs232phytx_next_value_ce2 = 1'd0;
reg           basesoc_tx_enable = 1'd0;
reg    [31:0] basesoc_tx_phase = 32'd0;
wire          basesoc_tx_sink_first;
wire          basesoc_tx_sink_last;
wire    [7:0] basesoc_tx_sink_payload_data;
reg           basesoc_tx_sink_ready = 1'd0;
wire          basesoc_tx_sink_valid;
reg           basesoc_tx_tick = 1'd0;
reg           basesoc_uart_enable_re = 1'd0;
reg     [1:0] basesoc_uart_enable_storage = 2'd0;
wire          basesoc_uart_irq;
reg     [1:0] basesoc_uart_pending_r = 2'd0;
reg           basesoc_uart_pending_re = 1'd0;
reg     [1:0] basesoc_uart_pending_status = 2'd0;
wire          basesoc_uart_pending_we;
wire          basesoc_uart_rx0;
wire          basesoc_uart_rx1;
wire          basesoc_uart_rx2;
reg           basesoc_uart_rx_clear = 1'd0;
reg     [3:0] basesoc_uart_rx_fifo_consume = 4'd0;
wire          basesoc_uart_rx_fifo_do_read;
wire          basesoc_uart_rx_fifo_fifo_in_first;
wire          basesoc_uart_rx_fifo_fifo_in_last;
wire    [7:0] basesoc_uart_rx_fifo_fifo_in_payload_data;
wire          basesoc_uart_rx_fifo_fifo_out_first;
wire          basesoc_uart_rx_fifo_fifo_out_last;
wire    [7:0] basesoc_uart_rx_fifo_fifo_out_payload_data;
reg     [4:0] basesoc_uart_rx_fifo_level0 = 5'd0;
wire    [4:0] basesoc_uart_rx_fifo_level1;
reg     [3:0] basesoc_uart_rx_fifo_produce = 4'd0;
wire    [3:0] basesoc_uart_rx_fifo_rdport_adr;
wire    [9:0] basesoc_uart_rx_fifo_rdport_dat_r;
wire          basesoc_uart_rx_fifo_rdport_re;
wire          basesoc_uart_rx_fifo_re;
reg           basesoc_uart_rx_fifo_readable = 1'd0;
reg           basesoc_uart_rx_fifo_replace = 1'd0;
wire          basesoc_uart_rx_fifo_sink_first;
wire          basesoc_uart_rx_fifo_sink_last;
wire    [7:0] basesoc_uart_rx_fifo_sink_payload_data;
wire          basesoc_uart_rx_fifo_sink_ready;
wire          basesoc_uart_rx_fifo_sink_valid;
wire          basesoc_uart_rx_fifo_source_first;
wire          basesoc_uart_rx_fifo_source_last;
wire    [7:0] basesoc_uart_rx_fifo_source_payload_data;
wire          basesoc_uart_rx_fifo_source_ready;
wire          basesoc_uart_rx_fifo_source_valid;
wire    [9:0] basesoc_uart_rx_fifo_syncfifo_din;
wire    [9:0] basesoc_uart_rx_fifo_syncfifo_dout;
wire          basesoc_uart_rx_fifo_syncfifo_re;
wire          basesoc_uart_rx_fifo_syncfifo_readable;
wire          basesoc_uart_rx_fifo_syncfifo_we;
wire          basesoc_uart_rx_fifo_syncfifo_writable;
reg     [3:0] basesoc_uart_rx_fifo_wrport_adr = 4'd0;
wire    [9:0] basesoc_uart_rx_fifo_wrport_dat_r;
wire    [9:0] basesoc_uart_rx_fifo_wrport_dat_w;
wire          basesoc_uart_rx_fifo_wrport_we;
reg           basesoc_uart_rx_pending = 1'd0;
wire          basesoc_uart_rx_status;
wire          basesoc_uart_rx_trigger;
reg           basesoc_uart_rx_trigger_d = 1'd0;
reg           basesoc_uart_rxempty_re = 1'd0;
wire          basesoc_uart_rxempty_status;
wire          basesoc_uart_rxempty_we;
reg           basesoc_uart_rxfull_re = 1'd0;
wire          basesoc_uart_rxfull_status;
wire          basesoc_uart_rxfull_we;
wire    [7:0] basesoc_uart_rxtx_r;
reg           basesoc_uart_rxtx_re = 1'd0;
wire    [7:0] basesoc_uart_rxtx_w;
reg           basesoc_uart_rxtx_we = 1'd0;
reg           basesoc_uart_status_re = 1'd0;
reg     [1:0] basesoc_uart_status_status = 2'd0;
wire          basesoc_uart_status_we;
wire          basesoc_uart_tx0;
wire          basesoc_uart_tx1;
wire          basesoc_uart_tx2;
reg           basesoc_uart_tx_clear = 1'd0;
reg     [3:0] basesoc_uart_tx_fifo_consume = 4'd0;
wire          basesoc_uart_tx_fifo_do_read;
wire          basesoc_uart_tx_fifo_fifo_in_first;
wire          basesoc_uart_tx_fifo_fifo_in_last;
wire    [7:0] basesoc_uart_tx_fifo_fifo_in_payload_data;
wire          basesoc_uart_tx_fifo_fifo_out_first;
wire          basesoc_uart_tx_fifo_fifo_out_last;
wire    [7:0] basesoc_uart_tx_fifo_fifo_out_payload_data;
reg     [4:0] basesoc_uart_tx_fifo_level0 = 5'd0;
wire    [4:0] basesoc_uart_tx_fifo_level1;
reg     [3:0] basesoc_uart_tx_fifo_produce = 4'd0;
wire    [3:0] basesoc_uart_tx_fifo_rdport_adr;
wire    [9:0] basesoc_uart_tx_fifo_rdport_dat_r;
wire          basesoc_uart_tx_fifo_rdport_re;
wire          basesoc_uart_tx_fifo_re;
reg           basesoc_uart_tx_fifo_readable = 1'd0;
reg           basesoc_uart_tx_fifo_replace = 1'd0;
reg           basesoc_uart_tx_fifo_sink_first = 1'd0;
reg           basesoc_uart_tx_fifo_sink_last = 1'd0;
wire    [7:0] basesoc_uart_tx_fifo_sink_payload_data;
wire          basesoc_uart_tx_fifo_sink_ready;
wire          basesoc_uart_tx_fifo_sink_valid;
wire          basesoc_uart_tx_fifo_source_first;
wire          basesoc_uart_tx_fifo_source_last;
wire    [7:0] basesoc_uart_tx_fifo_source_payload_data;
wire          basesoc_uart_tx_fifo_source_ready;
wire          basesoc_uart_tx_fifo_source_valid;
wire    [9:0] basesoc_uart_tx_fifo_syncfifo_din;
wire    [9:0] basesoc_uart_tx_fifo_syncfifo_dout;
wire          basesoc_uart_tx_fifo_syncfifo_re;
wire          basesoc_uart_tx_fifo_syncfifo_readable;
wire          basesoc_uart_tx_fifo_syncfifo_we;
wire          basesoc_uart_tx_fifo_syncfifo_writable;
reg     [3:0] basesoc_uart_tx_fifo_wrport_adr = 4'd0;
wire    [9:0] basesoc_uart_tx_fifo_wrport_dat_r;
wire    [9:0] basesoc_uart_tx_fifo_wrport_dat_w;
wire          basesoc_uart_tx_fifo_wrport_we;
reg           basesoc_uart_tx_pending = 1'd0;
wire          basesoc_uart_tx_status;
wire          basesoc_uart_tx_trigger;
reg           basesoc_uart_tx_trigger_d = 1'd0;
reg           basesoc_uart_txempty_re = 1'd0;
wire          basesoc_uart_txempty_status;
wire          basesoc_uart_txempty_we;
reg           basesoc_uart_txfull_re = 1'd0;
wire          basesoc_uart_txfull_status;
wire          basesoc_uart_txfull_we;
wire          basesoc_uart_uart_sink_first;
wire          basesoc_uart_uart_sink_last;
wire    [7:0] basesoc_uart_uart_sink_payload_data;
wire          basesoc_uart_uart_sink_ready;
wire          basesoc_uart_uart_sink_valid;
wire          basesoc_uart_uart_source_first;
wire          basesoc_uart_uart_source_last;
wire    [7:0] basesoc_uart_uart_source_payload_data;
wire          basesoc_uart_uart_source_ready;
wire          basesoc_uart_uart_source_valid;
wire          basesoc_wants_refresh;
wire          basesoc_wants_zqcs;
wire          basesoc_wb_sdram_ack;
wire   [29:0] basesoc_wb_sdram_adr;
wire    [1:0] basesoc_wb_sdram_bte;
wire    [2:0] basesoc_wb_sdram_cti;
wire          basesoc_wb_sdram_cyc;
reg    [31:0] basesoc_wb_sdram_dat_r = 32'd0;
wire   [31:0] basesoc_wb_sdram_dat_w;
wire          basesoc_wb_sdram_err;
wire    [3:0] basesoc_wb_sdram_sel;
wire          basesoc_wb_sdram_stb;
wire          basesoc_wb_sdram_we;
wire          basesoc_write_available;
reg           basesoc_zqcs_executer_done = 1'd0;
reg           basesoc_zqcs_executer_start = 1'd0;
reg     [4:0] basesoc_zqcs_executer_trigger = 5'd0;
wire   [25:0] basesoc_zqcs_timer_count0;
reg    [25:0] basesoc_zqcs_timer_count1 = 26'd49999999;
wire          basesoc_zqcs_timer_done0;
wire          basesoc_zqcs_timer_done1;
wire          basesoc_zqcs_timer_wait;
reg    [19:0] count = 20'd1000000;
wire          crg_clkin;
wire          crg_clkout0;
wire          crg_clkout1;
wire          crg_locked;
reg    [15:0] crg_por_count = 16'd65535;
wire          crg_por_done;
wire          crg_reset0;
wire          crg_reset1;
reg           crg_rst = 1'd0;
wire          crg_stop;
wire    [5:0] csr_bankarray_adr;
wire   [31:0] csr_bankarray_csrbank0_bus_errors_r;
reg           csr_bankarray_csrbank0_bus_errors_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank0_bus_errors_w;
reg           csr_bankarray_csrbank0_bus_errors_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank0_reset0_r;
reg           csr_bankarray_csrbank0_reset0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank0_reset0_w;
reg           csr_bankarray_csrbank0_reset0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank0_scratch0_r;
reg           csr_bankarray_csrbank0_scratch0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank0_scratch0_w;
reg           csr_bankarray_csrbank0_scratch0_we = 1'd0;
wire          csr_bankarray_csrbank0_sel;
wire    [3:0] csr_bankarray_csrbank1_burstdet_seen_r;
reg           csr_bankarray_csrbank1_burstdet_seen_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank1_burstdet_seen_w;
reg           csr_bankarray_csrbank1_burstdet_seen_we = 1'd0;
wire    [3:0] csr_bankarray_csrbank1_dly_sel0_r;
reg           csr_bankarray_csrbank1_dly_sel0_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank1_dly_sel0_w;
reg           csr_bankarray_csrbank1_dly_sel0_we = 1'd0;
wire          csr_bankarray_csrbank1_sel;
wire    [3:0] csr_bankarray_csrbank2_dfii_control0_r;
reg           csr_bankarray_csrbank2_dfii_control0_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank2_dfii_control0_w;
reg           csr_bankarray_csrbank2_dfii_control0_we = 1'd0;
wire   [13:0] csr_bankarray_csrbank2_dfii_pi0_address0_r;
reg           csr_bankarray_csrbank2_dfii_pi0_address0_re = 1'd0;
wire   [13:0] csr_bankarray_csrbank2_dfii_pi0_address0_w;
reg           csr_bankarray_csrbank2_dfii_pi0_address0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank2_dfii_pi0_baddress0_r;
reg           csr_bankarray_csrbank2_dfii_pi0_baddress0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank2_dfii_pi0_baddress0_w;
reg           csr_bankarray_csrbank2_dfii_pi0_baddress0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank2_dfii_pi0_command0_r;
reg           csr_bankarray_csrbank2_dfii_pi0_command0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank2_dfii_pi0_command0_w;
reg           csr_bankarray_csrbank2_dfii_pi0_command0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_rddata0_r;
reg           csr_bankarray_csrbank2_dfii_pi0_rddata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_rddata0_w;
reg           csr_bankarray_csrbank2_dfii_pi0_rddata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_rddata1_r;
reg           csr_bankarray_csrbank2_dfii_pi0_rddata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_rddata1_w;
reg           csr_bankarray_csrbank2_dfii_pi0_rddata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_rddata2_r;
reg           csr_bankarray_csrbank2_dfii_pi0_rddata2_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_rddata2_w;
reg           csr_bankarray_csrbank2_dfii_pi0_rddata2_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_rddata3_r;
reg           csr_bankarray_csrbank2_dfii_pi0_rddata3_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_rddata3_w;
reg           csr_bankarray_csrbank2_dfii_pi0_rddata3_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_wrdata0_r;
reg           csr_bankarray_csrbank2_dfii_pi0_wrdata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_wrdata0_w;
reg           csr_bankarray_csrbank2_dfii_pi0_wrdata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_wrdata1_r;
reg           csr_bankarray_csrbank2_dfii_pi0_wrdata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_wrdata1_w;
reg           csr_bankarray_csrbank2_dfii_pi0_wrdata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_wrdata2_r;
reg           csr_bankarray_csrbank2_dfii_pi0_wrdata2_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_wrdata2_w;
reg           csr_bankarray_csrbank2_dfii_pi0_wrdata2_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_wrdata3_r;
reg           csr_bankarray_csrbank2_dfii_pi0_wrdata3_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi0_wrdata3_w;
reg           csr_bankarray_csrbank2_dfii_pi0_wrdata3_we = 1'd0;
wire   [13:0] csr_bankarray_csrbank2_dfii_pi1_address0_r;
reg           csr_bankarray_csrbank2_dfii_pi1_address0_re = 1'd0;
wire   [13:0] csr_bankarray_csrbank2_dfii_pi1_address0_w;
reg           csr_bankarray_csrbank2_dfii_pi1_address0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank2_dfii_pi1_baddress0_r;
reg           csr_bankarray_csrbank2_dfii_pi1_baddress0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank2_dfii_pi1_baddress0_w;
reg           csr_bankarray_csrbank2_dfii_pi1_baddress0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank2_dfii_pi1_command0_r;
reg           csr_bankarray_csrbank2_dfii_pi1_command0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank2_dfii_pi1_command0_w;
reg           csr_bankarray_csrbank2_dfii_pi1_command0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_rddata0_r;
reg           csr_bankarray_csrbank2_dfii_pi1_rddata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_rddata0_w;
reg           csr_bankarray_csrbank2_dfii_pi1_rddata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_rddata1_r;
reg           csr_bankarray_csrbank2_dfii_pi1_rddata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_rddata1_w;
reg           csr_bankarray_csrbank2_dfii_pi1_rddata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_rddata2_r;
reg           csr_bankarray_csrbank2_dfii_pi1_rddata2_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_rddata2_w;
reg           csr_bankarray_csrbank2_dfii_pi1_rddata2_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_rddata3_r;
reg           csr_bankarray_csrbank2_dfii_pi1_rddata3_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_rddata3_w;
reg           csr_bankarray_csrbank2_dfii_pi1_rddata3_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_wrdata0_r;
reg           csr_bankarray_csrbank2_dfii_pi1_wrdata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_wrdata0_w;
reg           csr_bankarray_csrbank2_dfii_pi1_wrdata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_wrdata1_r;
reg           csr_bankarray_csrbank2_dfii_pi1_wrdata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_wrdata1_w;
reg           csr_bankarray_csrbank2_dfii_pi1_wrdata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_wrdata2_r;
reg           csr_bankarray_csrbank2_dfii_pi1_wrdata2_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_wrdata2_w;
reg           csr_bankarray_csrbank2_dfii_pi1_wrdata2_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_wrdata3_r;
reg           csr_bankarray_csrbank2_dfii_pi1_wrdata3_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank2_dfii_pi1_wrdata3_w;
reg           csr_bankarray_csrbank2_dfii_pi1_wrdata3_we = 1'd0;
wire          csr_bankarray_csrbank2_sel;
wire          csr_bankarray_csrbank3_en0_r;
reg           csr_bankarray_csrbank3_en0_re = 1'd0;
wire          csr_bankarray_csrbank3_en0_w;
reg           csr_bankarray_csrbank3_en0_we = 1'd0;
wire          csr_bankarray_csrbank3_ev_enable0_r;
reg           csr_bankarray_csrbank3_ev_enable0_re = 1'd0;
wire          csr_bankarray_csrbank3_ev_enable0_w;
reg           csr_bankarray_csrbank3_ev_enable0_we = 1'd0;
wire          csr_bankarray_csrbank3_ev_pending_r;
reg           csr_bankarray_csrbank3_ev_pending_re = 1'd0;
wire          csr_bankarray_csrbank3_ev_pending_w;
reg           csr_bankarray_csrbank3_ev_pending_we = 1'd0;
wire          csr_bankarray_csrbank3_ev_status_r;
reg           csr_bankarray_csrbank3_ev_status_re = 1'd0;
wire          csr_bankarray_csrbank3_ev_status_w;
reg           csr_bankarray_csrbank3_ev_status_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank3_load0_r;
reg           csr_bankarray_csrbank3_load0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank3_load0_w;
reg           csr_bankarray_csrbank3_load0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank3_reload0_r;
reg           csr_bankarray_csrbank3_reload0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank3_reload0_w;
reg           csr_bankarray_csrbank3_reload0_we = 1'd0;
wire          csr_bankarray_csrbank3_sel;
wire          csr_bankarray_csrbank3_update_value0_r;
reg           csr_bankarray_csrbank3_update_value0_re = 1'd0;
wire          csr_bankarray_csrbank3_update_value0_w;
reg           csr_bankarray_csrbank3_update_value0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank3_value_r;
reg           csr_bankarray_csrbank3_value_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank3_value_w;
reg           csr_bankarray_csrbank3_value_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank4_ev_enable0_r;
reg           csr_bankarray_csrbank4_ev_enable0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank4_ev_enable0_w;
reg           csr_bankarray_csrbank4_ev_enable0_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank4_ev_pending_r;
reg           csr_bankarray_csrbank4_ev_pending_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank4_ev_pending_w;
reg           csr_bankarray_csrbank4_ev_pending_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank4_ev_status_r;
reg           csr_bankarray_csrbank4_ev_status_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank4_ev_status_w;
reg           csr_bankarray_csrbank4_ev_status_we = 1'd0;
wire          csr_bankarray_csrbank4_rxempty_r;
reg           csr_bankarray_csrbank4_rxempty_re = 1'd0;
wire          csr_bankarray_csrbank4_rxempty_w;
reg           csr_bankarray_csrbank4_rxempty_we = 1'd0;
wire          csr_bankarray_csrbank4_rxfull_r;
reg           csr_bankarray_csrbank4_rxfull_re = 1'd0;
wire          csr_bankarray_csrbank4_rxfull_w;
reg           csr_bankarray_csrbank4_rxfull_we = 1'd0;
wire          csr_bankarray_csrbank4_sel;
wire          csr_bankarray_csrbank4_txempty_r;
reg           csr_bankarray_csrbank4_txempty_re = 1'd0;
wire          csr_bankarray_csrbank4_txempty_w;
reg           csr_bankarray_csrbank4_txempty_we = 1'd0;
wire          csr_bankarray_csrbank4_txfull_r;
reg           csr_bankarray_csrbank4_txfull_re = 1'd0;
wire          csr_bankarray_csrbank4_txfull_w;
reg           csr_bankarray_csrbank4_txfull_we = 1'd0;
wire    [7:0] csr_bankarray_dat_r;
wire   [13:0] csr_bankarray_interface0_bank_bus_adr;
reg    [31:0] csr_bankarray_interface0_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface0_bank_bus_dat_w;
wire          csr_bankarray_interface0_bank_bus_re;
wire          csr_bankarray_interface0_bank_bus_we;
wire   [13:0] csr_bankarray_interface1_bank_bus_adr;
reg    [31:0] csr_bankarray_interface1_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface1_bank_bus_dat_w;
wire          csr_bankarray_interface1_bank_bus_re;
wire          csr_bankarray_interface1_bank_bus_we;
wire   [13:0] csr_bankarray_interface2_bank_bus_adr;
reg    [31:0] csr_bankarray_interface2_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface2_bank_bus_dat_w;
wire          csr_bankarray_interface2_bank_bus_re;
wire          csr_bankarray_interface2_bank_bus_we;
wire   [13:0] csr_bankarray_interface3_bank_bus_adr;
reg    [31:0] csr_bankarray_interface3_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface3_bank_bus_dat_w;
wire          csr_bankarray_interface3_bank_bus_re;
wire          csr_bankarray_interface3_bank_bus_we;
wire   [13:0] csr_bankarray_interface4_bank_bus_adr;
reg    [31:0] csr_bankarray_interface4_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface4_bank_bus_dat_w;
wire          csr_bankarray_interface4_bank_bus_re;
wire          csr_bankarray_interface4_bank_bus_we;
wire          csr_bankarray_sel;
reg           csr_bankarray_sel_r = 1'd0;
wire   [13:0] csr_bankarray_sram_bus_adr;
reg    [31:0] csr_bankarray_sram_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_sram_bus_dat_w;
wire          csr_bankarray_sram_bus_re;
wire          csr_bankarray_sram_bus_we;
wire   [13:0] csr_interconnect_adr;
wire   [31:0] csr_interconnect_dat_r;
wire   [31:0] csr_interconnect_dat_w;
wire          csr_interconnect_re;
wire          csr_interconnect_we;
wire          done;
reg           error = 1'd0;
wire          grant;
wire          gw5apll0;
wire          gw5apll1;
wire          gw5apll2;
wire          gw5apll3;
wire          gw5apll4;
wire          gw5apll5;
wire          gw5ddrphy0;
wire          gw5ddrphy1;
wire          gw5ddrphy10;
wire          gw5ddrphy11;
wire          gw5ddrphy12;
wire          gw5ddrphy13;
wire          gw5ddrphy14;
wire          gw5ddrphy15;
wire          gw5ddrphy16;
wire          gw5ddrphy17;
wire          gw5ddrphy18;
wire          gw5ddrphy19;
wire          gw5ddrphy2;
wire          gw5ddrphy20;
wire          gw5ddrphy21;
wire          gw5ddrphy22;
wire          gw5ddrphy23;
wire          gw5ddrphy24;
wire          gw5ddrphy25;
wire          gw5ddrphy26;
wire          gw5ddrphy27;
wire          gw5ddrphy28;
wire          gw5ddrphy29;
wire          gw5ddrphy3;
wire          gw5ddrphy30;
wire          gw5ddrphy31;
wire          gw5ddrphy32;
wire          gw5ddrphy33;
wire          gw5ddrphy34;
wire          gw5ddrphy35;
wire          gw5ddrphy36;
wire          gw5ddrphy37;
wire          gw5ddrphy38;
wire          gw5ddrphy39;
wire          gw5ddrphy4;
wire          gw5ddrphy40;
wire          gw5ddrphy41;
wire          gw5ddrphy42;
wire          gw5ddrphy43;
wire          gw5ddrphy44;
wire          gw5ddrphy45;
wire          gw5ddrphy46;
wire          gw5ddrphy47;
wire          gw5ddrphy48;
wire          gw5ddrphy49;
wire          gw5ddrphy5;
wire          gw5ddrphy50;
wire          gw5ddrphy51;
wire          gw5ddrphy52;
wire          gw5ddrphy53;
wire          gw5ddrphy54;
wire          gw5ddrphy55;
wire          gw5ddrphy56;
wire          gw5ddrphy57;
wire          gw5ddrphy58;
wire          gw5ddrphy59;
wire          gw5ddrphy6;
wire          gw5ddrphy60;
wire          gw5ddrphy61;
wire          gw5ddrphy62;
wire          gw5ddrphy63;
wire          gw5ddrphy7;
wire          gw5ddrphy8;
wire          gw5ddrphy9;
wire    [3:0] gw5ddrphy_bitslip0_i;
reg     [3:0] gw5ddrphy_bitslip0_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip0_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip0_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip10_i;
reg     [3:0] gw5ddrphy_bitslip10_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip10_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip10_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip11_i;
reg     [3:0] gw5ddrphy_bitslip11_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip11_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip11_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip12_i;
reg     [3:0] gw5ddrphy_bitslip12_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip12_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip12_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip13_i;
reg     [3:0] gw5ddrphy_bitslip13_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip13_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip13_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip14_i;
reg     [3:0] gw5ddrphy_bitslip14_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip14_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip14_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip15_i;
reg     [3:0] gw5ddrphy_bitslip15_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip15_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip15_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip16_i;
reg     [3:0] gw5ddrphy_bitslip16_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip16_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip16_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip17_i;
reg     [3:0] gw5ddrphy_bitslip17_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip17_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip17_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip18_i;
reg     [3:0] gw5ddrphy_bitslip18_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip18_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip18_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip19_i;
reg     [3:0] gw5ddrphy_bitslip19_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip19_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip19_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip1_i;
reg     [3:0] gw5ddrphy_bitslip1_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip1_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip1_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip20_i;
reg     [3:0] gw5ddrphy_bitslip20_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip20_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip20_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip21_i;
reg     [3:0] gw5ddrphy_bitslip21_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip21_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip21_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip22_i;
reg     [3:0] gw5ddrphy_bitslip22_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip22_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip22_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip23_i;
reg     [3:0] gw5ddrphy_bitslip23_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip23_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip23_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip24_i;
reg     [3:0] gw5ddrphy_bitslip24_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip24_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip24_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip25_i;
reg     [3:0] gw5ddrphy_bitslip25_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip25_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip25_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip26_i;
reg     [3:0] gw5ddrphy_bitslip26_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip26_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip26_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip27_i;
reg     [3:0] gw5ddrphy_bitslip27_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip27_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip27_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip28_i;
reg     [3:0] gw5ddrphy_bitslip28_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip28_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip28_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip29_i;
reg     [3:0] gw5ddrphy_bitslip29_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip29_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip29_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip2_i;
reg     [3:0] gw5ddrphy_bitslip2_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip2_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip2_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip30_i;
reg     [3:0] gw5ddrphy_bitslip30_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip30_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip30_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip31_i;
reg     [3:0] gw5ddrphy_bitslip31_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip31_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip31_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip3_i;
reg     [3:0] gw5ddrphy_bitslip3_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip3_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip3_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip4_i;
reg     [3:0] gw5ddrphy_bitslip4_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip4_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip4_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip5_i;
reg     [3:0] gw5ddrphy_bitslip5_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip5_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip5_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip6_i;
reg     [3:0] gw5ddrphy_bitslip6_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip6_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip6_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip7_i;
reg     [3:0] gw5ddrphy_bitslip7_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip7_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip7_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip8_i;
reg     [3:0] gw5ddrphy_bitslip8_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip8_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip8_value = 2'd0;
wire    [3:0] gw5ddrphy_bitslip9_i;
reg     [3:0] gw5ddrphy_bitslip9_o = 4'd0;
reg     [7:0] gw5ddrphy_bitslip9_r = 8'd0;
reg     [1:0] gw5ddrphy_bitslip9_value = 2'd0;
wire          gw5ddrphy_bl8_chunk;
wire          gw5ddrphy_burstdet0;
wire          gw5ddrphy_burstdet1;
wire          gw5ddrphy_burstdet2;
wire          gw5ddrphy_burstdet3;
wire          gw5ddrphy_burstdet_clr_r;
reg           gw5ddrphy_burstdet_clr_re = 1'd0;
reg           gw5ddrphy_burstdet_clr_w = 1'd0;
reg           gw5ddrphy_burstdet_clr_we = 1'd0;
reg           gw5ddrphy_burstdet_d0 = 1'd0;
reg           gw5ddrphy_burstdet_d1 = 1'd0;
reg           gw5ddrphy_burstdet_d2 = 1'd0;
reg           gw5ddrphy_burstdet_d3 = 1'd0;
reg           gw5ddrphy_burstdet_seen_re = 1'd0;
reg     [3:0] gw5ddrphy_burstdet_seen_status = 4'd0;
wire          gw5ddrphy_burstdet_seen_we;
wire    [3:0] gw5ddrphy_datavalid;
wire    [7:0] gw5ddrphy_delay0;
wire    [7:0] gw5ddrphy_delay1;
wire          gw5ddrphy_dfi_p0_act_n;
wire   [14:0] gw5ddrphy_dfi_p0_address;
wire    [2:0] gw5ddrphy_dfi_p0_bank;
wire          gw5ddrphy_dfi_p0_cas_n;
wire          gw5ddrphy_dfi_p0_cke;
wire          gw5ddrphy_dfi_p0_cs_n;
wire          gw5ddrphy_dfi_p0_odt;
wire          gw5ddrphy_dfi_p0_ras_n;
reg   [127:0] gw5ddrphy_dfi_p0_rddata = 128'd0;
wire          gw5ddrphy_dfi_p0_rddata_en;
wire          gw5ddrphy_dfi_p0_rddata_valid;
wire          gw5ddrphy_dfi_p0_reset_n;
wire          gw5ddrphy_dfi_p0_we_n;
wire  [127:0] gw5ddrphy_dfi_p0_wrdata;
wire          gw5ddrphy_dfi_p0_wrdata_en;
wire   [15:0] gw5ddrphy_dfi_p0_wrdata_mask;
wire          gw5ddrphy_dfi_p1_act_n;
wire   [14:0] gw5ddrphy_dfi_p1_address;
wire    [2:0] gw5ddrphy_dfi_p1_bank;
wire          gw5ddrphy_dfi_p1_cas_n;
wire          gw5ddrphy_dfi_p1_cke;
wire          gw5ddrphy_dfi_p1_cs_n;
wire          gw5ddrphy_dfi_p1_odt;
wire          gw5ddrphy_dfi_p1_ras_n;
reg   [127:0] gw5ddrphy_dfi_p1_rddata = 128'd0;
wire          gw5ddrphy_dfi_p1_rddata_en;
wire          gw5ddrphy_dfi_p1_rddata_valid;
wire          gw5ddrphy_dfi_p1_reset_n;
wire          gw5ddrphy_dfi_p1_we_n;
wire  [127:0] gw5ddrphy_dfi_p1_wrdata;
wire          gw5ddrphy_dfi_p1_wrdata_en;
wire   [15:0] gw5ddrphy_dfi_p1_wrdata_mask;
reg           gw5ddrphy_dly_sel_re = 1'd0;
reg     [3:0] gw5ddrphy_dly_sel_storage = 4'd0;
reg     [7:0] gw5ddrphy_dm_o_data0 = 8'd0;
reg     [7:0] gw5ddrphy_dm_o_data1 = 8'd0;
reg     [7:0] gw5ddrphy_dm_o_data2 = 8'd0;
reg     [7:0] gw5ddrphy_dm_o_data3 = 8'd0;
reg     [7:0] gw5ddrphy_dm_o_data_d0 = 8'd0;
reg     [7:0] gw5ddrphy_dm_o_data_d1 = 8'd0;
reg     [7:0] gw5ddrphy_dm_o_data_d2 = 8'd0;
reg     [7:0] gw5ddrphy_dm_o_data_d3 = 8'd0;
reg     [3:0] gw5ddrphy_dm_o_data_muxed0 = 4'd0;
reg     [3:0] gw5ddrphy_dm_o_data_muxed1 = 4'd0;
reg     [3:0] gw5ddrphy_dm_o_data_muxed2 = 4'd0;
reg     [3:0] gw5ddrphy_dm_o_data_muxed3 = 4'd0;
wire          gw5ddrphy_dq_i0;
wire          gw5ddrphy_dq_i1;
wire          gw5ddrphy_dq_i10;
wire          gw5ddrphy_dq_i11;
wire          gw5ddrphy_dq_i12;
wire          gw5ddrphy_dq_i13;
wire          gw5ddrphy_dq_i14;
wire          gw5ddrphy_dq_i15;
wire          gw5ddrphy_dq_i16;
wire          gw5ddrphy_dq_i17;
wire          gw5ddrphy_dq_i18;
wire          gw5ddrphy_dq_i19;
wire          gw5ddrphy_dq_i2;
wire          gw5ddrphy_dq_i20;
wire          gw5ddrphy_dq_i21;
wire          gw5ddrphy_dq_i22;
wire          gw5ddrphy_dq_i23;
wire          gw5ddrphy_dq_i24;
wire          gw5ddrphy_dq_i25;
wire          gw5ddrphy_dq_i26;
wire          gw5ddrphy_dq_i27;
wire          gw5ddrphy_dq_i28;
wire          gw5ddrphy_dq_i29;
wire          gw5ddrphy_dq_i3;
wire          gw5ddrphy_dq_i30;
wire          gw5ddrphy_dq_i31;
wire          gw5ddrphy_dq_i4;
wire          gw5ddrphy_dq_i5;
wire          gw5ddrphy_dq_i6;
wire          gw5ddrphy_dq_i7;
wire          gw5ddrphy_dq_i8;
wire          gw5ddrphy_dq_i9;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d0 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d1 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d10 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d11 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d12 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d13 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d14 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d15 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d16 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d17 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d18 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d19 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d2 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d20 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d21 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d22 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d23 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d24 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d25 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d26 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d27 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d28 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d29 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d3 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d30 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d31 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d4 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d5 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d6 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d7 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d8 = 4'd0;
reg     [3:0] gw5ddrphy_dq_i_bitslip_o_d9 = 4'd0;
wire    [7:0] gw5ddrphy_dq_i_data0;
wire    [7:0] gw5ddrphy_dq_i_data1;
wire    [7:0] gw5ddrphy_dq_i_data10;
wire    [7:0] gw5ddrphy_dq_i_data11;
wire    [7:0] gw5ddrphy_dq_i_data12;
wire    [7:0] gw5ddrphy_dq_i_data13;
wire    [7:0] gw5ddrphy_dq_i_data14;
wire    [7:0] gw5ddrphy_dq_i_data15;
wire    [7:0] gw5ddrphy_dq_i_data16;
wire    [7:0] gw5ddrphy_dq_i_data17;
wire    [7:0] gw5ddrphy_dq_i_data18;
wire    [7:0] gw5ddrphy_dq_i_data19;
wire    [7:0] gw5ddrphy_dq_i_data2;
wire    [7:0] gw5ddrphy_dq_i_data20;
wire    [7:0] gw5ddrphy_dq_i_data21;
wire    [7:0] gw5ddrphy_dq_i_data22;
wire    [7:0] gw5ddrphy_dq_i_data23;
wire    [7:0] gw5ddrphy_dq_i_data24;
wire    [7:0] gw5ddrphy_dq_i_data25;
wire    [7:0] gw5ddrphy_dq_i_data26;
wire    [7:0] gw5ddrphy_dq_i_data27;
wire    [7:0] gw5ddrphy_dq_i_data28;
wire    [7:0] gw5ddrphy_dq_i_data29;
wire    [7:0] gw5ddrphy_dq_i_data3;
wire    [7:0] gw5ddrphy_dq_i_data30;
wire    [7:0] gw5ddrphy_dq_i_data31;
wire    [7:0] gw5ddrphy_dq_i_data4;
wire    [7:0] gw5ddrphy_dq_i_data5;
wire    [7:0] gw5ddrphy_dq_i_data6;
wire    [7:0] gw5ddrphy_dq_i_data7;
wire    [7:0] gw5ddrphy_dq_i_data8;
wire    [7:0] gw5ddrphy_dq_i_data9;
wire          gw5ddrphy_dq_o0;
wire          gw5ddrphy_dq_o1;
wire          gw5ddrphy_dq_o10;
wire          gw5ddrphy_dq_o11;
wire          gw5ddrphy_dq_o12;
wire          gw5ddrphy_dq_o13;
wire          gw5ddrphy_dq_o14;
wire          gw5ddrphy_dq_o15;
wire          gw5ddrphy_dq_o16;
wire          gw5ddrphy_dq_o17;
wire          gw5ddrphy_dq_o18;
wire          gw5ddrphy_dq_o19;
wire          gw5ddrphy_dq_o2;
wire          gw5ddrphy_dq_o20;
wire          gw5ddrphy_dq_o21;
wire          gw5ddrphy_dq_o22;
wire          gw5ddrphy_dq_o23;
wire          gw5ddrphy_dq_o24;
wire          gw5ddrphy_dq_o25;
wire          gw5ddrphy_dq_o26;
wire          gw5ddrphy_dq_o27;
wire          gw5ddrphy_dq_o28;
wire          gw5ddrphy_dq_o29;
wire          gw5ddrphy_dq_o3;
wire          gw5ddrphy_dq_o30;
wire          gw5ddrphy_dq_o31;
wire          gw5ddrphy_dq_o4;
wire          gw5ddrphy_dq_o5;
wire          gw5ddrphy_dq_o6;
wire          gw5ddrphy_dq_o7;
wire          gw5ddrphy_dq_o8;
wire          gw5ddrphy_dq_o9;
reg     [7:0] gw5ddrphy_dq_o_data0 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data1 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data10 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data11 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data12 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data13 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data14 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data15 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data16 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data17 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data18 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data19 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data2 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data20 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data21 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data22 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data23 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data24 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data25 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data26 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data27 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data28 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data29 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data3 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data30 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data31 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data4 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data5 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data6 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data7 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data8 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data9 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d0 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d1 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d10 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d11 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d12 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d13 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d14 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d15 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d16 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d17 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d18 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d19 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d2 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d20 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d21 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d22 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d23 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d24 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d25 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d26 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d27 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d28 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d29 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d3 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d30 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d31 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d4 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d5 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d6 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d7 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d8 = 8'd0;
reg     [7:0] gw5ddrphy_dq_o_data_d9 = 8'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed0 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed1 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed10 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed11 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed12 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed13 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed14 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed15 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed16 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed17 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed18 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed19 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed2 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed20 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed21 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed22 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed23 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed24 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed25 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed26 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed27 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed28 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed29 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed3 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed30 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed31 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed4 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed5 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed6 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed7 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed8 = 4'd0;
reg     [3:0] gw5ddrphy_dq_o_data_muxed9 = 4'd0;
wire          gw5ddrphy_dq_o_oen0;
wire          gw5ddrphy_dq_o_oen1;
wire          gw5ddrphy_dq_o_oen10;
wire          gw5ddrphy_dq_o_oen11;
wire          gw5ddrphy_dq_o_oen12;
wire          gw5ddrphy_dq_o_oen13;
wire          gw5ddrphy_dq_o_oen14;
wire          gw5ddrphy_dq_o_oen15;
wire          gw5ddrphy_dq_o_oen16;
wire          gw5ddrphy_dq_o_oen17;
wire          gw5ddrphy_dq_o_oen18;
wire          gw5ddrphy_dq_o_oen19;
wire          gw5ddrphy_dq_o_oen2;
wire          gw5ddrphy_dq_o_oen20;
wire          gw5ddrphy_dq_o_oen21;
wire          gw5ddrphy_dq_o_oen22;
wire          gw5ddrphy_dq_o_oen23;
wire          gw5ddrphy_dq_o_oen24;
wire          gw5ddrphy_dq_o_oen25;
wire          gw5ddrphy_dq_o_oen26;
wire          gw5ddrphy_dq_o_oen27;
wire          gw5ddrphy_dq_o_oen28;
wire          gw5ddrphy_dq_o_oen29;
wire          gw5ddrphy_dq_o_oen3;
wire          gw5ddrphy_dq_o_oen30;
wire          gw5ddrphy_dq_o_oen31;
wire          gw5ddrphy_dq_o_oen4;
wire          gw5ddrphy_dq_o_oen5;
wire          gw5ddrphy_dq_o_oen6;
wire          gw5ddrphy_dq_o_oen7;
wire          gw5ddrphy_dq_o_oen8;
wire          gw5ddrphy_dq_o_oen9;
wire          gw5ddrphy_dq_oe;
wire          gw5ddrphy_dqs_i0;
wire          gw5ddrphy_dqs_i1;
wire          gw5ddrphy_dqs_i2;
wire          gw5ddrphy_dqs_i3;
wire          gw5ddrphy_dqs_o0;
wire          gw5ddrphy_dqs_o1;
wire          gw5ddrphy_dqs_o2;
wire          gw5ddrphy_dqs_o3;
wire          gw5ddrphy_dqs_o_oen0;
wire          gw5ddrphy_dqs_o_oen1;
wire          gw5ddrphy_dqs_o_oen2;
wire          gw5ddrphy_dqs_o_oen3;
wire          gw5ddrphy_dqs_oe;
wire          gw5ddrphy_dqs_postamble;
wire          gw5ddrphy_dqs_preamble;
wire          gw5ddrphy_dqs_re;
wire          gw5ddrphy_dqsr900;
wire          gw5ddrphy_dqsr901;
wire          gw5ddrphy_dqsr902;
wire          gw5ddrphy_dqsr903;
wire          gw5ddrphy_dqsw0;
wire          gw5ddrphy_dqsw1;
wire          gw5ddrphy_dqsw2;
wire          gw5ddrphy_dqsw2700;
wire          gw5ddrphy_dqsw2701;
wire          gw5ddrphy_dqsw2702;
wire          gw5ddrphy_dqsw2703;
wire          gw5ddrphy_dqsw3;
reg           gw5ddrphy_freeze = 1'd0;
wire          gw5ddrphy_lock0;
wire          gw5ddrphy_lock1;
reg           gw5ddrphy_lock_d = 1'd0;
wire          gw5ddrphy_new_lock;
wire          gw5ddrphy_pad_clk;
wire          gw5ddrphy_pad_oddrx2f0;
wire          gw5ddrphy_pad_oddrx2f1;
wire          gw5ddrphy_pad_oddrx2f10;
wire          gw5ddrphy_pad_oddrx2f11;
wire          gw5ddrphy_pad_oddrx2f12;
wire          gw5ddrphy_pad_oddrx2f13;
wire          gw5ddrphy_pad_oddrx2f14;
wire          gw5ddrphy_pad_oddrx2f15;
wire          gw5ddrphy_pad_oddrx2f16;
wire          gw5ddrphy_pad_oddrx2f17;
wire          gw5ddrphy_pad_oddrx2f18;
wire          gw5ddrphy_pad_oddrx2f19;
wire          gw5ddrphy_pad_oddrx2f2;
wire          gw5ddrphy_pad_oddrx2f20;
wire          gw5ddrphy_pad_oddrx2f21;
wire          gw5ddrphy_pad_oddrx2f22;
wire          gw5ddrphy_pad_oddrx2f23;
wire          gw5ddrphy_pad_oddrx2f24;
wire          gw5ddrphy_pad_oddrx2f25;
wire          gw5ddrphy_pad_oddrx2f3;
wire          gw5ddrphy_pad_oddrx2f4;
wire          gw5ddrphy_pad_oddrx2f5;
wire          gw5ddrphy_pad_oddrx2f6;
wire          gw5ddrphy_pad_oddrx2f7;
wire          gw5ddrphy_pad_oddrx2f8;
wire          gw5ddrphy_pad_oddrx2f9;
wire          gw5ddrphy_pause0;
reg           gw5ddrphy_pause1 = 1'd0;
reg           gw5ddrphy_rddata_en_tappeddelayline0 = 1'd0;
reg           gw5ddrphy_rddata_en_tappeddelayline1 = 1'd0;
reg           gw5ddrphy_rddata_en_tappeddelayline10 = 1'd0;
reg           gw5ddrphy_rddata_en_tappeddelayline11 = 1'd0;
reg           gw5ddrphy_rddata_en_tappeddelayline12 = 1'd0;
reg           gw5ddrphy_rddata_en_tappeddelayline2 = 1'd0;
reg           gw5ddrphy_rddata_en_tappeddelayline3 = 1'd0;
reg           gw5ddrphy_rddata_en_tappeddelayline4 = 1'd0;
reg           gw5ddrphy_rddata_en_tappeddelayline5 = 1'd0;
reg           gw5ddrphy_rddata_en_tappeddelayline6 = 1'd0;
reg           gw5ddrphy_rddata_en_tappeddelayline7 = 1'd0;
reg           gw5ddrphy_rddata_en_tappeddelayline8 = 1'd0;
reg           gw5ddrphy_rddata_en_tappeddelayline9 = 1'd0;
reg     [2:0] gw5ddrphy_rdly0 = 3'd0;
reg     [2:0] gw5ddrphy_rdly1 = 3'd0;
reg     [2:0] gw5ddrphy_rdly2 = 3'd0;
reg     [2:0] gw5ddrphy_rdly3 = 3'd0;
wire          gw5ddrphy_rdly_dq_bitslip_r;
reg           gw5ddrphy_rdly_dq_bitslip_re = 1'd0;
wire          gw5ddrphy_rdly_dq_bitslip_rst_r;
reg           gw5ddrphy_rdly_dq_bitslip_rst_re = 1'd0;
reg           gw5ddrphy_rdly_dq_bitslip_rst_w = 1'd0;
reg           gw5ddrphy_rdly_dq_bitslip_rst_we = 1'd0;
reg           gw5ddrphy_rdly_dq_bitslip_w = 1'd0;
reg           gw5ddrphy_rdly_dq_bitslip_we = 1'd0;
wire          gw5ddrphy_rdly_dq_inc_r;
reg           gw5ddrphy_rdly_dq_inc_re = 1'd0;
reg           gw5ddrphy_rdly_dq_inc_w = 1'd0;
reg           gw5ddrphy_rdly_dq_inc_we = 1'd0;
wire          gw5ddrphy_rdly_dq_rst_r;
reg           gw5ddrphy_rdly_dq_rst_re = 1'd0;
reg           gw5ddrphy_rdly_dq_rst_w = 1'd0;
reg           gw5ddrphy_rdly_dq_rst_we = 1'd0;
wire    [2:0] gw5ddrphy_rdpntr0;
wire    [2:0] gw5ddrphy_rdpntr1;
wire    [2:0] gw5ddrphy_rdpntr2;
wire    [2:0] gw5ddrphy_rdpntr3;
wire          gw5ddrphy_reset0;
reg           gw5ddrphy_reset1 = 1'd0;
wire          gw5ddrphy_stop0;
reg           gw5ddrphy_stop1 = 1'd0;
reg     [6:0] gw5ddrphy_trigger = 7'd0;
reg           gw5ddrphy_update = 1'd0;
reg           gw5ddrphy_wrdata_en_tappeddelayline0 = 1'd0;
reg           gw5ddrphy_wrdata_en_tappeddelayline1 = 1'd0;
reg           gw5ddrphy_wrdata_en_tappeddelayline2 = 1'd0;
reg           gw5ddrphy_wrdata_en_tappeddelayline3 = 1'd0;
reg           gw5ddrphy_wrdata_en_tappeddelayline4 = 1'd0;
reg           gw5ddrphy_wrdata_en_tappeddelayline5 = 1'd0;
reg           gw5ddrphy_wrdata_en_tappeddelayline6 = 1'd0;
wire    [2:0] gw5ddrphy_wrpntr0;
wire    [2:0] gw5ddrphy_wrpntr1;
wire    [2:0] gw5ddrphy_wrpntr2;
wire    [2:0] gw5ddrphy_wrpntr3;
wire          init_clk;
wire          init_rst;
reg           interface0_ack = 1'd0;
wire   [29:0] interface0_adr;
wire    [1:0] interface0_bte;
wire    [2:0] interface0_cti;
wire          interface0_cyc;
reg    [31:0] interface0_dat_r = 32'd0;
wire   [31:0] interface0_dat_w;
reg           interface0_err = 1'd0;
wire    [3:0] interface0_sel;
wire          interface0_stb;
wire          interface0_we;
reg    [13:0] interface1_adr = 14'd0;
reg    [13:0] interface1_adr_wishbone2csr_next_value1 = 14'd0;
reg           interface1_adr_wishbone2csr_next_value_ce1 = 1'd0;
wire   [31:0] interface1_dat_r;
reg    [31:0] interface1_dat_w = 32'd0;
reg    [31:0] interface1_dat_w_wishbone2csr_next_value0 = 32'd0;
reg           interface1_dat_w_wishbone2csr_next_value_ce0 = 1'd0;
reg           interface1_re = 1'd0;
reg           interface1_re_wishbone2csr_next_value2 = 1'd0;
reg           interface1_re_wishbone2csr_next_value_ce2 = 1'd0;
reg           interface1_we = 1'd0;
reg           interface1_we_wishbone2csr_next_value3 = 1'd0;
reg           interface1_we_wishbone2csr_next_value_ce3 = 1'd0;
reg     [1:0] litedramwishbone2native_next_state = 2'd0;
reg     [1:0] litedramwishbone2native_state = 2'd0;
reg           locked0 = 1'd0;
reg           locked1 = 1'd0;
reg           locked10 = 1'd0;
reg           locked11 = 1'd0;
reg           locked12 = 1'd0;
reg           locked13 = 1'd0;
reg           locked14 = 1'd0;
reg           locked15 = 1'd0;
reg           locked16 = 1'd0;
reg           locked17 = 1'd0;
reg           locked18 = 1'd0;
reg           locked19 = 1'd0;
reg           locked2 = 1'd0;
reg           locked20 = 1'd0;
reg           locked21 = 1'd0;
reg           locked22 = 1'd0;
reg           locked23 = 1'd0;
reg           locked3 = 1'd0;
reg           locked4 = 1'd0;
reg           locked5 = 1'd0;
reg           locked6 = 1'd0;
reg           locked7 = 1'd0;
reg           locked8 = 1'd0;
reg           locked9 = 1'd0;
reg     [3:0] multiplexer_next_state = 4'd0;
reg     [3:0] multiplexer_state = 4'd0;
reg           multiregimpl00 = 1'd0;
reg           multiregimpl01 = 1'd0;
reg           multiregimpl10 = 1'd0;
reg           multiregimpl11 = 1'd0;
reg           new_master_rdata_valid0 = 1'd0;
reg           new_master_rdata_valid1 = 1'd0;
reg           new_master_rdata_valid10 = 1'd0;
reg           new_master_rdata_valid11 = 1'd0;
reg           new_master_rdata_valid12 = 1'd0;
reg           new_master_rdata_valid13 = 1'd0;
reg           new_master_rdata_valid14 = 1'd0;
reg           new_master_rdata_valid15 = 1'd0;
reg           new_master_rdata_valid16 = 1'd0;
reg           new_master_rdata_valid17 = 1'd0;
reg           new_master_rdata_valid18 = 1'd0;
reg           new_master_rdata_valid19 = 1'd0;
reg           new_master_rdata_valid2 = 1'd0;
reg           new_master_rdata_valid20 = 1'd0;
reg           new_master_rdata_valid21 = 1'd0;
reg           new_master_rdata_valid22 = 1'd0;
reg           new_master_rdata_valid23 = 1'd0;
reg           new_master_rdata_valid24 = 1'd0;
reg           new_master_rdata_valid25 = 1'd0;
reg           new_master_rdata_valid26 = 1'd0;
reg           new_master_rdata_valid27 = 1'd0;
reg           new_master_rdata_valid28 = 1'd0;
reg           new_master_rdata_valid29 = 1'd0;
reg           new_master_rdata_valid3 = 1'd0;
reg           new_master_rdata_valid30 = 1'd0;
reg           new_master_rdata_valid31 = 1'd0;
reg           new_master_rdata_valid32 = 1'd0;
reg           new_master_rdata_valid33 = 1'd0;
reg           new_master_rdata_valid34 = 1'd0;
reg           new_master_rdata_valid35 = 1'd0;
reg           new_master_rdata_valid36 = 1'd0;
reg           new_master_rdata_valid37 = 1'd0;
reg           new_master_rdata_valid38 = 1'd0;
reg           new_master_rdata_valid39 = 1'd0;
reg           new_master_rdata_valid4 = 1'd0;
reg           new_master_rdata_valid40 = 1'd0;
reg           new_master_rdata_valid41 = 1'd0;
reg           new_master_rdata_valid5 = 1'd0;
reg           new_master_rdata_valid6 = 1'd0;
reg           new_master_rdata_valid7 = 1'd0;
reg           new_master_rdata_valid8 = 1'd0;
reg           new_master_rdata_valid9 = 1'd0;
reg           new_master_wdata_ready0 = 1'd0;
reg           new_master_wdata_ready1 = 1'd0;
reg           new_master_wdata_ready10 = 1'd0;
reg           new_master_wdata_ready11 = 1'd0;
reg           new_master_wdata_ready2 = 1'd0;
reg           new_master_wdata_ready3 = 1'd0;
reg           new_master_wdata_ready4 = 1'd0;
reg           new_master_wdata_ready5 = 1'd0;
reg           new_master_wdata_ready6 = 1'd0;
reg           new_master_wdata_ready7 = 1'd0;
reg           new_master_wdata_ready8 = 1'd0;
reg           new_master_wdata_ready9 = 1'd0;
wire          por_clk;
reg           por_rst = 1'd0;
reg     [1:0] refresher_next_state = 2'd0;
reg     [1:0] refresher_state = 2'd0;
wire          request;
reg    [29:0] rhs_self0 = 30'd0;
reg    [31:0] rhs_self1 = 32'd0;
reg     [2:0] rhs_self10 = 3'd0;
reg           rhs_self11 = 1'd0;
reg           rhs_self12 = 1'd0;
reg           rhs_self13 = 1'd0;
reg           rhs_self14 = 1'd0;
reg    [13:0] rhs_self15 = 14'd0;
reg     [2:0] rhs_self16 = 3'd0;
reg           rhs_self17 = 1'd0;
reg           rhs_self18 = 1'd0;
reg           rhs_self19 = 1'd0;
reg     [3:0] rhs_self2 = 4'd0;
reg    [20:0] rhs_self20 = 21'd0;
reg           rhs_self21 = 1'd0;
reg           rhs_self22 = 1'd0;
reg    [20:0] rhs_self23 = 21'd0;
reg           rhs_self24 = 1'd0;
reg           rhs_self25 = 1'd0;
reg    [20:0] rhs_self26 = 21'd0;
reg           rhs_self27 = 1'd0;
reg           rhs_self28 = 1'd0;
reg    [20:0] rhs_self29 = 21'd0;
reg           rhs_self3 = 1'd0;
reg           rhs_self30 = 1'd0;
reg           rhs_self31 = 1'd0;
reg    [20:0] rhs_self32 = 21'd0;
reg           rhs_self33 = 1'd0;
reg           rhs_self34 = 1'd0;
reg    [20:0] rhs_self35 = 21'd0;
reg           rhs_self36 = 1'd0;
reg           rhs_self37 = 1'd0;
reg    [20:0] rhs_self38 = 21'd0;
reg           rhs_self39 = 1'd0;
reg           rhs_self4 = 1'd0;
reg           rhs_self40 = 1'd0;
reg    [20:0] rhs_self41 = 21'd0;
reg           rhs_self42 = 1'd0;
reg           rhs_self43 = 1'd0;
reg           rhs_self5 = 1'd0;
reg     [2:0] rhs_self6 = 3'd0;
reg     [1:0] rhs_self7 = 2'd0;
reg           rhs_self8 = 1'd0;
reg    [13:0] rhs_self9 = 14'd0;
wire          roundrobin0_ce;
reg     [1:0] roundrobin0_grant = 2'd0;
wire    [2:0] roundrobin0_request;
wire          roundrobin1_ce;
reg     [1:0] roundrobin1_grant = 2'd0;
wire    [2:0] roundrobin1_request;
wire          roundrobin2_ce;
reg     [1:0] roundrobin2_grant = 2'd0;
wire    [2:0] roundrobin2_request;
wire          roundrobin3_ce;
reg     [1:0] roundrobin3_grant = 2'd0;
wire    [2:0] roundrobin3_request;
wire          roundrobin4_ce;
reg     [1:0] roundrobin4_grant = 2'd0;
wire    [2:0] roundrobin4_request;
wire          roundrobin5_ce;
reg     [1:0] roundrobin5_grant = 2'd0;
wire    [2:0] roundrobin5_request;
wire          roundrobin6_ce;
reg     [1:0] roundrobin6_grant = 2'd0;
wire    [2:0] roundrobin6_request;
wire          roundrobin7_ce;
reg     [1:0] roundrobin7_grant = 2'd0;
wire    [2:0] roundrobin7_request;
reg           rs232phyrx_next_state = 1'd0;
reg           rs232phyrx_state = 1'd0;
reg           rs232phytx_next_state = 1'd0;
reg           rs232phytx_state = 1'd0;
wire          rst10;
wire          rst11;
reg     [2:0] self0 = 3'd0;
reg    [13:0] self1 = 14'd0;
reg           self10 = 1'd0;
reg           self11 = 1'd0;
reg           self12 = 1'd0;
reg           self13 = 1'd0;
reg           self2 = 1'd0;
reg           self3 = 1'd0;
reg           self4 = 1'd0;
reg           self5 = 1'd0;
reg           self6 = 1'd0;
reg     [2:0] self7 = 3'd0;
reg    [13:0] self8 = 14'd0;
reg           self9 = 1'd0;
reg           shared_ack = 1'd0;
wire   [29:0] shared_adr;
wire    [1:0] shared_bte;
wire    [2:0] shared_cti;
wire          shared_cyc;
reg    [31:0] shared_dat_r = 32'd0;
wire   [31:0] shared_dat_w;
wire          shared_err;
wire    [3:0] shared_sel;
wire          shared_stb;
wire          shared_we;
reg     [5:0] slave_sel = 6'd0;
reg     [5:0] slave_sel_r = 6'd0;
wire          sys2x_clk;
wire          sys2x_i_clk;
wire          sys2x_i_rst;
wire          sys_clk;
wire          sys_rst;
reg           t_self0 = 1'd0;
reg           t_self1 = 1'd0;
reg           t_self2 = 1'd0;
reg           t_self3 = 1'd0;
reg           t_self4 = 1'd0;
reg           t_self5 = 1'd0;
wire          wait_1;
reg     [1:0] wishbone2csr_next_state = 2'd0;
reg     [1:0] wishbone2csr_state = 2'd0;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign basesoc_reset = (basesoc_soc_rst | basesoc_cpu_rst);
assign crg_stop = gw5ddrphy_stop0;
assign crg_reset0 = gw5ddrphy_reset0;
assign basesoc_litedramnativeport0_cmd_valid = basesoc_ibus_cmd_valid;
assign basesoc_ibus_cmd_ready = basesoc_litedramnativeport0_cmd_ready;
assign basesoc_litedramnativeport0_cmd_first = basesoc_ibus_cmd_first;
assign basesoc_litedramnativeport0_cmd_last = basesoc_ibus_cmd_last;
assign basesoc_litedramnativeport0_cmd_payload_we = basesoc_ibus_cmd_payload_we;
assign basesoc_litedramnativeport0_cmd_payload_addr = basesoc_ibus_cmd_payload_addr;
assign basesoc_litedramnativeport0_wdata_valid = basesoc_ibus_wdata_valid;
assign basesoc_ibus_wdata_ready = basesoc_litedramnativeport0_wdata_ready;
assign basesoc_litedramnativeport0_wdata_first = basesoc_ibus_wdata_first;
assign basesoc_litedramnativeport0_wdata_last = basesoc_ibus_wdata_last;
assign basesoc_litedramnativeport0_wdata_payload_data = basesoc_ibus_wdata_payload_data;
assign basesoc_litedramnativeport0_wdata_payload_we = basesoc_ibus_wdata_payload_we;
assign basesoc_ibus_rdata_valid = basesoc_litedramnativeport0_rdata_valid;
assign basesoc_litedramnativeport0_rdata_ready = basesoc_ibus_rdata_ready;
assign basesoc_ibus_rdata_first = basesoc_litedramnativeport0_rdata_first;
assign basesoc_ibus_rdata_last = basesoc_litedramnativeport0_rdata_last;
assign basesoc_ibus_rdata_payload_data = basesoc_litedramnativeport0_rdata_payload_data;
assign basesoc_litedramnativeport1_cmd_valid = basesoc_dbus_cmd_valid;
assign basesoc_dbus_cmd_ready = basesoc_litedramnativeport1_cmd_ready;
assign basesoc_litedramnativeport1_cmd_first = basesoc_dbus_cmd_first;
assign basesoc_litedramnativeport1_cmd_last = basesoc_dbus_cmd_last;
assign basesoc_litedramnativeport1_cmd_payload_we = basesoc_dbus_cmd_payload_we;
assign basesoc_litedramnativeport1_cmd_payload_addr = basesoc_dbus_cmd_payload_addr;
assign basesoc_litedramnativeport1_wdata_valid = basesoc_dbus_wdata_valid;
assign basesoc_dbus_wdata_ready = basesoc_litedramnativeport1_wdata_ready;
assign basesoc_litedramnativeport1_wdata_first = basesoc_dbus_wdata_first;
assign basesoc_litedramnativeport1_wdata_last = basesoc_dbus_wdata_last;
assign basesoc_litedramnativeport1_wdata_payload_data = basesoc_dbus_wdata_payload_data;
assign basesoc_litedramnativeport1_wdata_payload_we = basesoc_dbus_wdata_payload_we;
assign basesoc_dbus_rdata_valid = basesoc_litedramnativeport1_rdata_valid;
assign basesoc_litedramnativeport1_rdata_ready = basesoc_dbus_rdata_ready;
assign basesoc_dbus_rdata_first = basesoc_litedramnativeport1_rdata_first;
assign basesoc_dbus_rdata_last = basesoc_litedramnativeport1_rdata_last;
assign basesoc_dbus_rdata_payload_data = basesoc_litedramnativeport1_rdata_payload_data;
always @(*) begin
    crg_rst <= 1'd0;
    if (basesoc_soc_rst) begin
        crg_rst <= 1'd1;
    end
end
assign basesoc_bus_error = error;
always @(*) begin
    basesoc_interrupt <= 32'd0;
    basesoc_interrupt[2] <= basesoc_timer_irq;
    basesoc_interrupt[1] <= basesoc_uart_irq;
end
assign por_clk = clk50;
assign crg_por_done = (crg_por_count == 1'd0);
assign crg_reset1 = ((~crg_por_done) | rst);
assign init_clk = clk50;
assign init_rst = crg_reset1;
assign crg_clkin = clk50;
assign sys_clk = crg_clkout0;
assign sys2x_i_clk = crg_clkout1;
assign shared_adr = rhs_self0;
assign shared_dat_w = rhs_self1;
assign shared_sel = rhs_self2;
assign shared_cyc = rhs_self3;
assign shared_stb = rhs_self4;
assign shared_we = rhs_self5;
assign shared_cti = rhs_self6;
assign shared_bte = rhs_self7;
assign basesoc_pbus_dat_r = shared_dat_r;
assign basesoc_pbus_ack = (shared_ack & (grant == 1'd0));
assign basesoc_pbus_err = (shared_err & (grant == 1'd0));
assign request = {basesoc_pbus_cyc};
assign grant = 1'd0;
always @(*) begin
    slave_sel <= 6'd0;
    slave_sel[0] <= (shared_adr[29:20] == 10'd963);
    slave_sel[1] <= (shared_adr[29:14] == 16'd61441);
    slave_sel[2] <= (shared_adr[29:15] == 1'd0);
    slave_sel[3] <= (shared_adr[29:11] == 16'd32768);
    slave_sel[4] <= (shared_adr[29:27] == 2'd2);
    slave_sel[5] <= (shared_adr[29:14] == 16'd61440);
end
assign basesoc_plicbus_adr = shared_adr;
assign basesoc_plicbus_dat_w = shared_dat_w;
assign basesoc_plicbus_sel = shared_sel;
assign basesoc_plicbus_stb = shared_stb;
assign basesoc_plicbus_we = shared_we;
assign basesoc_plicbus_cti = shared_cti;
assign basesoc_plicbus_bte = shared_bte;
assign basesoc_clintbus_adr = shared_adr;
assign basesoc_clintbus_dat_w = shared_dat_w;
assign basesoc_clintbus_sel = shared_sel;
assign basesoc_clintbus_stb = shared_stb;
assign basesoc_clintbus_we = shared_we;
assign basesoc_clintbus_cti = shared_cti;
assign basesoc_clintbus_bte = shared_bte;
assign basesoc_basesoc_ram_bus_adr = shared_adr;
assign basesoc_basesoc_ram_bus_dat_w = shared_dat_w;
assign basesoc_basesoc_ram_bus_sel = shared_sel;
assign basesoc_basesoc_ram_bus_stb = shared_stb;
assign basesoc_basesoc_ram_bus_we = shared_we;
assign basesoc_basesoc_ram_bus_cti = shared_cti;
assign basesoc_basesoc_ram_bus_bte = shared_bte;
assign basesoc_ram_bus_ram_bus_adr = shared_adr;
assign basesoc_ram_bus_ram_bus_dat_w = shared_dat_w;
assign basesoc_ram_bus_ram_bus_sel = shared_sel;
assign basesoc_ram_bus_ram_bus_stb = shared_stb;
assign basesoc_ram_bus_ram_bus_we = shared_we;
assign basesoc_ram_bus_ram_bus_cti = shared_cti;
assign basesoc_ram_bus_ram_bus_bte = shared_bte;
assign basesoc_wb_sdram_adr = shared_adr;
assign basesoc_wb_sdram_dat_w = shared_dat_w;
assign basesoc_wb_sdram_sel = shared_sel;
assign basesoc_wb_sdram_stb = shared_stb;
assign basesoc_wb_sdram_we = shared_we;
assign basesoc_wb_sdram_cti = shared_cti;
assign basesoc_wb_sdram_bte = shared_bte;
assign interface0_adr = shared_adr;
assign interface0_dat_w = shared_dat_w;
assign interface0_sel = shared_sel;
assign interface0_stb = shared_stb;
assign interface0_we = shared_we;
assign interface0_cti = shared_cti;
assign interface0_bte = shared_bte;
assign basesoc_plicbus_cyc = (shared_cyc & slave_sel[0]);
assign basesoc_clintbus_cyc = (shared_cyc & slave_sel[1]);
assign basesoc_basesoc_ram_bus_cyc = (shared_cyc & slave_sel[2]);
assign basesoc_ram_bus_ram_bus_cyc = (shared_cyc & slave_sel[3]);
assign basesoc_wb_sdram_cyc = (shared_cyc & slave_sel[4]);
assign interface0_cyc = (shared_cyc & slave_sel[5]);
assign shared_err = (((((basesoc_plicbus_err | basesoc_clintbus_err) | basesoc_basesoc_ram_bus_err) | basesoc_ram_bus_ram_bus_err) | basesoc_wb_sdram_err) | interface0_err);
assign wait_1 = ((shared_stb & shared_cyc) & (~shared_ack));
always @(*) begin
    error <= 1'd0;
    shared_ack <= 1'd0;
    shared_dat_r <= 32'd0;
    shared_ack <= (((((basesoc_plicbus_ack | basesoc_clintbus_ack) | basesoc_basesoc_ram_bus_ack) | basesoc_ram_bus_ram_bus_ack) | basesoc_wb_sdram_ack) | interface0_ack);
    shared_dat_r <= (((((({32{slave_sel_r[0]}} & basesoc_plicbus_dat_r) | ({32{slave_sel_r[1]}} & basesoc_clintbus_dat_r)) | ({32{slave_sel_r[2]}} & basesoc_basesoc_ram_bus_dat_r)) | ({32{slave_sel_r[3]}} & basesoc_ram_bus_ram_bus_dat_r)) | ({32{slave_sel_r[4]}} & basesoc_wb_sdram_dat_r)) | ({32{slave_sel_r[5]}} & interface0_dat_r));
    if (done) begin
        shared_dat_r <= 32'd4294967295;
        shared_ack <= 1'd1;
        error <= 1'd1;
    end
end
assign done = (count == 1'd0);
assign basesoc_bus_errors_status = basesoc_bus_errors;
assign basesoc_basesoc_adr = basesoc_basesoc_ram_bus_adr[14:0];
assign basesoc_basesoc_ram_bus_dat_r = basesoc_basesoc_dat_r;
always @(*) begin
    basesoc_ram_we <= 4'd0;
    basesoc_ram_we[0] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[0]);
    basesoc_ram_we[1] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[1]);
    basesoc_ram_we[2] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[2]);
    basesoc_ram_we[3] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[3]);
end
assign basesoc_ram_adr = basesoc_ram_bus_ram_bus_adr[10:0];
assign basesoc_ram_bus_ram_bus_dat_r = basesoc_ram_dat_r;
assign basesoc_ram_dat_w = basesoc_ram_bus_ram_bus_dat_w;
always @(*) begin
    basesoc_serial_tx_rs232phytx_next_value1 <= 1'd0;
    basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd0;
    basesoc_tx_count_rs232phytx_next_value0 <= 4'd0;
    basesoc_tx_count_rs232phytx_next_value_ce0 <= 1'd0;
    basesoc_tx_data_rs232phytx_next_value2 <= 8'd0;
    basesoc_tx_data_rs232phytx_next_value_ce2 <= 1'd0;
    basesoc_tx_enable <= 1'd0;
    basesoc_tx_sink_ready <= 1'd0;
    rs232phytx_next_state <= 1'd0;
    rs232phytx_next_state <= rs232phytx_state;
    case (rs232phytx_state)
        1'd1: begin
            basesoc_tx_enable <= 1'd1;
            if (basesoc_tx_tick) begin
                basesoc_serial_tx_rs232phytx_next_value1 <= basesoc_tx_data;
                basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
                basesoc_tx_count_rs232phytx_next_value0 <= (basesoc_tx_count + 1'd1);
                basesoc_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
                basesoc_tx_data_rs232phytx_next_value2 <= {1'd1, basesoc_tx_data[7:1]};
                basesoc_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
                if ((basesoc_tx_count == 4'd9)) begin
                    basesoc_tx_sink_ready <= 1'd1;
                    rs232phytx_next_state <= 1'd0;
                end
            end
        end
        default: begin
            basesoc_tx_count_rs232phytx_next_value0 <= 1'd0;
            basesoc_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
            basesoc_serial_tx_rs232phytx_next_value1 <= 1'd1;
            basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
            if (basesoc_tx_sink_valid) begin
                basesoc_serial_tx_rs232phytx_next_value1 <= 1'd0;
                basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
                basesoc_tx_data_rs232phytx_next_value2 <= basesoc_tx_sink_payload_data;
                basesoc_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
                rs232phytx_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    basesoc_rx_count_rs232phyrx_next_value0 <= 4'd0;
    basesoc_rx_count_rs232phyrx_next_value_ce0 <= 1'd0;
    basesoc_rx_data_rs232phyrx_next_value1 <= 8'd0;
    basesoc_rx_data_rs232phyrx_next_value_ce1 <= 1'd0;
    basesoc_rx_enable <= 1'd0;
    basesoc_rx_source_payload_data <= 8'd0;
    basesoc_rx_source_valid <= 1'd0;
    rs232phyrx_next_state <= 1'd0;
    rs232phyrx_next_state <= rs232phyrx_state;
    case (rs232phyrx_state)
        1'd1: begin
            basesoc_rx_enable <= 1'd1;
            if (basesoc_rx_tick) begin
                basesoc_rx_count_rs232phyrx_next_value0 <= (basesoc_rx_count + 1'd1);
                basesoc_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
                basesoc_rx_data_rs232phyrx_next_value1 <= {basesoc_rx_rx, basesoc_rx_data[7:1]};
                basesoc_rx_data_rs232phyrx_next_value_ce1 <= 1'd1;
                if ((basesoc_rx_count == 4'd9)) begin
                    basesoc_rx_source_valid <= (basesoc_rx_rx == 1'd1);
                    basesoc_rx_source_payload_data <= basesoc_rx_data;
                    rs232phyrx_next_state <= 1'd0;
                end
            end
        end
        default: begin
            basesoc_rx_count_rs232phyrx_next_value0 <= 1'd0;
            basesoc_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
            if (((basesoc_rx_rx == 1'd0) & (basesoc_rx_rx_d == 1'd1))) begin
                rs232phyrx_next_state <= 1'd1;
            end
        end
    endcase
end
assign basesoc_uart_uart_sink_valid = basesoc_rx_source_valid;
assign basesoc_rx_source_ready = basesoc_uart_uart_sink_ready;
assign basesoc_uart_uart_sink_first = basesoc_rx_source_first;
assign basesoc_uart_uart_sink_last = basesoc_rx_source_last;
assign basesoc_uart_uart_sink_payload_data = basesoc_rx_source_payload_data;
assign basesoc_tx_sink_valid = basesoc_uart_uart_source_valid;
assign basesoc_uart_uart_source_ready = basesoc_tx_sink_ready;
assign basesoc_tx_sink_first = basesoc_uart_uart_source_first;
assign basesoc_tx_sink_last = basesoc_uart_uart_source_last;
assign basesoc_tx_sink_payload_data = basesoc_uart_uart_source_payload_data;
assign basesoc_uart_tx_fifo_sink_valid = basesoc_uart_rxtx_re;
assign basesoc_uart_tx_fifo_sink_payload_data = basesoc_uart_rxtx_r;
assign basesoc_uart_uart_source_valid = basesoc_uart_tx_fifo_source_valid;
assign basesoc_uart_tx_fifo_source_ready = basesoc_uart_uart_source_ready;
assign basesoc_uart_uart_source_first = basesoc_uart_tx_fifo_source_first;
assign basesoc_uart_uart_source_last = basesoc_uart_tx_fifo_source_last;
assign basesoc_uart_uart_source_payload_data = basesoc_uart_tx_fifo_source_payload_data;
assign basesoc_uart_txfull_status = (~basesoc_uart_tx_fifo_sink_ready);
assign basesoc_uart_txempty_status = (~basesoc_uart_tx_fifo_source_valid);
assign basesoc_uart_tx_trigger = basesoc_uart_tx_fifo_sink_ready;
assign basesoc_uart_rx_fifo_sink_valid = basesoc_uart_uart_sink_valid;
assign basesoc_uart_uart_sink_ready = basesoc_uart_rx_fifo_sink_ready;
assign basesoc_uart_rx_fifo_sink_first = basesoc_uart_uart_sink_first;
assign basesoc_uart_rx_fifo_sink_last = basesoc_uart_uart_sink_last;
assign basesoc_uart_rx_fifo_sink_payload_data = basesoc_uart_uart_sink_payload_data;
assign basesoc_uart_rxtx_w = basesoc_uart_rx_fifo_source_payload_data;
assign basesoc_uart_rx_fifo_source_ready = (basesoc_uart_rx_clear | (1'd0 & basesoc_uart_rxtx_we));
assign basesoc_uart_rxempty_status = (~basesoc_uart_rx_fifo_source_valid);
assign basesoc_uart_rxfull_status = (~basesoc_uart_rx_fifo_sink_ready);
assign basesoc_uart_rx_trigger = basesoc_uart_rx_fifo_source_valid;
assign basesoc_uart_tx0 = basesoc_uart_tx_status;
assign basesoc_uart_tx1 = basesoc_uart_tx_pending;
always @(*) begin
    basesoc_uart_tx_clear <= 1'd0;
    if ((basesoc_uart_pending_re & basesoc_uart_pending_r[0])) begin
        basesoc_uart_tx_clear <= 1'd1;
    end
end
assign basesoc_uart_rx0 = basesoc_uart_rx_status;
assign basesoc_uart_rx1 = basesoc_uart_rx_pending;
always @(*) begin
    basesoc_uart_rx_clear <= 1'd0;
    if ((basesoc_uart_pending_re & basesoc_uart_pending_r[1])) begin
        basesoc_uart_rx_clear <= 1'd1;
    end
end
assign basesoc_uart_irq = ((basesoc_uart_pending_status[0] & basesoc_uart_enable_storage[0]) | (basesoc_uart_pending_status[1] & basesoc_uart_enable_storage[1]));
assign basesoc_uart_tx_status = basesoc_uart_tx_trigger;
assign basesoc_uart_rx_status = basesoc_uart_rx_trigger;
assign basesoc_uart_tx_fifo_syncfifo_din = {basesoc_uart_tx_fifo_fifo_in_last, basesoc_uart_tx_fifo_fifo_in_first, basesoc_uart_tx_fifo_fifo_in_payload_data};
assign {basesoc_uart_tx_fifo_fifo_out_last, basesoc_uart_tx_fifo_fifo_out_first, basesoc_uart_tx_fifo_fifo_out_payload_data} = basesoc_uart_tx_fifo_syncfifo_dout;
assign basesoc_uart_tx_fifo_sink_ready = basesoc_uart_tx_fifo_syncfifo_writable;
assign basesoc_uart_tx_fifo_syncfifo_we = basesoc_uart_tx_fifo_sink_valid;
assign basesoc_uart_tx_fifo_fifo_in_first = basesoc_uart_tx_fifo_sink_first;
assign basesoc_uart_tx_fifo_fifo_in_last = basesoc_uart_tx_fifo_sink_last;
assign basesoc_uart_tx_fifo_fifo_in_payload_data = basesoc_uart_tx_fifo_sink_payload_data;
assign basesoc_uart_tx_fifo_source_valid = basesoc_uart_tx_fifo_readable;
assign basesoc_uart_tx_fifo_source_first = basesoc_uart_tx_fifo_fifo_out_first;
assign basesoc_uart_tx_fifo_source_last = basesoc_uart_tx_fifo_fifo_out_last;
assign basesoc_uart_tx_fifo_source_payload_data = basesoc_uart_tx_fifo_fifo_out_payload_data;
assign basesoc_uart_tx_fifo_re = basesoc_uart_tx_fifo_source_ready;
assign basesoc_uart_tx_fifo_syncfifo_re = (basesoc_uart_tx_fifo_syncfifo_readable & ((~basesoc_uart_tx_fifo_readable) | basesoc_uart_tx_fifo_re));
assign basesoc_uart_tx_fifo_level1 = (basesoc_uart_tx_fifo_level0 + basesoc_uart_tx_fifo_readable);
always @(*) begin
    basesoc_uart_tx_fifo_wrport_adr <= 4'd0;
    if (basesoc_uart_tx_fifo_replace) begin
        basesoc_uart_tx_fifo_wrport_adr <= (basesoc_uart_tx_fifo_produce - 1'd1);
    end else begin
        basesoc_uart_tx_fifo_wrport_adr <= basesoc_uart_tx_fifo_produce;
    end
end
assign basesoc_uart_tx_fifo_wrport_dat_w = basesoc_uart_tx_fifo_syncfifo_din;
assign basesoc_uart_tx_fifo_wrport_we = (basesoc_uart_tx_fifo_syncfifo_we & (basesoc_uart_tx_fifo_syncfifo_writable | basesoc_uart_tx_fifo_replace));
assign basesoc_uart_tx_fifo_do_read = (basesoc_uart_tx_fifo_syncfifo_readable & basesoc_uart_tx_fifo_syncfifo_re);
assign basesoc_uart_tx_fifo_rdport_adr = basesoc_uart_tx_fifo_consume;
assign basesoc_uart_tx_fifo_syncfifo_dout = basesoc_uart_tx_fifo_rdport_dat_r;
assign basesoc_uart_tx_fifo_rdport_re = basesoc_uart_tx_fifo_do_read;
assign basesoc_uart_tx_fifo_syncfifo_writable = (basesoc_uart_tx_fifo_level0 != 5'd16);
assign basesoc_uart_tx_fifo_syncfifo_readable = (basesoc_uart_tx_fifo_level0 != 1'd0);
assign basesoc_uart_rx_fifo_syncfifo_din = {basesoc_uart_rx_fifo_fifo_in_last, basesoc_uart_rx_fifo_fifo_in_first, basesoc_uart_rx_fifo_fifo_in_payload_data};
assign {basesoc_uart_rx_fifo_fifo_out_last, basesoc_uart_rx_fifo_fifo_out_first, basesoc_uart_rx_fifo_fifo_out_payload_data} = basesoc_uart_rx_fifo_syncfifo_dout;
assign basesoc_uart_rx_fifo_sink_ready = basesoc_uart_rx_fifo_syncfifo_writable;
assign basesoc_uart_rx_fifo_syncfifo_we = basesoc_uart_rx_fifo_sink_valid;
assign basesoc_uart_rx_fifo_fifo_in_first = basesoc_uart_rx_fifo_sink_first;
assign basesoc_uart_rx_fifo_fifo_in_last = basesoc_uart_rx_fifo_sink_last;
assign basesoc_uart_rx_fifo_fifo_in_payload_data = basesoc_uart_rx_fifo_sink_payload_data;
assign basesoc_uart_rx_fifo_source_valid = basesoc_uart_rx_fifo_readable;
assign basesoc_uart_rx_fifo_source_first = basesoc_uart_rx_fifo_fifo_out_first;
assign basesoc_uart_rx_fifo_source_last = basesoc_uart_rx_fifo_fifo_out_last;
assign basesoc_uart_rx_fifo_source_payload_data = basesoc_uart_rx_fifo_fifo_out_payload_data;
assign basesoc_uart_rx_fifo_re = basesoc_uart_rx_fifo_source_ready;
assign basesoc_uart_rx_fifo_syncfifo_re = (basesoc_uart_rx_fifo_syncfifo_readable & ((~basesoc_uart_rx_fifo_readable) | basesoc_uart_rx_fifo_re));
assign basesoc_uart_rx_fifo_level1 = (basesoc_uart_rx_fifo_level0 + basesoc_uart_rx_fifo_readable);
always @(*) begin
    basesoc_uart_rx_fifo_wrport_adr <= 4'd0;
    if (basesoc_uart_rx_fifo_replace) begin
        basesoc_uart_rx_fifo_wrport_adr <= (basesoc_uart_rx_fifo_produce - 1'd1);
    end else begin
        basesoc_uart_rx_fifo_wrport_adr <= basesoc_uart_rx_fifo_produce;
    end
end
assign basesoc_uart_rx_fifo_wrport_dat_w = basesoc_uart_rx_fifo_syncfifo_din;
assign basesoc_uart_rx_fifo_wrport_we = (basesoc_uart_rx_fifo_syncfifo_we & (basesoc_uart_rx_fifo_syncfifo_writable | basesoc_uart_rx_fifo_replace));
assign basesoc_uart_rx_fifo_do_read = (basesoc_uart_rx_fifo_syncfifo_readable & basesoc_uart_rx_fifo_syncfifo_re);
assign basesoc_uart_rx_fifo_rdport_adr = basesoc_uart_rx_fifo_consume;
assign basesoc_uart_rx_fifo_syncfifo_dout = basesoc_uart_rx_fifo_rdport_dat_r;
assign basesoc_uart_rx_fifo_rdport_re = basesoc_uart_rx_fifo_do_read;
assign basesoc_uart_rx_fifo_syncfifo_writable = (basesoc_uart_rx_fifo_level0 != 5'd16);
assign basesoc_uart_rx_fifo_syncfifo_readable = (basesoc_uart_rx_fifo_level0 != 1'd0);
assign basesoc_timer_zero_trigger = (basesoc_timer_value == 1'd0);
assign basesoc_timer_zero0 = basesoc_timer_zero_status;
assign basesoc_timer_zero1 = basesoc_timer_zero_pending;
always @(*) begin
    basesoc_timer_zero_clear <= 1'd0;
    if ((basesoc_timer_pending_re & basesoc_timer_pending_r)) begin
        basesoc_timer_zero_clear <= 1'd1;
    end
end
assign basesoc_timer_irq = (basesoc_timer_pending_status & basesoc_timer_enable_storage);
assign basesoc_timer_zero_status = basesoc_timer_zero_trigger;
always @(*) begin
    gw5ddrphy_dm_o_data0 <= 8'd0;
    gw5ddrphy_dm_o_data0[0] <= gw5ddrphy_dfi_p0_wrdata_mask[0];
    gw5ddrphy_dm_o_data0[1] <= gw5ddrphy_dfi_p0_wrdata_mask[4];
    gw5ddrphy_dm_o_data0[2] <= gw5ddrphy_dfi_p0_wrdata_mask[8];
    gw5ddrphy_dm_o_data0[3] <= gw5ddrphy_dfi_p0_wrdata_mask[12];
    gw5ddrphy_dm_o_data0[4] <= gw5ddrphy_dfi_p1_wrdata_mask[0];
    gw5ddrphy_dm_o_data0[5] <= gw5ddrphy_dfi_p1_wrdata_mask[4];
    gw5ddrphy_dm_o_data0[6] <= gw5ddrphy_dfi_p1_wrdata_mask[8];
    gw5ddrphy_dm_o_data0[7] <= gw5ddrphy_dfi_p1_wrdata_mask[12];
end
always @(*) begin
    gw5ddrphy_dq_o_data0 <= 8'd0;
    gw5ddrphy_dq_o_data0[0] <= gw5ddrphy_dfi_p0_wrdata[0];
    gw5ddrphy_dq_o_data0[1] <= gw5ddrphy_dfi_p0_wrdata[32];
    gw5ddrphy_dq_o_data0[2] <= gw5ddrphy_dfi_p0_wrdata[64];
    gw5ddrphy_dq_o_data0[3] <= gw5ddrphy_dfi_p0_wrdata[96];
    gw5ddrphy_dq_o_data0[4] <= gw5ddrphy_dfi_p1_wrdata[0];
    gw5ddrphy_dq_o_data0[5] <= gw5ddrphy_dfi_p1_wrdata[32];
    gw5ddrphy_dq_o_data0[6] <= gw5ddrphy_dfi_p1_wrdata[64];
    gw5ddrphy_dq_o_data0[7] <= gw5ddrphy_dfi_p1_wrdata[96];
end
assign gw5ddrphy_dq_i_data0 = {gw5ddrphy_bitslip0_o, gw5ddrphy_dq_i_bitslip_o_d0};
always @(*) begin
    gw5ddrphy_dq_o_data1 <= 8'd0;
    gw5ddrphy_dq_o_data1[0] <= gw5ddrphy_dfi_p0_wrdata[1];
    gw5ddrphy_dq_o_data1[1] <= gw5ddrphy_dfi_p0_wrdata[33];
    gw5ddrphy_dq_o_data1[2] <= gw5ddrphy_dfi_p0_wrdata[65];
    gw5ddrphy_dq_o_data1[3] <= gw5ddrphy_dfi_p0_wrdata[97];
    gw5ddrphy_dq_o_data1[4] <= gw5ddrphy_dfi_p1_wrdata[1];
    gw5ddrphy_dq_o_data1[5] <= gw5ddrphy_dfi_p1_wrdata[33];
    gw5ddrphy_dq_o_data1[6] <= gw5ddrphy_dfi_p1_wrdata[65];
    gw5ddrphy_dq_o_data1[7] <= gw5ddrphy_dfi_p1_wrdata[97];
end
assign gw5ddrphy_dq_i_data1 = {gw5ddrphy_bitslip1_o, gw5ddrphy_dq_i_bitslip_o_d1};
always @(*) begin
    gw5ddrphy_dq_o_data2 <= 8'd0;
    gw5ddrphy_dq_o_data2[0] <= gw5ddrphy_dfi_p0_wrdata[2];
    gw5ddrphy_dq_o_data2[1] <= gw5ddrphy_dfi_p0_wrdata[34];
    gw5ddrphy_dq_o_data2[2] <= gw5ddrphy_dfi_p0_wrdata[66];
    gw5ddrphy_dq_o_data2[3] <= gw5ddrphy_dfi_p0_wrdata[98];
    gw5ddrphy_dq_o_data2[4] <= gw5ddrphy_dfi_p1_wrdata[2];
    gw5ddrphy_dq_o_data2[5] <= gw5ddrphy_dfi_p1_wrdata[34];
    gw5ddrphy_dq_o_data2[6] <= gw5ddrphy_dfi_p1_wrdata[66];
    gw5ddrphy_dq_o_data2[7] <= gw5ddrphy_dfi_p1_wrdata[98];
end
assign gw5ddrphy_dq_i_data2 = {gw5ddrphy_bitslip2_o, gw5ddrphy_dq_i_bitslip_o_d2};
always @(*) begin
    gw5ddrphy_dq_o_data3 <= 8'd0;
    gw5ddrphy_dq_o_data3[0] <= gw5ddrphy_dfi_p0_wrdata[3];
    gw5ddrphy_dq_o_data3[1] <= gw5ddrphy_dfi_p0_wrdata[35];
    gw5ddrphy_dq_o_data3[2] <= gw5ddrphy_dfi_p0_wrdata[67];
    gw5ddrphy_dq_o_data3[3] <= gw5ddrphy_dfi_p0_wrdata[99];
    gw5ddrphy_dq_o_data3[4] <= gw5ddrphy_dfi_p1_wrdata[3];
    gw5ddrphy_dq_o_data3[5] <= gw5ddrphy_dfi_p1_wrdata[35];
    gw5ddrphy_dq_o_data3[6] <= gw5ddrphy_dfi_p1_wrdata[67];
    gw5ddrphy_dq_o_data3[7] <= gw5ddrphy_dfi_p1_wrdata[99];
end
assign gw5ddrphy_dq_i_data3 = {gw5ddrphy_bitslip3_o, gw5ddrphy_dq_i_bitslip_o_d3};
always @(*) begin
    gw5ddrphy_dq_o_data4 <= 8'd0;
    gw5ddrphy_dq_o_data4[0] <= gw5ddrphy_dfi_p0_wrdata[4];
    gw5ddrphy_dq_o_data4[1] <= gw5ddrphy_dfi_p0_wrdata[36];
    gw5ddrphy_dq_o_data4[2] <= gw5ddrphy_dfi_p0_wrdata[68];
    gw5ddrphy_dq_o_data4[3] <= gw5ddrphy_dfi_p0_wrdata[100];
    gw5ddrphy_dq_o_data4[4] <= gw5ddrphy_dfi_p1_wrdata[4];
    gw5ddrphy_dq_o_data4[5] <= gw5ddrphy_dfi_p1_wrdata[36];
    gw5ddrphy_dq_o_data4[6] <= gw5ddrphy_dfi_p1_wrdata[68];
    gw5ddrphy_dq_o_data4[7] <= gw5ddrphy_dfi_p1_wrdata[100];
end
assign gw5ddrphy_dq_i_data4 = {gw5ddrphy_bitslip4_o, gw5ddrphy_dq_i_bitslip_o_d4};
always @(*) begin
    gw5ddrphy_dq_o_data5 <= 8'd0;
    gw5ddrphy_dq_o_data5[0] <= gw5ddrphy_dfi_p0_wrdata[5];
    gw5ddrphy_dq_o_data5[1] <= gw5ddrphy_dfi_p0_wrdata[37];
    gw5ddrphy_dq_o_data5[2] <= gw5ddrphy_dfi_p0_wrdata[69];
    gw5ddrphy_dq_o_data5[3] <= gw5ddrphy_dfi_p0_wrdata[101];
    gw5ddrphy_dq_o_data5[4] <= gw5ddrphy_dfi_p1_wrdata[5];
    gw5ddrphy_dq_o_data5[5] <= gw5ddrphy_dfi_p1_wrdata[37];
    gw5ddrphy_dq_o_data5[6] <= gw5ddrphy_dfi_p1_wrdata[69];
    gw5ddrphy_dq_o_data5[7] <= gw5ddrphy_dfi_p1_wrdata[101];
end
assign gw5ddrphy_dq_i_data5 = {gw5ddrphy_bitslip5_o, gw5ddrphy_dq_i_bitslip_o_d5};
always @(*) begin
    gw5ddrphy_dq_o_data6 <= 8'd0;
    gw5ddrphy_dq_o_data6[0] <= gw5ddrphy_dfi_p0_wrdata[6];
    gw5ddrphy_dq_o_data6[1] <= gw5ddrphy_dfi_p0_wrdata[38];
    gw5ddrphy_dq_o_data6[2] <= gw5ddrphy_dfi_p0_wrdata[70];
    gw5ddrphy_dq_o_data6[3] <= gw5ddrphy_dfi_p0_wrdata[102];
    gw5ddrphy_dq_o_data6[4] <= gw5ddrphy_dfi_p1_wrdata[6];
    gw5ddrphy_dq_o_data6[5] <= gw5ddrphy_dfi_p1_wrdata[38];
    gw5ddrphy_dq_o_data6[6] <= gw5ddrphy_dfi_p1_wrdata[70];
    gw5ddrphy_dq_o_data6[7] <= gw5ddrphy_dfi_p1_wrdata[102];
end
assign gw5ddrphy_dq_i_data6 = {gw5ddrphy_bitslip6_o, gw5ddrphy_dq_i_bitslip_o_d6};
always @(*) begin
    gw5ddrphy_dq_o_data7 <= 8'd0;
    gw5ddrphy_dq_o_data7[0] <= gw5ddrphy_dfi_p0_wrdata[7];
    gw5ddrphy_dq_o_data7[1] <= gw5ddrphy_dfi_p0_wrdata[39];
    gw5ddrphy_dq_o_data7[2] <= gw5ddrphy_dfi_p0_wrdata[71];
    gw5ddrphy_dq_o_data7[3] <= gw5ddrphy_dfi_p0_wrdata[103];
    gw5ddrphy_dq_o_data7[4] <= gw5ddrphy_dfi_p1_wrdata[7];
    gw5ddrphy_dq_o_data7[5] <= gw5ddrphy_dfi_p1_wrdata[39];
    gw5ddrphy_dq_o_data7[6] <= gw5ddrphy_dfi_p1_wrdata[71];
    gw5ddrphy_dq_o_data7[7] <= gw5ddrphy_dfi_p1_wrdata[103];
end
assign gw5ddrphy_dq_i_data7 = {gw5ddrphy_bitslip7_o, gw5ddrphy_dq_i_bitslip_o_d7};
always @(*) begin
    gw5ddrphy_dm_o_data1 <= 8'd0;
    gw5ddrphy_dm_o_data1[0] <= gw5ddrphy_dfi_p0_wrdata_mask[1];
    gw5ddrphy_dm_o_data1[1] <= gw5ddrphy_dfi_p0_wrdata_mask[5];
    gw5ddrphy_dm_o_data1[2] <= gw5ddrphy_dfi_p0_wrdata_mask[9];
    gw5ddrphy_dm_o_data1[3] <= gw5ddrphy_dfi_p0_wrdata_mask[13];
    gw5ddrphy_dm_o_data1[4] <= gw5ddrphy_dfi_p1_wrdata_mask[1];
    gw5ddrphy_dm_o_data1[5] <= gw5ddrphy_dfi_p1_wrdata_mask[5];
    gw5ddrphy_dm_o_data1[6] <= gw5ddrphy_dfi_p1_wrdata_mask[9];
    gw5ddrphy_dm_o_data1[7] <= gw5ddrphy_dfi_p1_wrdata_mask[13];
end
always @(*) begin
    gw5ddrphy_dq_o_data8 <= 8'd0;
    gw5ddrphy_dq_o_data8[0] <= gw5ddrphy_dfi_p0_wrdata[8];
    gw5ddrphy_dq_o_data8[1] <= gw5ddrphy_dfi_p0_wrdata[40];
    gw5ddrphy_dq_o_data8[2] <= gw5ddrphy_dfi_p0_wrdata[72];
    gw5ddrphy_dq_o_data8[3] <= gw5ddrphy_dfi_p0_wrdata[104];
    gw5ddrphy_dq_o_data8[4] <= gw5ddrphy_dfi_p1_wrdata[8];
    gw5ddrphy_dq_o_data8[5] <= gw5ddrphy_dfi_p1_wrdata[40];
    gw5ddrphy_dq_o_data8[6] <= gw5ddrphy_dfi_p1_wrdata[72];
    gw5ddrphy_dq_o_data8[7] <= gw5ddrphy_dfi_p1_wrdata[104];
end
assign gw5ddrphy_dq_i_data8 = {gw5ddrphy_bitslip8_o, gw5ddrphy_dq_i_bitslip_o_d8};
always @(*) begin
    gw5ddrphy_dq_o_data9 <= 8'd0;
    gw5ddrphy_dq_o_data9[0] <= gw5ddrphy_dfi_p0_wrdata[9];
    gw5ddrphy_dq_o_data9[1] <= gw5ddrphy_dfi_p0_wrdata[41];
    gw5ddrphy_dq_o_data9[2] <= gw5ddrphy_dfi_p0_wrdata[73];
    gw5ddrphy_dq_o_data9[3] <= gw5ddrphy_dfi_p0_wrdata[105];
    gw5ddrphy_dq_o_data9[4] <= gw5ddrphy_dfi_p1_wrdata[9];
    gw5ddrphy_dq_o_data9[5] <= gw5ddrphy_dfi_p1_wrdata[41];
    gw5ddrphy_dq_o_data9[6] <= gw5ddrphy_dfi_p1_wrdata[73];
    gw5ddrphy_dq_o_data9[7] <= gw5ddrphy_dfi_p1_wrdata[105];
end
assign gw5ddrphy_dq_i_data9 = {gw5ddrphy_bitslip9_o, gw5ddrphy_dq_i_bitslip_o_d9};
always @(*) begin
    gw5ddrphy_dq_o_data10 <= 8'd0;
    gw5ddrphy_dq_o_data10[0] <= gw5ddrphy_dfi_p0_wrdata[10];
    gw5ddrphy_dq_o_data10[1] <= gw5ddrphy_dfi_p0_wrdata[42];
    gw5ddrphy_dq_o_data10[2] <= gw5ddrphy_dfi_p0_wrdata[74];
    gw5ddrphy_dq_o_data10[3] <= gw5ddrphy_dfi_p0_wrdata[106];
    gw5ddrphy_dq_o_data10[4] <= gw5ddrphy_dfi_p1_wrdata[10];
    gw5ddrphy_dq_o_data10[5] <= gw5ddrphy_dfi_p1_wrdata[42];
    gw5ddrphy_dq_o_data10[6] <= gw5ddrphy_dfi_p1_wrdata[74];
    gw5ddrphy_dq_o_data10[7] <= gw5ddrphy_dfi_p1_wrdata[106];
end
assign gw5ddrphy_dq_i_data10 = {gw5ddrphy_bitslip10_o, gw5ddrphy_dq_i_bitslip_o_d10};
always @(*) begin
    gw5ddrphy_dq_o_data11 <= 8'd0;
    gw5ddrphy_dq_o_data11[0] <= gw5ddrphy_dfi_p0_wrdata[11];
    gw5ddrphy_dq_o_data11[1] <= gw5ddrphy_dfi_p0_wrdata[43];
    gw5ddrphy_dq_o_data11[2] <= gw5ddrphy_dfi_p0_wrdata[75];
    gw5ddrphy_dq_o_data11[3] <= gw5ddrphy_dfi_p0_wrdata[107];
    gw5ddrphy_dq_o_data11[4] <= gw5ddrphy_dfi_p1_wrdata[11];
    gw5ddrphy_dq_o_data11[5] <= gw5ddrphy_dfi_p1_wrdata[43];
    gw5ddrphy_dq_o_data11[6] <= gw5ddrphy_dfi_p1_wrdata[75];
    gw5ddrphy_dq_o_data11[7] <= gw5ddrphy_dfi_p1_wrdata[107];
end
assign gw5ddrphy_dq_i_data11 = {gw5ddrphy_bitslip11_o, gw5ddrphy_dq_i_bitslip_o_d11};
always @(*) begin
    gw5ddrphy_dq_o_data12 <= 8'd0;
    gw5ddrphy_dq_o_data12[0] <= gw5ddrphy_dfi_p0_wrdata[12];
    gw5ddrphy_dq_o_data12[1] <= gw5ddrphy_dfi_p0_wrdata[44];
    gw5ddrphy_dq_o_data12[2] <= gw5ddrphy_dfi_p0_wrdata[76];
    gw5ddrphy_dq_o_data12[3] <= gw5ddrphy_dfi_p0_wrdata[108];
    gw5ddrphy_dq_o_data12[4] <= gw5ddrphy_dfi_p1_wrdata[12];
    gw5ddrphy_dq_o_data12[5] <= gw5ddrphy_dfi_p1_wrdata[44];
    gw5ddrphy_dq_o_data12[6] <= gw5ddrphy_dfi_p1_wrdata[76];
    gw5ddrphy_dq_o_data12[7] <= gw5ddrphy_dfi_p1_wrdata[108];
end
assign gw5ddrphy_dq_i_data12 = {gw5ddrphy_bitslip12_o, gw5ddrphy_dq_i_bitslip_o_d12};
always @(*) begin
    gw5ddrphy_dq_o_data13 <= 8'd0;
    gw5ddrphy_dq_o_data13[0] <= gw5ddrphy_dfi_p0_wrdata[13];
    gw5ddrphy_dq_o_data13[1] <= gw5ddrphy_dfi_p0_wrdata[45];
    gw5ddrphy_dq_o_data13[2] <= gw5ddrphy_dfi_p0_wrdata[77];
    gw5ddrphy_dq_o_data13[3] <= gw5ddrphy_dfi_p0_wrdata[109];
    gw5ddrphy_dq_o_data13[4] <= gw5ddrphy_dfi_p1_wrdata[13];
    gw5ddrphy_dq_o_data13[5] <= gw5ddrphy_dfi_p1_wrdata[45];
    gw5ddrphy_dq_o_data13[6] <= gw5ddrphy_dfi_p1_wrdata[77];
    gw5ddrphy_dq_o_data13[7] <= gw5ddrphy_dfi_p1_wrdata[109];
end
assign gw5ddrphy_dq_i_data13 = {gw5ddrphy_bitslip13_o, gw5ddrphy_dq_i_bitslip_o_d13};
always @(*) begin
    gw5ddrphy_dq_o_data14 <= 8'd0;
    gw5ddrphy_dq_o_data14[0] <= gw5ddrphy_dfi_p0_wrdata[14];
    gw5ddrphy_dq_o_data14[1] <= gw5ddrphy_dfi_p0_wrdata[46];
    gw5ddrphy_dq_o_data14[2] <= gw5ddrphy_dfi_p0_wrdata[78];
    gw5ddrphy_dq_o_data14[3] <= gw5ddrphy_dfi_p0_wrdata[110];
    gw5ddrphy_dq_o_data14[4] <= gw5ddrphy_dfi_p1_wrdata[14];
    gw5ddrphy_dq_o_data14[5] <= gw5ddrphy_dfi_p1_wrdata[46];
    gw5ddrphy_dq_o_data14[6] <= gw5ddrphy_dfi_p1_wrdata[78];
    gw5ddrphy_dq_o_data14[7] <= gw5ddrphy_dfi_p1_wrdata[110];
end
assign gw5ddrphy_dq_i_data14 = {gw5ddrphy_bitslip14_o, gw5ddrphy_dq_i_bitslip_o_d14};
always @(*) begin
    gw5ddrphy_dq_o_data15 <= 8'd0;
    gw5ddrphy_dq_o_data15[0] <= gw5ddrphy_dfi_p0_wrdata[15];
    gw5ddrphy_dq_o_data15[1] <= gw5ddrphy_dfi_p0_wrdata[47];
    gw5ddrphy_dq_o_data15[2] <= gw5ddrphy_dfi_p0_wrdata[79];
    gw5ddrphy_dq_o_data15[3] <= gw5ddrphy_dfi_p0_wrdata[111];
    gw5ddrphy_dq_o_data15[4] <= gw5ddrphy_dfi_p1_wrdata[15];
    gw5ddrphy_dq_o_data15[5] <= gw5ddrphy_dfi_p1_wrdata[47];
    gw5ddrphy_dq_o_data15[6] <= gw5ddrphy_dfi_p1_wrdata[79];
    gw5ddrphy_dq_o_data15[7] <= gw5ddrphy_dfi_p1_wrdata[111];
end
assign gw5ddrphy_dq_i_data15 = {gw5ddrphy_bitslip15_o, gw5ddrphy_dq_i_bitslip_o_d15};
always @(*) begin
    gw5ddrphy_dm_o_data2 <= 8'd0;
    gw5ddrphy_dm_o_data2[0] <= gw5ddrphy_dfi_p0_wrdata_mask[2];
    gw5ddrphy_dm_o_data2[1] <= gw5ddrphy_dfi_p0_wrdata_mask[6];
    gw5ddrphy_dm_o_data2[2] <= gw5ddrphy_dfi_p0_wrdata_mask[10];
    gw5ddrphy_dm_o_data2[3] <= gw5ddrphy_dfi_p0_wrdata_mask[14];
    gw5ddrphy_dm_o_data2[4] <= gw5ddrphy_dfi_p1_wrdata_mask[2];
    gw5ddrphy_dm_o_data2[5] <= gw5ddrphy_dfi_p1_wrdata_mask[6];
    gw5ddrphy_dm_o_data2[6] <= gw5ddrphy_dfi_p1_wrdata_mask[10];
    gw5ddrphy_dm_o_data2[7] <= gw5ddrphy_dfi_p1_wrdata_mask[14];
end
always @(*) begin
    gw5ddrphy_dq_o_data16 <= 8'd0;
    gw5ddrphy_dq_o_data16[0] <= gw5ddrphy_dfi_p0_wrdata[16];
    gw5ddrphy_dq_o_data16[1] <= gw5ddrphy_dfi_p0_wrdata[48];
    gw5ddrphy_dq_o_data16[2] <= gw5ddrphy_dfi_p0_wrdata[80];
    gw5ddrphy_dq_o_data16[3] <= gw5ddrphy_dfi_p0_wrdata[112];
    gw5ddrphy_dq_o_data16[4] <= gw5ddrphy_dfi_p1_wrdata[16];
    gw5ddrphy_dq_o_data16[5] <= gw5ddrphy_dfi_p1_wrdata[48];
    gw5ddrphy_dq_o_data16[6] <= gw5ddrphy_dfi_p1_wrdata[80];
    gw5ddrphy_dq_o_data16[7] <= gw5ddrphy_dfi_p1_wrdata[112];
end
assign gw5ddrphy_dq_i_data16 = {gw5ddrphy_bitslip16_o, gw5ddrphy_dq_i_bitslip_o_d16};
always @(*) begin
    gw5ddrphy_dq_o_data17 <= 8'd0;
    gw5ddrphy_dq_o_data17[0] <= gw5ddrphy_dfi_p0_wrdata[17];
    gw5ddrphy_dq_o_data17[1] <= gw5ddrphy_dfi_p0_wrdata[49];
    gw5ddrphy_dq_o_data17[2] <= gw5ddrphy_dfi_p0_wrdata[81];
    gw5ddrphy_dq_o_data17[3] <= gw5ddrphy_dfi_p0_wrdata[113];
    gw5ddrphy_dq_o_data17[4] <= gw5ddrphy_dfi_p1_wrdata[17];
    gw5ddrphy_dq_o_data17[5] <= gw5ddrphy_dfi_p1_wrdata[49];
    gw5ddrphy_dq_o_data17[6] <= gw5ddrphy_dfi_p1_wrdata[81];
    gw5ddrphy_dq_o_data17[7] <= gw5ddrphy_dfi_p1_wrdata[113];
end
assign gw5ddrphy_dq_i_data17 = {gw5ddrphy_bitslip17_o, gw5ddrphy_dq_i_bitslip_o_d17};
always @(*) begin
    gw5ddrphy_dq_o_data18 <= 8'd0;
    gw5ddrphy_dq_o_data18[0] <= gw5ddrphy_dfi_p0_wrdata[18];
    gw5ddrphy_dq_o_data18[1] <= gw5ddrphy_dfi_p0_wrdata[50];
    gw5ddrphy_dq_o_data18[2] <= gw5ddrphy_dfi_p0_wrdata[82];
    gw5ddrphy_dq_o_data18[3] <= gw5ddrphy_dfi_p0_wrdata[114];
    gw5ddrphy_dq_o_data18[4] <= gw5ddrphy_dfi_p1_wrdata[18];
    gw5ddrphy_dq_o_data18[5] <= gw5ddrphy_dfi_p1_wrdata[50];
    gw5ddrphy_dq_o_data18[6] <= gw5ddrphy_dfi_p1_wrdata[82];
    gw5ddrphy_dq_o_data18[7] <= gw5ddrphy_dfi_p1_wrdata[114];
end
assign gw5ddrphy_dq_i_data18 = {gw5ddrphy_bitslip18_o, gw5ddrphy_dq_i_bitslip_o_d18};
always @(*) begin
    gw5ddrphy_dq_o_data19 <= 8'd0;
    gw5ddrphy_dq_o_data19[0] <= gw5ddrphy_dfi_p0_wrdata[19];
    gw5ddrphy_dq_o_data19[1] <= gw5ddrphy_dfi_p0_wrdata[51];
    gw5ddrphy_dq_o_data19[2] <= gw5ddrphy_dfi_p0_wrdata[83];
    gw5ddrphy_dq_o_data19[3] <= gw5ddrphy_dfi_p0_wrdata[115];
    gw5ddrphy_dq_o_data19[4] <= gw5ddrphy_dfi_p1_wrdata[19];
    gw5ddrphy_dq_o_data19[5] <= gw5ddrphy_dfi_p1_wrdata[51];
    gw5ddrphy_dq_o_data19[6] <= gw5ddrphy_dfi_p1_wrdata[83];
    gw5ddrphy_dq_o_data19[7] <= gw5ddrphy_dfi_p1_wrdata[115];
end
assign gw5ddrphy_dq_i_data19 = {gw5ddrphy_bitslip19_o, gw5ddrphy_dq_i_bitslip_o_d19};
always @(*) begin
    gw5ddrphy_dq_o_data20 <= 8'd0;
    gw5ddrphy_dq_o_data20[0] <= gw5ddrphy_dfi_p0_wrdata[20];
    gw5ddrphy_dq_o_data20[1] <= gw5ddrphy_dfi_p0_wrdata[52];
    gw5ddrphy_dq_o_data20[2] <= gw5ddrphy_dfi_p0_wrdata[84];
    gw5ddrphy_dq_o_data20[3] <= gw5ddrphy_dfi_p0_wrdata[116];
    gw5ddrphy_dq_o_data20[4] <= gw5ddrphy_dfi_p1_wrdata[20];
    gw5ddrphy_dq_o_data20[5] <= gw5ddrphy_dfi_p1_wrdata[52];
    gw5ddrphy_dq_o_data20[6] <= gw5ddrphy_dfi_p1_wrdata[84];
    gw5ddrphy_dq_o_data20[7] <= gw5ddrphy_dfi_p1_wrdata[116];
end
assign gw5ddrphy_dq_i_data20 = {gw5ddrphy_bitslip20_o, gw5ddrphy_dq_i_bitslip_o_d20};
always @(*) begin
    gw5ddrphy_dq_o_data21 <= 8'd0;
    gw5ddrphy_dq_o_data21[0] <= gw5ddrphy_dfi_p0_wrdata[21];
    gw5ddrphy_dq_o_data21[1] <= gw5ddrphy_dfi_p0_wrdata[53];
    gw5ddrphy_dq_o_data21[2] <= gw5ddrphy_dfi_p0_wrdata[85];
    gw5ddrphy_dq_o_data21[3] <= gw5ddrphy_dfi_p0_wrdata[117];
    gw5ddrphy_dq_o_data21[4] <= gw5ddrphy_dfi_p1_wrdata[21];
    gw5ddrphy_dq_o_data21[5] <= gw5ddrphy_dfi_p1_wrdata[53];
    gw5ddrphy_dq_o_data21[6] <= gw5ddrphy_dfi_p1_wrdata[85];
    gw5ddrphy_dq_o_data21[7] <= gw5ddrphy_dfi_p1_wrdata[117];
end
assign gw5ddrphy_dq_i_data21 = {gw5ddrphy_bitslip21_o, gw5ddrphy_dq_i_bitslip_o_d21};
always @(*) begin
    gw5ddrphy_dq_o_data22 <= 8'd0;
    gw5ddrphy_dq_o_data22[0] <= gw5ddrphy_dfi_p0_wrdata[22];
    gw5ddrphy_dq_o_data22[1] <= gw5ddrphy_dfi_p0_wrdata[54];
    gw5ddrphy_dq_o_data22[2] <= gw5ddrphy_dfi_p0_wrdata[86];
    gw5ddrphy_dq_o_data22[3] <= gw5ddrphy_dfi_p0_wrdata[118];
    gw5ddrphy_dq_o_data22[4] <= gw5ddrphy_dfi_p1_wrdata[22];
    gw5ddrphy_dq_o_data22[5] <= gw5ddrphy_dfi_p1_wrdata[54];
    gw5ddrphy_dq_o_data22[6] <= gw5ddrphy_dfi_p1_wrdata[86];
    gw5ddrphy_dq_o_data22[7] <= gw5ddrphy_dfi_p1_wrdata[118];
end
assign gw5ddrphy_dq_i_data22 = {gw5ddrphy_bitslip22_o, gw5ddrphy_dq_i_bitslip_o_d22};
always @(*) begin
    gw5ddrphy_dq_o_data23 <= 8'd0;
    gw5ddrphy_dq_o_data23[0] <= gw5ddrphy_dfi_p0_wrdata[23];
    gw5ddrphy_dq_o_data23[1] <= gw5ddrphy_dfi_p0_wrdata[55];
    gw5ddrphy_dq_o_data23[2] <= gw5ddrphy_dfi_p0_wrdata[87];
    gw5ddrphy_dq_o_data23[3] <= gw5ddrphy_dfi_p0_wrdata[119];
    gw5ddrphy_dq_o_data23[4] <= gw5ddrphy_dfi_p1_wrdata[23];
    gw5ddrphy_dq_o_data23[5] <= gw5ddrphy_dfi_p1_wrdata[55];
    gw5ddrphy_dq_o_data23[6] <= gw5ddrphy_dfi_p1_wrdata[87];
    gw5ddrphy_dq_o_data23[7] <= gw5ddrphy_dfi_p1_wrdata[119];
end
assign gw5ddrphy_dq_i_data23 = {gw5ddrphy_bitslip23_o, gw5ddrphy_dq_i_bitslip_o_d23};
always @(*) begin
    gw5ddrphy_dm_o_data3 <= 8'd0;
    gw5ddrphy_dm_o_data3[0] <= gw5ddrphy_dfi_p0_wrdata_mask[3];
    gw5ddrphy_dm_o_data3[1] <= gw5ddrphy_dfi_p0_wrdata_mask[7];
    gw5ddrphy_dm_o_data3[2] <= gw5ddrphy_dfi_p0_wrdata_mask[11];
    gw5ddrphy_dm_o_data3[3] <= gw5ddrphy_dfi_p0_wrdata_mask[15];
    gw5ddrphy_dm_o_data3[4] <= gw5ddrphy_dfi_p1_wrdata_mask[3];
    gw5ddrphy_dm_o_data3[5] <= gw5ddrphy_dfi_p1_wrdata_mask[7];
    gw5ddrphy_dm_o_data3[6] <= gw5ddrphy_dfi_p1_wrdata_mask[11];
    gw5ddrphy_dm_o_data3[7] <= gw5ddrphy_dfi_p1_wrdata_mask[15];
end
always @(*) begin
    gw5ddrphy_dq_o_data24 <= 8'd0;
    gw5ddrphy_dq_o_data24[0] <= gw5ddrphy_dfi_p0_wrdata[24];
    gw5ddrphy_dq_o_data24[1] <= gw5ddrphy_dfi_p0_wrdata[56];
    gw5ddrphy_dq_o_data24[2] <= gw5ddrphy_dfi_p0_wrdata[88];
    gw5ddrphy_dq_o_data24[3] <= gw5ddrphy_dfi_p0_wrdata[120];
    gw5ddrphy_dq_o_data24[4] <= gw5ddrphy_dfi_p1_wrdata[24];
    gw5ddrphy_dq_o_data24[5] <= gw5ddrphy_dfi_p1_wrdata[56];
    gw5ddrphy_dq_o_data24[6] <= gw5ddrphy_dfi_p1_wrdata[88];
    gw5ddrphy_dq_o_data24[7] <= gw5ddrphy_dfi_p1_wrdata[120];
end
assign gw5ddrphy_dq_i_data24 = {gw5ddrphy_bitslip24_o, gw5ddrphy_dq_i_bitslip_o_d24};
always @(*) begin
    gw5ddrphy_dq_o_data25 <= 8'd0;
    gw5ddrphy_dq_o_data25[0] <= gw5ddrphy_dfi_p0_wrdata[25];
    gw5ddrphy_dq_o_data25[1] <= gw5ddrphy_dfi_p0_wrdata[57];
    gw5ddrphy_dq_o_data25[2] <= gw5ddrphy_dfi_p0_wrdata[89];
    gw5ddrphy_dq_o_data25[3] <= gw5ddrphy_dfi_p0_wrdata[121];
    gw5ddrphy_dq_o_data25[4] <= gw5ddrphy_dfi_p1_wrdata[25];
    gw5ddrphy_dq_o_data25[5] <= gw5ddrphy_dfi_p1_wrdata[57];
    gw5ddrphy_dq_o_data25[6] <= gw5ddrphy_dfi_p1_wrdata[89];
    gw5ddrphy_dq_o_data25[7] <= gw5ddrphy_dfi_p1_wrdata[121];
end
assign gw5ddrphy_dq_i_data25 = {gw5ddrphy_bitslip25_o, gw5ddrphy_dq_i_bitslip_o_d25};
always @(*) begin
    gw5ddrphy_dq_o_data26 <= 8'd0;
    gw5ddrphy_dq_o_data26[0] <= gw5ddrphy_dfi_p0_wrdata[26];
    gw5ddrphy_dq_o_data26[1] <= gw5ddrphy_dfi_p0_wrdata[58];
    gw5ddrphy_dq_o_data26[2] <= gw5ddrphy_dfi_p0_wrdata[90];
    gw5ddrphy_dq_o_data26[3] <= gw5ddrphy_dfi_p0_wrdata[122];
    gw5ddrphy_dq_o_data26[4] <= gw5ddrphy_dfi_p1_wrdata[26];
    gw5ddrphy_dq_o_data26[5] <= gw5ddrphy_dfi_p1_wrdata[58];
    gw5ddrphy_dq_o_data26[6] <= gw5ddrphy_dfi_p1_wrdata[90];
    gw5ddrphy_dq_o_data26[7] <= gw5ddrphy_dfi_p1_wrdata[122];
end
assign gw5ddrphy_dq_i_data26 = {gw5ddrphy_bitslip26_o, gw5ddrphy_dq_i_bitslip_o_d26};
always @(*) begin
    gw5ddrphy_dq_o_data27 <= 8'd0;
    gw5ddrphy_dq_o_data27[0] <= gw5ddrphy_dfi_p0_wrdata[27];
    gw5ddrphy_dq_o_data27[1] <= gw5ddrphy_dfi_p0_wrdata[59];
    gw5ddrphy_dq_o_data27[2] <= gw5ddrphy_dfi_p0_wrdata[91];
    gw5ddrphy_dq_o_data27[3] <= gw5ddrphy_dfi_p0_wrdata[123];
    gw5ddrphy_dq_o_data27[4] <= gw5ddrphy_dfi_p1_wrdata[27];
    gw5ddrphy_dq_o_data27[5] <= gw5ddrphy_dfi_p1_wrdata[59];
    gw5ddrphy_dq_o_data27[6] <= gw5ddrphy_dfi_p1_wrdata[91];
    gw5ddrphy_dq_o_data27[7] <= gw5ddrphy_dfi_p1_wrdata[123];
end
assign gw5ddrphy_dq_i_data27 = {gw5ddrphy_bitslip27_o, gw5ddrphy_dq_i_bitslip_o_d27};
always @(*) begin
    gw5ddrphy_dq_o_data28 <= 8'd0;
    gw5ddrphy_dq_o_data28[0] <= gw5ddrphy_dfi_p0_wrdata[28];
    gw5ddrphy_dq_o_data28[1] <= gw5ddrphy_dfi_p0_wrdata[60];
    gw5ddrphy_dq_o_data28[2] <= gw5ddrphy_dfi_p0_wrdata[92];
    gw5ddrphy_dq_o_data28[3] <= gw5ddrphy_dfi_p0_wrdata[124];
    gw5ddrphy_dq_o_data28[4] <= gw5ddrphy_dfi_p1_wrdata[28];
    gw5ddrphy_dq_o_data28[5] <= gw5ddrphy_dfi_p1_wrdata[60];
    gw5ddrphy_dq_o_data28[6] <= gw5ddrphy_dfi_p1_wrdata[92];
    gw5ddrphy_dq_o_data28[7] <= gw5ddrphy_dfi_p1_wrdata[124];
end
assign gw5ddrphy_dq_i_data28 = {gw5ddrphy_bitslip28_o, gw5ddrphy_dq_i_bitslip_o_d28};
always @(*) begin
    gw5ddrphy_dq_o_data29 <= 8'd0;
    gw5ddrphy_dq_o_data29[0] <= gw5ddrphy_dfi_p0_wrdata[29];
    gw5ddrphy_dq_o_data29[1] <= gw5ddrphy_dfi_p0_wrdata[61];
    gw5ddrphy_dq_o_data29[2] <= gw5ddrphy_dfi_p0_wrdata[93];
    gw5ddrphy_dq_o_data29[3] <= gw5ddrphy_dfi_p0_wrdata[125];
    gw5ddrphy_dq_o_data29[4] <= gw5ddrphy_dfi_p1_wrdata[29];
    gw5ddrphy_dq_o_data29[5] <= gw5ddrphy_dfi_p1_wrdata[61];
    gw5ddrphy_dq_o_data29[6] <= gw5ddrphy_dfi_p1_wrdata[93];
    gw5ddrphy_dq_o_data29[7] <= gw5ddrphy_dfi_p1_wrdata[125];
end
assign gw5ddrphy_dq_i_data29 = {gw5ddrphy_bitslip29_o, gw5ddrphy_dq_i_bitslip_o_d29};
always @(*) begin
    gw5ddrphy_dq_o_data30 <= 8'd0;
    gw5ddrphy_dq_o_data30[0] <= gw5ddrphy_dfi_p0_wrdata[30];
    gw5ddrphy_dq_o_data30[1] <= gw5ddrphy_dfi_p0_wrdata[62];
    gw5ddrphy_dq_o_data30[2] <= gw5ddrphy_dfi_p0_wrdata[94];
    gw5ddrphy_dq_o_data30[3] <= gw5ddrphy_dfi_p0_wrdata[126];
    gw5ddrphy_dq_o_data30[4] <= gw5ddrphy_dfi_p1_wrdata[30];
    gw5ddrphy_dq_o_data30[5] <= gw5ddrphy_dfi_p1_wrdata[62];
    gw5ddrphy_dq_o_data30[6] <= gw5ddrphy_dfi_p1_wrdata[94];
    gw5ddrphy_dq_o_data30[7] <= gw5ddrphy_dfi_p1_wrdata[126];
end
assign gw5ddrphy_dq_i_data30 = {gw5ddrphy_bitslip30_o, gw5ddrphy_dq_i_bitslip_o_d30};
always @(*) begin
    gw5ddrphy_dq_o_data31 <= 8'd0;
    gw5ddrphy_dq_o_data31[0] <= gw5ddrphy_dfi_p0_wrdata[31];
    gw5ddrphy_dq_o_data31[1] <= gw5ddrphy_dfi_p0_wrdata[63];
    gw5ddrphy_dq_o_data31[2] <= gw5ddrphy_dfi_p0_wrdata[95];
    gw5ddrphy_dq_o_data31[3] <= gw5ddrphy_dfi_p0_wrdata[127];
    gw5ddrphy_dq_o_data31[4] <= gw5ddrphy_dfi_p1_wrdata[31];
    gw5ddrphy_dq_o_data31[5] <= gw5ddrphy_dfi_p1_wrdata[63];
    gw5ddrphy_dq_o_data31[6] <= gw5ddrphy_dfi_p1_wrdata[95];
    gw5ddrphy_dq_o_data31[7] <= gw5ddrphy_dfi_p1_wrdata[127];
end
assign gw5ddrphy_dq_i_data31 = {gw5ddrphy_bitslip31_o, gw5ddrphy_dq_i_bitslip_o_d31};
always @(*) begin
    gw5ddrphy_dfi_p0_rddata <= 128'd0;
    gw5ddrphy_dfi_p0_rddata[0] <= gw5ddrphy_dq_i_data0[0];
    gw5ddrphy_dfi_p0_rddata[32] <= gw5ddrphy_dq_i_data0[1];
    gw5ddrphy_dfi_p0_rddata[64] <= gw5ddrphy_dq_i_data0[2];
    gw5ddrphy_dfi_p0_rddata[96] <= gw5ddrphy_dq_i_data0[3];
    gw5ddrphy_dfi_p0_rddata[1] <= gw5ddrphy_dq_i_data1[0];
    gw5ddrphy_dfi_p0_rddata[33] <= gw5ddrphy_dq_i_data1[1];
    gw5ddrphy_dfi_p0_rddata[65] <= gw5ddrphy_dq_i_data1[2];
    gw5ddrphy_dfi_p0_rddata[97] <= gw5ddrphy_dq_i_data1[3];
    gw5ddrphy_dfi_p0_rddata[2] <= gw5ddrphy_dq_i_data2[0];
    gw5ddrphy_dfi_p0_rddata[34] <= gw5ddrphy_dq_i_data2[1];
    gw5ddrphy_dfi_p0_rddata[66] <= gw5ddrphy_dq_i_data2[2];
    gw5ddrphy_dfi_p0_rddata[98] <= gw5ddrphy_dq_i_data2[3];
    gw5ddrphy_dfi_p0_rddata[3] <= gw5ddrphy_dq_i_data3[0];
    gw5ddrphy_dfi_p0_rddata[35] <= gw5ddrphy_dq_i_data3[1];
    gw5ddrphy_dfi_p0_rddata[67] <= gw5ddrphy_dq_i_data3[2];
    gw5ddrphy_dfi_p0_rddata[99] <= gw5ddrphy_dq_i_data3[3];
    gw5ddrphy_dfi_p0_rddata[4] <= gw5ddrphy_dq_i_data4[0];
    gw5ddrphy_dfi_p0_rddata[36] <= gw5ddrphy_dq_i_data4[1];
    gw5ddrphy_dfi_p0_rddata[68] <= gw5ddrphy_dq_i_data4[2];
    gw5ddrphy_dfi_p0_rddata[100] <= gw5ddrphy_dq_i_data4[3];
    gw5ddrphy_dfi_p0_rddata[5] <= gw5ddrphy_dq_i_data5[0];
    gw5ddrphy_dfi_p0_rddata[37] <= gw5ddrphy_dq_i_data5[1];
    gw5ddrphy_dfi_p0_rddata[69] <= gw5ddrphy_dq_i_data5[2];
    gw5ddrphy_dfi_p0_rddata[101] <= gw5ddrphy_dq_i_data5[3];
    gw5ddrphy_dfi_p0_rddata[6] <= gw5ddrphy_dq_i_data6[0];
    gw5ddrphy_dfi_p0_rddata[38] <= gw5ddrphy_dq_i_data6[1];
    gw5ddrphy_dfi_p0_rddata[70] <= gw5ddrphy_dq_i_data6[2];
    gw5ddrphy_dfi_p0_rddata[102] <= gw5ddrphy_dq_i_data6[3];
    gw5ddrphy_dfi_p0_rddata[7] <= gw5ddrphy_dq_i_data7[0];
    gw5ddrphy_dfi_p0_rddata[39] <= gw5ddrphy_dq_i_data7[1];
    gw5ddrphy_dfi_p0_rddata[71] <= gw5ddrphy_dq_i_data7[2];
    gw5ddrphy_dfi_p0_rddata[103] <= gw5ddrphy_dq_i_data7[3];
    gw5ddrphy_dfi_p0_rddata[8] <= gw5ddrphy_dq_i_data8[0];
    gw5ddrphy_dfi_p0_rddata[40] <= gw5ddrphy_dq_i_data8[1];
    gw5ddrphy_dfi_p0_rddata[72] <= gw5ddrphy_dq_i_data8[2];
    gw5ddrphy_dfi_p0_rddata[104] <= gw5ddrphy_dq_i_data8[3];
    gw5ddrphy_dfi_p0_rddata[9] <= gw5ddrphy_dq_i_data9[0];
    gw5ddrphy_dfi_p0_rddata[41] <= gw5ddrphy_dq_i_data9[1];
    gw5ddrphy_dfi_p0_rddata[73] <= gw5ddrphy_dq_i_data9[2];
    gw5ddrphy_dfi_p0_rddata[105] <= gw5ddrphy_dq_i_data9[3];
    gw5ddrphy_dfi_p0_rddata[10] <= gw5ddrphy_dq_i_data10[0];
    gw5ddrphy_dfi_p0_rddata[42] <= gw5ddrphy_dq_i_data10[1];
    gw5ddrphy_dfi_p0_rddata[74] <= gw5ddrphy_dq_i_data10[2];
    gw5ddrphy_dfi_p0_rddata[106] <= gw5ddrphy_dq_i_data10[3];
    gw5ddrphy_dfi_p0_rddata[11] <= gw5ddrphy_dq_i_data11[0];
    gw5ddrphy_dfi_p0_rddata[43] <= gw5ddrphy_dq_i_data11[1];
    gw5ddrphy_dfi_p0_rddata[75] <= gw5ddrphy_dq_i_data11[2];
    gw5ddrphy_dfi_p0_rddata[107] <= gw5ddrphy_dq_i_data11[3];
    gw5ddrphy_dfi_p0_rddata[12] <= gw5ddrphy_dq_i_data12[0];
    gw5ddrphy_dfi_p0_rddata[44] <= gw5ddrphy_dq_i_data12[1];
    gw5ddrphy_dfi_p0_rddata[76] <= gw5ddrphy_dq_i_data12[2];
    gw5ddrphy_dfi_p0_rddata[108] <= gw5ddrphy_dq_i_data12[3];
    gw5ddrphy_dfi_p0_rddata[13] <= gw5ddrphy_dq_i_data13[0];
    gw5ddrphy_dfi_p0_rddata[45] <= gw5ddrphy_dq_i_data13[1];
    gw5ddrphy_dfi_p0_rddata[77] <= gw5ddrphy_dq_i_data13[2];
    gw5ddrphy_dfi_p0_rddata[109] <= gw5ddrphy_dq_i_data13[3];
    gw5ddrphy_dfi_p0_rddata[14] <= gw5ddrphy_dq_i_data14[0];
    gw5ddrphy_dfi_p0_rddata[46] <= gw5ddrphy_dq_i_data14[1];
    gw5ddrphy_dfi_p0_rddata[78] <= gw5ddrphy_dq_i_data14[2];
    gw5ddrphy_dfi_p0_rddata[110] <= gw5ddrphy_dq_i_data14[3];
    gw5ddrphy_dfi_p0_rddata[15] <= gw5ddrphy_dq_i_data15[0];
    gw5ddrphy_dfi_p0_rddata[47] <= gw5ddrphy_dq_i_data15[1];
    gw5ddrphy_dfi_p0_rddata[79] <= gw5ddrphy_dq_i_data15[2];
    gw5ddrphy_dfi_p0_rddata[111] <= gw5ddrphy_dq_i_data15[3];
    gw5ddrphy_dfi_p0_rddata[16] <= gw5ddrphy_dq_i_data16[0];
    gw5ddrphy_dfi_p0_rddata[48] <= gw5ddrphy_dq_i_data16[1];
    gw5ddrphy_dfi_p0_rddata[80] <= gw5ddrphy_dq_i_data16[2];
    gw5ddrphy_dfi_p0_rddata[112] <= gw5ddrphy_dq_i_data16[3];
    gw5ddrphy_dfi_p0_rddata[17] <= gw5ddrphy_dq_i_data17[0];
    gw5ddrphy_dfi_p0_rddata[49] <= gw5ddrphy_dq_i_data17[1];
    gw5ddrphy_dfi_p0_rddata[81] <= gw5ddrphy_dq_i_data17[2];
    gw5ddrphy_dfi_p0_rddata[113] <= gw5ddrphy_dq_i_data17[3];
    gw5ddrphy_dfi_p0_rddata[18] <= gw5ddrphy_dq_i_data18[0];
    gw5ddrphy_dfi_p0_rddata[50] <= gw5ddrphy_dq_i_data18[1];
    gw5ddrphy_dfi_p0_rddata[82] <= gw5ddrphy_dq_i_data18[2];
    gw5ddrphy_dfi_p0_rddata[114] <= gw5ddrphy_dq_i_data18[3];
    gw5ddrphy_dfi_p0_rddata[19] <= gw5ddrphy_dq_i_data19[0];
    gw5ddrphy_dfi_p0_rddata[51] <= gw5ddrphy_dq_i_data19[1];
    gw5ddrphy_dfi_p0_rddata[83] <= gw5ddrphy_dq_i_data19[2];
    gw5ddrphy_dfi_p0_rddata[115] <= gw5ddrphy_dq_i_data19[3];
    gw5ddrphy_dfi_p0_rddata[20] <= gw5ddrphy_dq_i_data20[0];
    gw5ddrphy_dfi_p0_rddata[52] <= gw5ddrphy_dq_i_data20[1];
    gw5ddrphy_dfi_p0_rddata[84] <= gw5ddrphy_dq_i_data20[2];
    gw5ddrphy_dfi_p0_rddata[116] <= gw5ddrphy_dq_i_data20[3];
    gw5ddrphy_dfi_p0_rddata[21] <= gw5ddrphy_dq_i_data21[0];
    gw5ddrphy_dfi_p0_rddata[53] <= gw5ddrphy_dq_i_data21[1];
    gw5ddrphy_dfi_p0_rddata[85] <= gw5ddrphy_dq_i_data21[2];
    gw5ddrphy_dfi_p0_rddata[117] <= gw5ddrphy_dq_i_data21[3];
    gw5ddrphy_dfi_p0_rddata[22] <= gw5ddrphy_dq_i_data22[0];
    gw5ddrphy_dfi_p0_rddata[54] <= gw5ddrphy_dq_i_data22[1];
    gw5ddrphy_dfi_p0_rddata[86] <= gw5ddrphy_dq_i_data22[2];
    gw5ddrphy_dfi_p0_rddata[118] <= gw5ddrphy_dq_i_data22[3];
    gw5ddrphy_dfi_p0_rddata[23] <= gw5ddrphy_dq_i_data23[0];
    gw5ddrphy_dfi_p0_rddata[55] <= gw5ddrphy_dq_i_data23[1];
    gw5ddrphy_dfi_p0_rddata[87] <= gw5ddrphy_dq_i_data23[2];
    gw5ddrphy_dfi_p0_rddata[119] <= gw5ddrphy_dq_i_data23[3];
    gw5ddrphy_dfi_p0_rddata[24] <= gw5ddrphy_dq_i_data24[0];
    gw5ddrphy_dfi_p0_rddata[56] <= gw5ddrphy_dq_i_data24[1];
    gw5ddrphy_dfi_p0_rddata[88] <= gw5ddrphy_dq_i_data24[2];
    gw5ddrphy_dfi_p0_rddata[120] <= gw5ddrphy_dq_i_data24[3];
    gw5ddrphy_dfi_p0_rddata[25] <= gw5ddrphy_dq_i_data25[0];
    gw5ddrphy_dfi_p0_rddata[57] <= gw5ddrphy_dq_i_data25[1];
    gw5ddrphy_dfi_p0_rddata[89] <= gw5ddrphy_dq_i_data25[2];
    gw5ddrphy_dfi_p0_rddata[121] <= gw5ddrphy_dq_i_data25[3];
    gw5ddrphy_dfi_p0_rddata[26] <= gw5ddrphy_dq_i_data26[0];
    gw5ddrphy_dfi_p0_rddata[58] <= gw5ddrphy_dq_i_data26[1];
    gw5ddrphy_dfi_p0_rddata[90] <= gw5ddrphy_dq_i_data26[2];
    gw5ddrphy_dfi_p0_rddata[122] <= gw5ddrphy_dq_i_data26[3];
    gw5ddrphy_dfi_p0_rddata[27] <= gw5ddrphy_dq_i_data27[0];
    gw5ddrphy_dfi_p0_rddata[59] <= gw5ddrphy_dq_i_data27[1];
    gw5ddrphy_dfi_p0_rddata[91] <= gw5ddrphy_dq_i_data27[2];
    gw5ddrphy_dfi_p0_rddata[123] <= gw5ddrphy_dq_i_data27[3];
    gw5ddrphy_dfi_p0_rddata[28] <= gw5ddrphy_dq_i_data28[0];
    gw5ddrphy_dfi_p0_rddata[60] <= gw5ddrphy_dq_i_data28[1];
    gw5ddrphy_dfi_p0_rddata[92] <= gw5ddrphy_dq_i_data28[2];
    gw5ddrphy_dfi_p0_rddata[124] <= gw5ddrphy_dq_i_data28[3];
    gw5ddrphy_dfi_p0_rddata[29] <= gw5ddrphy_dq_i_data29[0];
    gw5ddrphy_dfi_p0_rddata[61] <= gw5ddrphy_dq_i_data29[1];
    gw5ddrphy_dfi_p0_rddata[93] <= gw5ddrphy_dq_i_data29[2];
    gw5ddrphy_dfi_p0_rddata[125] <= gw5ddrphy_dq_i_data29[3];
    gw5ddrphy_dfi_p0_rddata[30] <= gw5ddrphy_dq_i_data30[0];
    gw5ddrphy_dfi_p0_rddata[62] <= gw5ddrphy_dq_i_data30[1];
    gw5ddrphy_dfi_p0_rddata[94] <= gw5ddrphy_dq_i_data30[2];
    gw5ddrphy_dfi_p0_rddata[126] <= gw5ddrphy_dq_i_data30[3];
    gw5ddrphy_dfi_p0_rddata[31] <= gw5ddrphy_dq_i_data31[0];
    gw5ddrphy_dfi_p0_rddata[63] <= gw5ddrphy_dq_i_data31[1];
    gw5ddrphy_dfi_p0_rddata[95] <= gw5ddrphy_dq_i_data31[2];
    gw5ddrphy_dfi_p0_rddata[127] <= gw5ddrphy_dq_i_data31[3];
end
always @(*) begin
    gw5ddrphy_dfi_p1_rddata <= 128'd0;
    gw5ddrphy_dfi_p1_rddata[0] <= gw5ddrphy_dq_i_data0[4];
    gw5ddrphy_dfi_p1_rddata[32] <= gw5ddrphy_dq_i_data0[5];
    gw5ddrphy_dfi_p1_rddata[64] <= gw5ddrphy_dq_i_data0[6];
    gw5ddrphy_dfi_p1_rddata[96] <= gw5ddrphy_dq_i_data0[7];
    gw5ddrphy_dfi_p1_rddata[1] <= gw5ddrphy_dq_i_data1[4];
    gw5ddrphy_dfi_p1_rddata[33] <= gw5ddrphy_dq_i_data1[5];
    gw5ddrphy_dfi_p1_rddata[65] <= gw5ddrphy_dq_i_data1[6];
    gw5ddrphy_dfi_p1_rddata[97] <= gw5ddrphy_dq_i_data1[7];
    gw5ddrphy_dfi_p1_rddata[2] <= gw5ddrphy_dq_i_data2[4];
    gw5ddrphy_dfi_p1_rddata[34] <= gw5ddrphy_dq_i_data2[5];
    gw5ddrphy_dfi_p1_rddata[66] <= gw5ddrphy_dq_i_data2[6];
    gw5ddrphy_dfi_p1_rddata[98] <= gw5ddrphy_dq_i_data2[7];
    gw5ddrphy_dfi_p1_rddata[3] <= gw5ddrphy_dq_i_data3[4];
    gw5ddrphy_dfi_p1_rddata[35] <= gw5ddrphy_dq_i_data3[5];
    gw5ddrphy_dfi_p1_rddata[67] <= gw5ddrphy_dq_i_data3[6];
    gw5ddrphy_dfi_p1_rddata[99] <= gw5ddrphy_dq_i_data3[7];
    gw5ddrphy_dfi_p1_rddata[4] <= gw5ddrphy_dq_i_data4[4];
    gw5ddrphy_dfi_p1_rddata[36] <= gw5ddrphy_dq_i_data4[5];
    gw5ddrphy_dfi_p1_rddata[68] <= gw5ddrphy_dq_i_data4[6];
    gw5ddrphy_dfi_p1_rddata[100] <= gw5ddrphy_dq_i_data4[7];
    gw5ddrphy_dfi_p1_rddata[5] <= gw5ddrphy_dq_i_data5[4];
    gw5ddrphy_dfi_p1_rddata[37] <= gw5ddrphy_dq_i_data5[5];
    gw5ddrphy_dfi_p1_rddata[69] <= gw5ddrphy_dq_i_data5[6];
    gw5ddrphy_dfi_p1_rddata[101] <= gw5ddrphy_dq_i_data5[7];
    gw5ddrphy_dfi_p1_rddata[6] <= gw5ddrphy_dq_i_data6[4];
    gw5ddrphy_dfi_p1_rddata[38] <= gw5ddrphy_dq_i_data6[5];
    gw5ddrphy_dfi_p1_rddata[70] <= gw5ddrphy_dq_i_data6[6];
    gw5ddrphy_dfi_p1_rddata[102] <= gw5ddrphy_dq_i_data6[7];
    gw5ddrphy_dfi_p1_rddata[7] <= gw5ddrphy_dq_i_data7[4];
    gw5ddrphy_dfi_p1_rddata[39] <= gw5ddrphy_dq_i_data7[5];
    gw5ddrphy_dfi_p1_rddata[71] <= gw5ddrphy_dq_i_data7[6];
    gw5ddrphy_dfi_p1_rddata[103] <= gw5ddrphy_dq_i_data7[7];
    gw5ddrphy_dfi_p1_rddata[8] <= gw5ddrphy_dq_i_data8[4];
    gw5ddrphy_dfi_p1_rddata[40] <= gw5ddrphy_dq_i_data8[5];
    gw5ddrphy_dfi_p1_rddata[72] <= gw5ddrphy_dq_i_data8[6];
    gw5ddrphy_dfi_p1_rddata[104] <= gw5ddrphy_dq_i_data8[7];
    gw5ddrphy_dfi_p1_rddata[9] <= gw5ddrphy_dq_i_data9[4];
    gw5ddrphy_dfi_p1_rddata[41] <= gw5ddrphy_dq_i_data9[5];
    gw5ddrphy_dfi_p1_rddata[73] <= gw5ddrphy_dq_i_data9[6];
    gw5ddrphy_dfi_p1_rddata[105] <= gw5ddrphy_dq_i_data9[7];
    gw5ddrphy_dfi_p1_rddata[10] <= gw5ddrphy_dq_i_data10[4];
    gw5ddrphy_dfi_p1_rddata[42] <= gw5ddrphy_dq_i_data10[5];
    gw5ddrphy_dfi_p1_rddata[74] <= gw5ddrphy_dq_i_data10[6];
    gw5ddrphy_dfi_p1_rddata[106] <= gw5ddrphy_dq_i_data10[7];
    gw5ddrphy_dfi_p1_rddata[11] <= gw5ddrphy_dq_i_data11[4];
    gw5ddrphy_dfi_p1_rddata[43] <= gw5ddrphy_dq_i_data11[5];
    gw5ddrphy_dfi_p1_rddata[75] <= gw5ddrphy_dq_i_data11[6];
    gw5ddrphy_dfi_p1_rddata[107] <= gw5ddrphy_dq_i_data11[7];
    gw5ddrphy_dfi_p1_rddata[12] <= gw5ddrphy_dq_i_data12[4];
    gw5ddrphy_dfi_p1_rddata[44] <= gw5ddrphy_dq_i_data12[5];
    gw5ddrphy_dfi_p1_rddata[76] <= gw5ddrphy_dq_i_data12[6];
    gw5ddrphy_dfi_p1_rddata[108] <= gw5ddrphy_dq_i_data12[7];
    gw5ddrphy_dfi_p1_rddata[13] <= gw5ddrphy_dq_i_data13[4];
    gw5ddrphy_dfi_p1_rddata[45] <= gw5ddrphy_dq_i_data13[5];
    gw5ddrphy_dfi_p1_rddata[77] <= gw5ddrphy_dq_i_data13[6];
    gw5ddrphy_dfi_p1_rddata[109] <= gw5ddrphy_dq_i_data13[7];
    gw5ddrphy_dfi_p1_rddata[14] <= gw5ddrphy_dq_i_data14[4];
    gw5ddrphy_dfi_p1_rddata[46] <= gw5ddrphy_dq_i_data14[5];
    gw5ddrphy_dfi_p1_rddata[78] <= gw5ddrphy_dq_i_data14[6];
    gw5ddrphy_dfi_p1_rddata[110] <= gw5ddrphy_dq_i_data14[7];
    gw5ddrphy_dfi_p1_rddata[15] <= gw5ddrphy_dq_i_data15[4];
    gw5ddrphy_dfi_p1_rddata[47] <= gw5ddrphy_dq_i_data15[5];
    gw5ddrphy_dfi_p1_rddata[79] <= gw5ddrphy_dq_i_data15[6];
    gw5ddrphy_dfi_p1_rddata[111] <= gw5ddrphy_dq_i_data15[7];
    gw5ddrphy_dfi_p1_rddata[16] <= gw5ddrphy_dq_i_data16[4];
    gw5ddrphy_dfi_p1_rddata[48] <= gw5ddrphy_dq_i_data16[5];
    gw5ddrphy_dfi_p1_rddata[80] <= gw5ddrphy_dq_i_data16[6];
    gw5ddrphy_dfi_p1_rddata[112] <= gw5ddrphy_dq_i_data16[7];
    gw5ddrphy_dfi_p1_rddata[17] <= gw5ddrphy_dq_i_data17[4];
    gw5ddrphy_dfi_p1_rddata[49] <= gw5ddrphy_dq_i_data17[5];
    gw5ddrphy_dfi_p1_rddata[81] <= gw5ddrphy_dq_i_data17[6];
    gw5ddrphy_dfi_p1_rddata[113] <= gw5ddrphy_dq_i_data17[7];
    gw5ddrphy_dfi_p1_rddata[18] <= gw5ddrphy_dq_i_data18[4];
    gw5ddrphy_dfi_p1_rddata[50] <= gw5ddrphy_dq_i_data18[5];
    gw5ddrphy_dfi_p1_rddata[82] <= gw5ddrphy_dq_i_data18[6];
    gw5ddrphy_dfi_p1_rddata[114] <= gw5ddrphy_dq_i_data18[7];
    gw5ddrphy_dfi_p1_rddata[19] <= gw5ddrphy_dq_i_data19[4];
    gw5ddrphy_dfi_p1_rddata[51] <= gw5ddrphy_dq_i_data19[5];
    gw5ddrphy_dfi_p1_rddata[83] <= gw5ddrphy_dq_i_data19[6];
    gw5ddrphy_dfi_p1_rddata[115] <= gw5ddrphy_dq_i_data19[7];
    gw5ddrphy_dfi_p1_rddata[20] <= gw5ddrphy_dq_i_data20[4];
    gw5ddrphy_dfi_p1_rddata[52] <= gw5ddrphy_dq_i_data20[5];
    gw5ddrphy_dfi_p1_rddata[84] <= gw5ddrphy_dq_i_data20[6];
    gw5ddrphy_dfi_p1_rddata[116] <= gw5ddrphy_dq_i_data20[7];
    gw5ddrphy_dfi_p1_rddata[21] <= gw5ddrphy_dq_i_data21[4];
    gw5ddrphy_dfi_p1_rddata[53] <= gw5ddrphy_dq_i_data21[5];
    gw5ddrphy_dfi_p1_rddata[85] <= gw5ddrphy_dq_i_data21[6];
    gw5ddrphy_dfi_p1_rddata[117] <= gw5ddrphy_dq_i_data21[7];
    gw5ddrphy_dfi_p1_rddata[22] <= gw5ddrphy_dq_i_data22[4];
    gw5ddrphy_dfi_p1_rddata[54] <= gw5ddrphy_dq_i_data22[5];
    gw5ddrphy_dfi_p1_rddata[86] <= gw5ddrphy_dq_i_data22[6];
    gw5ddrphy_dfi_p1_rddata[118] <= gw5ddrphy_dq_i_data22[7];
    gw5ddrphy_dfi_p1_rddata[23] <= gw5ddrphy_dq_i_data23[4];
    gw5ddrphy_dfi_p1_rddata[55] <= gw5ddrphy_dq_i_data23[5];
    gw5ddrphy_dfi_p1_rddata[87] <= gw5ddrphy_dq_i_data23[6];
    gw5ddrphy_dfi_p1_rddata[119] <= gw5ddrphy_dq_i_data23[7];
    gw5ddrphy_dfi_p1_rddata[24] <= gw5ddrphy_dq_i_data24[4];
    gw5ddrphy_dfi_p1_rddata[56] <= gw5ddrphy_dq_i_data24[5];
    gw5ddrphy_dfi_p1_rddata[88] <= gw5ddrphy_dq_i_data24[6];
    gw5ddrphy_dfi_p1_rddata[120] <= gw5ddrphy_dq_i_data24[7];
    gw5ddrphy_dfi_p1_rddata[25] <= gw5ddrphy_dq_i_data25[4];
    gw5ddrphy_dfi_p1_rddata[57] <= gw5ddrphy_dq_i_data25[5];
    gw5ddrphy_dfi_p1_rddata[89] <= gw5ddrphy_dq_i_data25[6];
    gw5ddrphy_dfi_p1_rddata[121] <= gw5ddrphy_dq_i_data25[7];
    gw5ddrphy_dfi_p1_rddata[26] <= gw5ddrphy_dq_i_data26[4];
    gw5ddrphy_dfi_p1_rddata[58] <= gw5ddrphy_dq_i_data26[5];
    gw5ddrphy_dfi_p1_rddata[90] <= gw5ddrphy_dq_i_data26[6];
    gw5ddrphy_dfi_p1_rddata[122] <= gw5ddrphy_dq_i_data26[7];
    gw5ddrphy_dfi_p1_rddata[27] <= gw5ddrphy_dq_i_data27[4];
    gw5ddrphy_dfi_p1_rddata[59] <= gw5ddrphy_dq_i_data27[5];
    gw5ddrphy_dfi_p1_rddata[91] <= gw5ddrphy_dq_i_data27[6];
    gw5ddrphy_dfi_p1_rddata[123] <= gw5ddrphy_dq_i_data27[7];
    gw5ddrphy_dfi_p1_rddata[28] <= gw5ddrphy_dq_i_data28[4];
    gw5ddrphy_dfi_p1_rddata[60] <= gw5ddrphy_dq_i_data28[5];
    gw5ddrphy_dfi_p1_rddata[92] <= gw5ddrphy_dq_i_data28[6];
    gw5ddrphy_dfi_p1_rddata[124] <= gw5ddrphy_dq_i_data28[7];
    gw5ddrphy_dfi_p1_rddata[29] <= gw5ddrphy_dq_i_data29[4];
    gw5ddrphy_dfi_p1_rddata[61] <= gw5ddrphy_dq_i_data29[5];
    gw5ddrphy_dfi_p1_rddata[93] <= gw5ddrphy_dq_i_data29[6];
    gw5ddrphy_dfi_p1_rddata[125] <= gw5ddrphy_dq_i_data29[7];
    gw5ddrphy_dfi_p1_rddata[30] <= gw5ddrphy_dq_i_data30[4];
    gw5ddrphy_dfi_p1_rddata[62] <= gw5ddrphy_dq_i_data30[5];
    gw5ddrphy_dfi_p1_rddata[94] <= gw5ddrphy_dq_i_data30[6];
    gw5ddrphy_dfi_p1_rddata[126] <= gw5ddrphy_dq_i_data30[7];
    gw5ddrphy_dfi_p1_rddata[31] <= gw5ddrphy_dq_i_data31[4];
    gw5ddrphy_dfi_p1_rddata[63] <= gw5ddrphy_dq_i_data31[5];
    gw5ddrphy_dfi_p1_rddata[95] <= gw5ddrphy_dq_i_data31[6];
    gw5ddrphy_dfi_p1_rddata[127] <= gw5ddrphy_dq_i_data31[7];
end
assign gw5ddrphy_dfi_p0_rddata_valid = gw5ddrphy_rddata_en_tappeddelayline12;
assign gw5ddrphy_dfi_p1_rddata_valid = gw5ddrphy_rddata_en_tappeddelayline12;
assign gw5ddrphy_dqs_re = (gw5ddrphy_rddata_en_tappeddelayline3 | gw5ddrphy_rddata_en_tappeddelayline4);
assign gw5ddrphy_dq_oe = (gw5ddrphy_wrdata_en_tappeddelayline3 | gw5ddrphy_wrdata_en_tappeddelayline4);
assign gw5ddrphy_bl8_chunk = gw5ddrphy_wrdata_en_tappeddelayline3;
assign gw5ddrphy_dqs_oe = gw5ddrphy_dq_oe;
assign gw5ddrphy_dqs_preamble = (gw5ddrphy_wrdata_en_tappeddelayline2 & (~gw5ddrphy_wrdata_en_tappeddelayline3));
assign gw5ddrphy_dqs_postamble = (gw5ddrphy_wrdata_en_tappeddelayline5 & (~gw5ddrphy_wrdata_en_tappeddelayline4));
assign gw5ddrphy_new_lock = (gw5ddrphy_lock1 & (~gw5ddrphy_lock_d));
assign gw5ddrphy_pause0 = gw5ddrphy_pause1;
assign gw5ddrphy_stop0 = gw5ddrphy_stop1;
assign gw5ddrphy_delay0 = gw5ddrphy_delay1;
assign gw5ddrphy_reset0 = gw5ddrphy_reset1;
always @(*) begin
    gw5ddrphy_bitslip0_o <= 4'd0;
    case (gw5ddrphy_bitslip0_value)
        1'd0: begin
            gw5ddrphy_bitslip0_o <= gw5ddrphy_bitslip0_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip0_o <= gw5ddrphy_bitslip0_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip0_o <= gw5ddrphy_bitslip0_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip0_o <= gw5ddrphy_bitslip0_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip1_o <= 4'd0;
    case (gw5ddrphy_bitslip1_value)
        1'd0: begin
            gw5ddrphy_bitslip1_o <= gw5ddrphy_bitslip1_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip1_o <= gw5ddrphy_bitslip1_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip1_o <= gw5ddrphy_bitslip1_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip1_o <= gw5ddrphy_bitslip1_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip2_o <= 4'd0;
    case (gw5ddrphy_bitslip2_value)
        1'd0: begin
            gw5ddrphy_bitslip2_o <= gw5ddrphy_bitslip2_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip2_o <= gw5ddrphy_bitslip2_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip2_o <= gw5ddrphy_bitslip2_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip2_o <= gw5ddrphy_bitslip2_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip3_o <= 4'd0;
    case (gw5ddrphy_bitslip3_value)
        1'd0: begin
            gw5ddrphy_bitslip3_o <= gw5ddrphy_bitslip3_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip3_o <= gw5ddrphy_bitslip3_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip3_o <= gw5ddrphy_bitslip3_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip3_o <= gw5ddrphy_bitslip3_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip4_o <= 4'd0;
    case (gw5ddrphy_bitslip4_value)
        1'd0: begin
            gw5ddrphy_bitslip4_o <= gw5ddrphy_bitslip4_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip4_o <= gw5ddrphy_bitslip4_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip4_o <= gw5ddrphy_bitslip4_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip4_o <= gw5ddrphy_bitslip4_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip5_o <= 4'd0;
    case (gw5ddrphy_bitslip5_value)
        1'd0: begin
            gw5ddrphy_bitslip5_o <= gw5ddrphy_bitslip5_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip5_o <= gw5ddrphy_bitslip5_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip5_o <= gw5ddrphy_bitslip5_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip5_o <= gw5ddrphy_bitslip5_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip6_o <= 4'd0;
    case (gw5ddrphy_bitslip6_value)
        1'd0: begin
            gw5ddrphy_bitslip6_o <= gw5ddrphy_bitslip6_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip6_o <= gw5ddrphy_bitslip6_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip6_o <= gw5ddrphy_bitslip6_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip6_o <= gw5ddrphy_bitslip6_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip7_o <= 4'd0;
    case (gw5ddrphy_bitslip7_value)
        1'd0: begin
            gw5ddrphy_bitslip7_o <= gw5ddrphy_bitslip7_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip7_o <= gw5ddrphy_bitslip7_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip7_o <= gw5ddrphy_bitslip7_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip7_o <= gw5ddrphy_bitslip7_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip8_o <= 4'd0;
    case (gw5ddrphy_bitslip8_value)
        1'd0: begin
            gw5ddrphy_bitslip8_o <= gw5ddrphy_bitslip8_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip8_o <= gw5ddrphy_bitslip8_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip8_o <= gw5ddrphy_bitslip8_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip8_o <= gw5ddrphy_bitslip8_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip9_o <= 4'd0;
    case (gw5ddrphy_bitslip9_value)
        1'd0: begin
            gw5ddrphy_bitslip9_o <= gw5ddrphy_bitslip9_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip9_o <= gw5ddrphy_bitslip9_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip9_o <= gw5ddrphy_bitslip9_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip9_o <= gw5ddrphy_bitslip9_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip10_o <= 4'd0;
    case (gw5ddrphy_bitslip10_value)
        1'd0: begin
            gw5ddrphy_bitslip10_o <= gw5ddrphy_bitslip10_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip10_o <= gw5ddrphy_bitslip10_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip10_o <= gw5ddrphy_bitslip10_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip10_o <= gw5ddrphy_bitslip10_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip11_o <= 4'd0;
    case (gw5ddrphy_bitslip11_value)
        1'd0: begin
            gw5ddrphy_bitslip11_o <= gw5ddrphy_bitslip11_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip11_o <= gw5ddrphy_bitslip11_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip11_o <= gw5ddrphy_bitslip11_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip11_o <= gw5ddrphy_bitslip11_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip12_o <= 4'd0;
    case (gw5ddrphy_bitslip12_value)
        1'd0: begin
            gw5ddrphy_bitslip12_o <= gw5ddrphy_bitslip12_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip12_o <= gw5ddrphy_bitslip12_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip12_o <= gw5ddrphy_bitslip12_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip12_o <= gw5ddrphy_bitslip12_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip13_o <= 4'd0;
    case (gw5ddrphy_bitslip13_value)
        1'd0: begin
            gw5ddrphy_bitslip13_o <= gw5ddrphy_bitslip13_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip13_o <= gw5ddrphy_bitslip13_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip13_o <= gw5ddrphy_bitslip13_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip13_o <= gw5ddrphy_bitslip13_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip14_o <= 4'd0;
    case (gw5ddrphy_bitslip14_value)
        1'd0: begin
            gw5ddrphy_bitslip14_o <= gw5ddrphy_bitslip14_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip14_o <= gw5ddrphy_bitslip14_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip14_o <= gw5ddrphy_bitslip14_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip14_o <= gw5ddrphy_bitslip14_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip15_o <= 4'd0;
    case (gw5ddrphy_bitslip15_value)
        1'd0: begin
            gw5ddrphy_bitslip15_o <= gw5ddrphy_bitslip15_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip15_o <= gw5ddrphy_bitslip15_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip15_o <= gw5ddrphy_bitslip15_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip15_o <= gw5ddrphy_bitslip15_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip16_o <= 4'd0;
    case (gw5ddrphy_bitslip16_value)
        1'd0: begin
            gw5ddrphy_bitslip16_o <= gw5ddrphy_bitslip16_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip16_o <= gw5ddrphy_bitslip16_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip16_o <= gw5ddrphy_bitslip16_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip16_o <= gw5ddrphy_bitslip16_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip17_o <= 4'd0;
    case (gw5ddrphy_bitslip17_value)
        1'd0: begin
            gw5ddrphy_bitslip17_o <= gw5ddrphy_bitslip17_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip17_o <= gw5ddrphy_bitslip17_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip17_o <= gw5ddrphy_bitslip17_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip17_o <= gw5ddrphy_bitslip17_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip18_o <= 4'd0;
    case (gw5ddrphy_bitslip18_value)
        1'd0: begin
            gw5ddrphy_bitslip18_o <= gw5ddrphy_bitslip18_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip18_o <= gw5ddrphy_bitslip18_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip18_o <= gw5ddrphy_bitslip18_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip18_o <= gw5ddrphy_bitslip18_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip19_o <= 4'd0;
    case (gw5ddrphy_bitslip19_value)
        1'd0: begin
            gw5ddrphy_bitslip19_o <= gw5ddrphy_bitslip19_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip19_o <= gw5ddrphy_bitslip19_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip19_o <= gw5ddrphy_bitslip19_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip19_o <= gw5ddrphy_bitslip19_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip20_o <= 4'd0;
    case (gw5ddrphy_bitslip20_value)
        1'd0: begin
            gw5ddrphy_bitslip20_o <= gw5ddrphy_bitslip20_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip20_o <= gw5ddrphy_bitslip20_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip20_o <= gw5ddrphy_bitslip20_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip20_o <= gw5ddrphy_bitslip20_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip21_o <= 4'd0;
    case (gw5ddrphy_bitslip21_value)
        1'd0: begin
            gw5ddrphy_bitslip21_o <= gw5ddrphy_bitslip21_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip21_o <= gw5ddrphy_bitslip21_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip21_o <= gw5ddrphy_bitslip21_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip21_o <= gw5ddrphy_bitslip21_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip22_o <= 4'd0;
    case (gw5ddrphy_bitslip22_value)
        1'd0: begin
            gw5ddrphy_bitslip22_o <= gw5ddrphy_bitslip22_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip22_o <= gw5ddrphy_bitslip22_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip22_o <= gw5ddrphy_bitslip22_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip22_o <= gw5ddrphy_bitslip22_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip23_o <= 4'd0;
    case (gw5ddrphy_bitslip23_value)
        1'd0: begin
            gw5ddrphy_bitslip23_o <= gw5ddrphy_bitslip23_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip23_o <= gw5ddrphy_bitslip23_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip23_o <= gw5ddrphy_bitslip23_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip23_o <= gw5ddrphy_bitslip23_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip24_o <= 4'd0;
    case (gw5ddrphy_bitslip24_value)
        1'd0: begin
            gw5ddrphy_bitslip24_o <= gw5ddrphy_bitslip24_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip24_o <= gw5ddrphy_bitslip24_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip24_o <= gw5ddrphy_bitslip24_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip24_o <= gw5ddrphy_bitslip24_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip25_o <= 4'd0;
    case (gw5ddrphy_bitslip25_value)
        1'd0: begin
            gw5ddrphy_bitslip25_o <= gw5ddrphy_bitslip25_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip25_o <= gw5ddrphy_bitslip25_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip25_o <= gw5ddrphy_bitslip25_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip25_o <= gw5ddrphy_bitslip25_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip26_o <= 4'd0;
    case (gw5ddrphy_bitslip26_value)
        1'd0: begin
            gw5ddrphy_bitslip26_o <= gw5ddrphy_bitslip26_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip26_o <= gw5ddrphy_bitslip26_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip26_o <= gw5ddrphy_bitslip26_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip26_o <= gw5ddrphy_bitslip26_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip27_o <= 4'd0;
    case (gw5ddrphy_bitslip27_value)
        1'd0: begin
            gw5ddrphy_bitslip27_o <= gw5ddrphy_bitslip27_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip27_o <= gw5ddrphy_bitslip27_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip27_o <= gw5ddrphy_bitslip27_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip27_o <= gw5ddrphy_bitslip27_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip28_o <= 4'd0;
    case (gw5ddrphy_bitslip28_value)
        1'd0: begin
            gw5ddrphy_bitslip28_o <= gw5ddrphy_bitslip28_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip28_o <= gw5ddrphy_bitslip28_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip28_o <= gw5ddrphy_bitslip28_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip28_o <= gw5ddrphy_bitslip28_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip29_o <= 4'd0;
    case (gw5ddrphy_bitslip29_value)
        1'd0: begin
            gw5ddrphy_bitslip29_o <= gw5ddrphy_bitslip29_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip29_o <= gw5ddrphy_bitslip29_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip29_o <= gw5ddrphy_bitslip29_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip29_o <= gw5ddrphy_bitslip29_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip30_o <= 4'd0;
    case (gw5ddrphy_bitslip30_value)
        1'd0: begin
            gw5ddrphy_bitslip30_o <= gw5ddrphy_bitslip30_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip30_o <= gw5ddrphy_bitslip30_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip30_o <= gw5ddrphy_bitslip30_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip30_o <= gw5ddrphy_bitslip30_r[6:3];
        end
    endcase
end
always @(*) begin
    gw5ddrphy_bitslip31_o <= 4'd0;
    case (gw5ddrphy_bitslip31_value)
        1'd0: begin
            gw5ddrphy_bitslip31_o <= gw5ddrphy_bitslip31_r[3:0];
        end
        1'd1: begin
            gw5ddrphy_bitslip31_o <= gw5ddrphy_bitslip31_r[4:1];
        end
        2'd2: begin
            gw5ddrphy_bitslip31_o <= gw5ddrphy_bitslip31_r[5:2];
        end
        2'd3: begin
            gw5ddrphy_bitslip31_o <= gw5ddrphy_bitslip31_r[6:3];
        end
    endcase
end
assign gw5ddrphy_dfi_p0_address = basesoc_master_p0_address;
assign gw5ddrphy_dfi_p0_bank = basesoc_master_p0_bank;
assign gw5ddrphy_dfi_p0_cas_n = basesoc_master_p0_cas_n;
assign gw5ddrphy_dfi_p0_cs_n = basesoc_master_p0_cs_n;
assign gw5ddrphy_dfi_p0_ras_n = basesoc_master_p0_ras_n;
assign gw5ddrphy_dfi_p0_we_n = basesoc_master_p0_we_n;
assign gw5ddrphy_dfi_p0_cke = basesoc_master_p0_cke;
assign gw5ddrphy_dfi_p0_odt = basesoc_master_p0_odt;
assign gw5ddrphy_dfi_p0_reset_n = basesoc_master_p0_reset_n;
assign gw5ddrphy_dfi_p0_act_n = basesoc_master_p0_act_n;
assign gw5ddrphy_dfi_p0_wrdata = basesoc_master_p0_wrdata;
assign gw5ddrphy_dfi_p0_wrdata_en = basesoc_master_p0_wrdata_en;
assign gw5ddrphy_dfi_p0_wrdata_mask = basesoc_master_p0_wrdata_mask;
assign gw5ddrphy_dfi_p0_rddata_en = basesoc_master_p0_rddata_en;
assign basesoc_master_p0_rddata = gw5ddrphy_dfi_p0_rddata;
assign basesoc_master_p0_rddata_valid = gw5ddrphy_dfi_p0_rddata_valid;
assign gw5ddrphy_dfi_p1_address = basesoc_master_p1_address;
assign gw5ddrphy_dfi_p1_bank = basesoc_master_p1_bank;
assign gw5ddrphy_dfi_p1_cas_n = basesoc_master_p1_cas_n;
assign gw5ddrphy_dfi_p1_cs_n = basesoc_master_p1_cs_n;
assign gw5ddrphy_dfi_p1_ras_n = basesoc_master_p1_ras_n;
assign gw5ddrphy_dfi_p1_we_n = basesoc_master_p1_we_n;
assign gw5ddrphy_dfi_p1_cke = basesoc_master_p1_cke;
assign gw5ddrphy_dfi_p1_odt = basesoc_master_p1_odt;
assign gw5ddrphy_dfi_p1_reset_n = basesoc_master_p1_reset_n;
assign gw5ddrphy_dfi_p1_act_n = basesoc_master_p1_act_n;
assign gw5ddrphy_dfi_p1_wrdata = basesoc_master_p1_wrdata;
assign gw5ddrphy_dfi_p1_wrdata_en = basesoc_master_p1_wrdata_en;
assign gw5ddrphy_dfi_p1_wrdata_mask = basesoc_master_p1_wrdata_mask;
assign gw5ddrphy_dfi_p1_rddata_en = basesoc_master_p1_rddata_en;
assign basesoc_master_p1_rddata = gw5ddrphy_dfi_p1_rddata;
assign basesoc_master_p1_rddata_valid = gw5ddrphy_dfi_p1_rddata_valid;
assign basesoc_slave_p0_address = basesoc_dfi_p0_address;
assign basesoc_slave_p0_bank = basesoc_dfi_p0_bank;
assign basesoc_slave_p0_cas_n = basesoc_dfi_p0_cas_n;
assign basesoc_slave_p0_cs_n = basesoc_dfi_p0_cs_n;
assign basesoc_slave_p0_ras_n = basesoc_dfi_p0_ras_n;
assign basesoc_slave_p0_we_n = basesoc_dfi_p0_we_n;
assign basesoc_slave_p0_cke = basesoc_dfi_p0_cke;
assign basesoc_slave_p0_odt = basesoc_dfi_p0_odt;
assign basesoc_slave_p0_reset_n = basesoc_dfi_p0_reset_n;
assign basesoc_slave_p0_act_n = basesoc_dfi_p0_act_n;
assign basesoc_slave_p0_wrdata = basesoc_dfi_p0_wrdata;
assign basesoc_slave_p0_wrdata_en = basesoc_dfi_p0_wrdata_en;
assign basesoc_slave_p0_wrdata_mask = basesoc_dfi_p0_wrdata_mask;
assign basesoc_slave_p0_rddata_en = basesoc_dfi_p0_rddata_en;
assign basesoc_dfi_p0_rddata = basesoc_slave_p0_rddata;
assign basesoc_dfi_p0_rddata_valid = basesoc_slave_p0_rddata_valid;
assign basesoc_slave_p1_address = basesoc_dfi_p1_address;
assign basesoc_slave_p1_bank = basesoc_dfi_p1_bank;
assign basesoc_slave_p1_cas_n = basesoc_dfi_p1_cas_n;
assign basesoc_slave_p1_cs_n = basesoc_dfi_p1_cs_n;
assign basesoc_slave_p1_ras_n = basesoc_dfi_p1_ras_n;
assign basesoc_slave_p1_we_n = basesoc_dfi_p1_we_n;
assign basesoc_slave_p1_cke = basesoc_dfi_p1_cke;
assign basesoc_slave_p1_odt = basesoc_dfi_p1_odt;
assign basesoc_slave_p1_reset_n = basesoc_dfi_p1_reset_n;
assign basesoc_slave_p1_act_n = basesoc_dfi_p1_act_n;
assign basesoc_slave_p1_wrdata = basesoc_dfi_p1_wrdata;
assign basesoc_slave_p1_wrdata_en = basesoc_dfi_p1_wrdata_en;
assign basesoc_slave_p1_wrdata_mask = basesoc_dfi_p1_wrdata_mask;
assign basesoc_slave_p1_rddata_en = basesoc_dfi_p1_rddata_en;
assign basesoc_dfi_p1_rddata = basesoc_slave_p1_rddata;
assign basesoc_dfi_p1_rddata_valid = basesoc_slave_p1_rddata_valid;
always @(*) begin
    basesoc_csr_dfi_p0_rddata <= 128'd0;
    basesoc_csr_dfi_p0_rddata_valid <= 1'd0;
    basesoc_csr_dfi_p1_rddata <= 128'd0;
    basesoc_csr_dfi_p1_rddata_valid <= 1'd0;
    basesoc_ext_dfi_p0_rddata <= 128'd0;
    basesoc_ext_dfi_p0_rddata_valid <= 1'd0;
    basesoc_ext_dfi_p1_rddata <= 128'd0;
    basesoc_ext_dfi_p1_rddata_valid <= 1'd0;
    basesoc_master_p0_act_n <= 1'd1;
    basesoc_master_p0_address <= 14'd0;
    basesoc_master_p0_bank <= 3'd0;
    basesoc_master_p0_cas_n <= 1'd1;
    basesoc_master_p0_cke <= 1'd0;
    basesoc_master_p0_cs_n <= 1'd1;
    basesoc_master_p0_odt <= 1'd0;
    basesoc_master_p0_ras_n <= 1'd1;
    basesoc_master_p0_rddata_en <= 1'd0;
    basesoc_master_p0_reset_n <= 1'd0;
    basesoc_master_p0_we_n <= 1'd1;
    basesoc_master_p0_wrdata <= 128'd0;
    basesoc_master_p0_wrdata_en <= 1'd0;
    basesoc_master_p0_wrdata_mask <= 16'd0;
    basesoc_master_p1_act_n <= 1'd1;
    basesoc_master_p1_address <= 14'd0;
    basesoc_master_p1_bank <= 3'd0;
    basesoc_master_p1_cas_n <= 1'd1;
    basesoc_master_p1_cke <= 1'd0;
    basesoc_master_p1_cs_n <= 1'd1;
    basesoc_master_p1_odt <= 1'd0;
    basesoc_master_p1_ras_n <= 1'd1;
    basesoc_master_p1_rddata_en <= 1'd0;
    basesoc_master_p1_reset_n <= 1'd0;
    basesoc_master_p1_we_n <= 1'd1;
    basesoc_master_p1_wrdata <= 128'd0;
    basesoc_master_p1_wrdata_en <= 1'd0;
    basesoc_master_p1_wrdata_mask <= 16'd0;
    basesoc_slave_p0_rddata <= 128'd0;
    basesoc_slave_p0_rddata_valid <= 1'd0;
    basesoc_slave_p1_rddata <= 128'd0;
    basesoc_slave_p1_rddata_valid <= 1'd0;
    if (basesoc_sel) begin
        if (basesoc_ext_dfi_sel) begin
            basesoc_master_p0_address <= basesoc_ext_dfi_p0_address;
            basesoc_master_p0_bank <= basesoc_ext_dfi_p0_bank;
            basesoc_master_p0_cas_n <= basesoc_ext_dfi_p0_cas_n;
            basesoc_master_p0_cs_n <= basesoc_ext_dfi_p0_cs_n;
            basesoc_master_p0_ras_n <= basesoc_ext_dfi_p0_ras_n;
            basesoc_master_p0_we_n <= basesoc_ext_dfi_p0_we_n;
            basesoc_master_p0_cke <= basesoc_ext_dfi_p0_cke;
            basesoc_master_p0_odt <= basesoc_ext_dfi_p0_odt;
            basesoc_master_p0_reset_n <= basesoc_ext_dfi_p0_reset_n;
            basesoc_master_p0_act_n <= basesoc_ext_dfi_p0_act_n;
            basesoc_master_p0_wrdata <= basesoc_ext_dfi_p0_wrdata;
            basesoc_master_p0_wrdata_en <= basesoc_ext_dfi_p0_wrdata_en;
            basesoc_master_p0_wrdata_mask <= basesoc_ext_dfi_p0_wrdata_mask;
            basesoc_master_p0_rddata_en <= basesoc_ext_dfi_p0_rddata_en;
            basesoc_ext_dfi_p0_rddata <= basesoc_master_p0_rddata;
            basesoc_ext_dfi_p0_rddata_valid <= basesoc_master_p0_rddata_valid;
            basesoc_master_p1_address <= basesoc_ext_dfi_p1_address;
            basesoc_master_p1_bank <= basesoc_ext_dfi_p1_bank;
            basesoc_master_p1_cas_n <= basesoc_ext_dfi_p1_cas_n;
            basesoc_master_p1_cs_n <= basesoc_ext_dfi_p1_cs_n;
            basesoc_master_p1_ras_n <= basesoc_ext_dfi_p1_ras_n;
            basesoc_master_p1_we_n <= basesoc_ext_dfi_p1_we_n;
            basesoc_master_p1_cke <= basesoc_ext_dfi_p1_cke;
            basesoc_master_p1_odt <= basesoc_ext_dfi_p1_odt;
            basesoc_master_p1_reset_n <= basesoc_ext_dfi_p1_reset_n;
            basesoc_master_p1_act_n <= basesoc_ext_dfi_p1_act_n;
            basesoc_master_p1_wrdata <= basesoc_ext_dfi_p1_wrdata;
            basesoc_master_p1_wrdata_en <= basesoc_ext_dfi_p1_wrdata_en;
            basesoc_master_p1_wrdata_mask <= basesoc_ext_dfi_p1_wrdata_mask;
            basesoc_master_p1_rddata_en <= basesoc_ext_dfi_p1_rddata_en;
            basesoc_ext_dfi_p1_rddata <= basesoc_master_p1_rddata;
            basesoc_ext_dfi_p1_rddata_valid <= basesoc_master_p1_rddata_valid;
        end else begin
            basesoc_master_p0_address <= basesoc_slave_p0_address;
            basesoc_master_p0_bank <= basesoc_slave_p0_bank;
            basesoc_master_p0_cas_n <= basesoc_slave_p0_cas_n;
            basesoc_master_p0_cs_n <= basesoc_slave_p0_cs_n;
            basesoc_master_p0_ras_n <= basesoc_slave_p0_ras_n;
            basesoc_master_p0_we_n <= basesoc_slave_p0_we_n;
            basesoc_master_p0_cke <= basesoc_slave_p0_cke;
            basesoc_master_p0_odt <= basesoc_slave_p0_odt;
            basesoc_master_p0_reset_n <= basesoc_slave_p0_reset_n;
            basesoc_master_p0_act_n <= basesoc_slave_p0_act_n;
            basesoc_master_p0_wrdata <= basesoc_slave_p0_wrdata;
            basesoc_master_p0_wrdata_en <= basesoc_slave_p0_wrdata_en;
            basesoc_master_p0_wrdata_mask <= basesoc_slave_p0_wrdata_mask;
            basesoc_master_p0_rddata_en <= basesoc_slave_p0_rddata_en;
            basesoc_slave_p0_rddata <= basesoc_master_p0_rddata;
            basesoc_slave_p0_rddata_valid <= basesoc_master_p0_rddata_valid;
            basesoc_master_p1_address <= basesoc_slave_p1_address;
            basesoc_master_p1_bank <= basesoc_slave_p1_bank;
            basesoc_master_p1_cas_n <= basesoc_slave_p1_cas_n;
            basesoc_master_p1_cs_n <= basesoc_slave_p1_cs_n;
            basesoc_master_p1_ras_n <= basesoc_slave_p1_ras_n;
            basesoc_master_p1_we_n <= basesoc_slave_p1_we_n;
            basesoc_master_p1_cke <= basesoc_slave_p1_cke;
            basesoc_master_p1_odt <= basesoc_slave_p1_odt;
            basesoc_master_p1_reset_n <= basesoc_slave_p1_reset_n;
            basesoc_master_p1_act_n <= basesoc_slave_p1_act_n;
            basesoc_master_p1_wrdata <= basesoc_slave_p1_wrdata;
            basesoc_master_p1_wrdata_en <= basesoc_slave_p1_wrdata_en;
            basesoc_master_p1_wrdata_mask <= basesoc_slave_p1_wrdata_mask;
            basesoc_master_p1_rddata_en <= basesoc_slave_p1_rddata_en;
            basesoc_slave_p1_rddata <= basesoc_master_p1_rddata;
            basesoc_slave_p1_rddata_valid <= basesoc_master_p1_rddata_valid;
            if (1'd0) begin
                basesoc_master_p0_cs_n <= {2{basesoc_slave_p0_cs_n}};
                basesoc_master_p1_cs_n <= {2{basesoc_slave_p1_cs_n}};
            end
        end
    end else begin
        basesoc_master_p0_address <= basesoc_csr_dfi_p0_address;
        basesoc_master_p0_bank <= basesoc_csr_dfi_p0_bank;
        basesoc_master_p0_cas_n <= basesoc_csr_dfi_p0_cas_n;
        basesoc_master_p0_cs_n <= basesoc_csr_dfi_p0_cs_n;
        basesoc_master_p0_ras_n <= basesoc_csr_dfi_p0_ras_n;
        basesoc_master_p0_we_n <= basesoc_csr_dfi_p0_we_n;
        basesoc_master_p0_cke <= basesoc_csr_dfi_p0_cke;
        basesoc_master_p0_odt <= basesoc_csr_dfi_p0_odt;
        basesoc_master_p0_reset_n <= basesoc_csr_dfi_p0_reset_n;
        basesoc_master_p0_act_n <= basesoc_csr_dfi_p0_act_n;
        basesoc_master_p0_wrdata <= basesoc_csr_dfi_p0_wrdata;
        basesoc_master_p0_wrdata_en <= basesoc_csr_dfi_p0_wrdata_en;
        basesoc_master_p0_wrdata_mask <= basesoc_csr_dfi_p0_wrdata_mask;
        basesoc_master_p0_rddata_en <= basesoc_csr_dfi_p0_rddata_en;
        basesoc_csr_dfi_p0_rddata <= basesoc_master_p0_rddata;
        basesoc_csr_dfi_p0_rddata_valid <= basesoc_master_p0_rddata_valid;
        basesoc_master_p1_address <= basesoc_csr_dfi_p1_address;
        basesoc_master_p1_bank <= basesoc_csr_dfi_p1_bank;
        basesoc_master_p1_cas_n <= basesoc_csr_dfi_p1_cas_n;
        basesoc_master_p1_cs_n <= basesoc_csr_dfi_p1_cs_n;
        basesoc_master_p1_ras_n <= basesoc_csr_dfi_p1_ras_n;
        basesoc_master_p1_we_n <= basesoc_csr_dfi_p1_we_n;
        basesoc_master_p1_cke <= basesoc_csr_dfi_p1_cke;
        basesoc_master_p1_odt <= basesoc_csr_dfi_p1_odt;
        basesoc_master_p1_reset_n <= basesoc_csr_dfi_p1_reset_n;
        basesoc_master_p1_act_n <= basesoc_csr_dfi_p1_act_n;
        basesoc_master_p1_wrdata <= basesoc_csr_dfi_p1_wrdata;
        basesoc_master_p1_wrdata_en <= basesoc_csr_dfi_p1_wrdata_en;
        basesoc_master_p1_wrdata_mask <= basesoc_csr_dfi_p1_wrdata_mask;
        basesoc_master_p1_rddata_en <= basesoc_csr_dfi_p1_rddata_en;
        basesoc_csr_dfi_p1_rddata <= basesoc_master_p1_rddata;
        basesoc_csr_dfi_p1_rddata_valid <= basesoc_master_p1_rddata_valid;
    end
end
always @(*) begin
    basesoc_csr_dfi_p0_cke <= 1'd0;
    basesoc_csr_dfi_p0_cke <= basesoc_cke;
end
always @(*) begin
    basesoc_csr_dfi_p1_cke <= 1'd0;
    basesoc_csr_dfi_p1_cke <= basesoc_cke;
end
always @(*) begin
    basesoc_csr_dfi_p0_odt <= 1'd0;
    basesoc_csr_dfi_p0_odt <= basesoc_odt;
end
always @(*) begin
    basesoc_csr_dfi_p1_odt <= 1'd0;
    basesoc_csr_dfi_p1_odt <= basesoc_odt;
end
assign basesoc_csr_dfi_p0_reset_n = basesoc_reset_n;
assign basesoc_csr_dfi_p1_reset_n = basesoc_reset_n;
always @(*) begin
    basesoc_csr_dfi_p0_cas_n <= 1'd1;
    basesoc_csr_dfi_p0_cs_n <= 1'd1;
    basesoc_csr_dfi_p0_ras_n <= 1'd1;
    basesoc_csr_dfi_p0_we_n <= 1'd1;
    if (basesoc_phaseinjector0_command_issue_re) begin
        if (basesoc_phaseinjector0_csrfield_cs_top) begin
            basesoc_csr_dfi_p0_cs_n <= 2'd2;
        end else begin
            if (basesoc_phaseinjector0_csrfield_cs_bottom) begin
                basesoc_csr_dfi_p0_cs_n <= 1'd1;
            end else begin
                basesoc_csr_dfi_p0_cs_n <= {1{(~basesoc_phaseinjector0_csrfield_cs)}};
            end
        end
        basesoc_csr_dfi_p0_we_n <= (~basesoc_phaseinjector0_csrfield_we);
        basesoc_csr_dfi_p0_cas_n <= (~basesoc_phaseinjector0_csrfield_cas);
        basesoc_csr_dfi_p0_ras_n <= (~basesoc_phaseinjector0_csrfield_ras);
    end else begin
        basesoc_csr_dfi_p0_cs_n <= {1{1'd1}};
        basesoc_csr_dfi_p0_we_n <= 1'd1;
        basesoc_csr_dfi_p0_cas_n <= 1'd1;
        basesoc_csr_dfi_p0_ras_n <= 1'd1;
    end
end
assign basesoc_csr_dfi_p0_address = basesoc_phaseinjector0_address_storage;
assign basesoc_csr_dfi_p0_bank = basesoc_phaseinjector0_baddress_storage;
assign basesoc_csr_dfi_p0_wrdata_en = (basesoc_phaseinjector0_command_issue_re & basesoc_phaseinjector0_csrfield_wren);
assign basesoc_csr_dfi_p0_rddata_en = (basesoc_phaseinjector0_command_issue_re & basesoc_phaseinjector0_csrfield_rden);
assign basesoc_csr_dfi_p0_wrdata = basesoc_phaseinjector0_wrdata_storage;
assign basesoc_csr_dfi_p0_wrdata_mask = 1'd0;
always @(*) begin
    basesoc_csr_dfi_p1_cas_n <= 1'd1;
    basesoc_csr_dfi_p1_cs_n <= 1'd1;
    basesoc_csr_dfi_p1_ras_n <= 1'd1;
    basesoc_csr_dfi_p1_we_n <= 1'd1;
    if (basesoc_phaseinjector1_command_issue_re) begin
        if (basesoc_phaseinjector1_csrfield_cs_top) begin
            basesoc_csr_dfi_p1_cs_n <= 2'd2;
        end else begin
            if (basesoc_phaseinjector1_csrfield_cs_bottom) begin
                basesoc_csr_dfi_p1_cs_n <= 1'd1;
            end else begin
                basesoc_csr_dfi_p1_cs_n <= {1{(~basesoc_phaseinjector1_csrfield_cs)}};
            end
        end
        basesoc_csr_dfi_p1_we_n <= (~basesoc_phaseinjector1_csrfield_we);
        basesoc_csr_dfi_p1_cas_n <= (~basesoc_phaseinjector1_csrfield_cas);
        basesoc_csr_dfi_p1_ras_n <= (~basesoc_phaseinjector1_csrfield_ras);
    end else begin
        basesoc_csr_dfi_p1_cs_n <= {1{1'd1}};
        basesoc_csr_dfi_p1_we_n <= 1'd1;
        basesoc_csr_dfi_p1_cas_n <= 1'd1;
        basesoc_csr_dfi_p1_ras_n <= 1'd1;
    end
end
assign basesoc_csr_dfi_p1_address = basesoc_phaseinjector1_address_storage;
assign basesoc_csr_dfi_p1_bank = basesoc_phaseinjector1_baddress_storage;
assign basesoc_csr_dfi_p1_wrdata_en = (basesoc_phaseinjector1_command_issue_re & basesoc_phaseinjector1_csrfield_wren);
assign basesoc_csr_dfi_p1_rddata_en = (basesoc_phaseinjector1_command_issue_re & basesoc_phaseinjector1_csrfield_rden);
assign basesoc_csr_dfi_p1_wrdata = basesoc_phaseinjector1_wrdata_storage;
assign basesoc_csr_dfi_p1_wrdata_mask = 1'd0;
assign basesoc_bankmachine0_req_valid = basesoc_interface_bank0_valid;
assign basesoc_interface_bank0_ready = basesoc_bankmachine0_req_ready;
assign basesoc_bankmachine0_req_we = basesoc_interface_bank0_we;
assign basesoc_bankmachine0_req_addr = basesoc_interface_bank0_addr;
assign basesoc_interface_bank0_lock = basesoc_bankmachine0_req_lock;
assign basesoc_interface_bank0_wdata_ready = basesoc_bankmachine0_req_wdata_ready;
assign basesoc_interface_bank0_rdata_valid = basesoc_bankmachine0_req_rdata_valid;
assign basesoc_bankmachine1_req_valid = basesoc_interface_bank1_valid;
assign basesoc_interface_bank1_ready = basesoc_bankmachine1_req_ready;
assign basesoc_bankmachine1_req_we = basesoc_interface_bank1_we;
assign basesoc_bankmachine1_req_addr = basesoc_interface_bank1_addr;
assign basesoc_interface_bank1_lock = basesoc_bankmachine1_req_lock;
assign basesoc_interface_bank1_wdata_ready = basesoc_bankmachine1_req_wdata_ready;
assign basesoc_interface_bank1_rdata_valid = basesoc_bankmachine1_req_rdata_valid;
assign basesoc_bankmachine2_req_valid = basesoc_interface_bank2_valid;
assign basesoc_interface_bank2_ready = basesoc_bankmachine2_req_ready;
assign basesoc_bankmachine2_req_we = basesoc_interface_bank2_we;
assign basesoc_bankmachine2_req_addr = basesoc_interface_bank2_addr;
assign basesoc_interface_bank2_lock = basesoc_bankmachine2_req_lock;
assign basesoc_interface_bank2_wdata_ready = basesoc_bankmachine2_req_wdata_ready;
assign basesoc_interface_bank2_rdata_valid = basesoc_bankmachine2_req_rdata_valid;
assign basesoc_bankmachine3_req_valid = basesoc_interface_bank3_valid;
assign basesoc_interface_bank3_ready = basesoc_bankmachine3_req_ready;
assign basesoc_bankmachine3_req_we = basesoc_interface_bank3_we;
assign basesoc_bankmachine3_req_addr = basesoc_interface_bank3_addr;
assign basesoc_interface_bank3_lock = basesoc_bankmachine3_req_lock;
assign basesoc_interface_bank3_wdata_ready = basesoc_bankmachine3_req_wdata_ready;
assign basesoc_interface_bank3_rdata_valid = basesoc_bankmachine3_req_rdata_valid;
assign basesoc_bankmachine4_req_valid = basesoc_interface_bank4_valid;
assign basesoc_interface_bank4_ready = basesoc_bankmachine4_req_ready;
assign basesoc_bankmachine4_req_we = basesoc_interface_bank4_we;
assign basesoc_bankmachine4_req_addr = basesoc_interface_bank4_addr;
assign basesoc_interface_bank4_lock = basesoc_bankmachine4_req_lock;
assign basesoc_interface_bank4_wdata_ready = basesoc_bankmachine4_req_wdata_ready;
assign basesoc_interface_bank4_rdata_valid = basesoc_bankmachine4_req_rdata_valid;
assign basesoc_bankmachine5_req_valid = basesoc_interface_bank5_valid;
assign basesoc_interface_bank5_ready = basesoc_bankmachine5_req_ready;
assign basesoc_bankmachine5_req_we = basesoc_interface_bank5_we;
assign basesoc_bankmachine5_req_addr = basesoc_interface_bank5_addr;
assign basesoc_interface_bank5_lock = basesoc_bankmachine5_req_lock;
assign basesoc_interface_bank5_wdata_ready = basesoc_bankmachine5_req_wdata_ready;
assign basesoc_interface_bank5_rdata_valid = basesoc_bankmachine5_req_rdata_valid;
assign basesoc_bankmachine6_req_valid = basesoc_interface_bank6_valid;
assign basesoc_interface_bank6_ready = basesoc_bankmachine6_req_ready;
assign basesoc_bankmachine6_req_we = basesoc_interface_bank6_we;
assign basesoc_bankmachine6_req_addr = basesoc_interface_bank6_addr;
assign basesoc_interface_bank6_lock = basesoc_bankmachine6_req_lock;
assign basesoc_interface_bank6_wdata_ready = basesoc_bankmachine6_req_wdata_ready;
assign basesoc_interface_bank6_rdata_valid = basesoc_bankmachine6_req_rdata_valid;
assign basesoc_bankmachine7_req_valid = basesoc_interface_bank7_valid;
assign basesoc_interface_bank7_ready = basesoc_bankmachine7_req_ready;
assign basesoc_bankmachine7_req_we = basesoc_interface_bank7_we;
assign basesoc_bankmachine7_req_addr = basesoc_interface_bank7_addr;
assign basesoc_interface_bank7_lock = basesoc_bankmachine7_req_lock;
assign basesoc_interface_bank7_wdata_ready = basesoc_bankmachine7_req_wdata_ready;
assign basesoc_interface_bank7_rdata_valid = basesoc_bankmachine7_req_rdata_valid;
assign basesoc_timer_wait = (~basesoc_timer_done0);
assign basesoc_postponer_req_i = basesoc_timer_done0;
assign basesoc_wants_refresh = basesoc_postponer_req_o;
assign basesoc_wants_zqcs = basesoc_zqcs_timer_done0;
assign basesoc_zqcs_timer_wait = (~basesoc_zqcs_executer_done);
assign basesoc_timer_done1 = (basesoc_timer_count1 == 1'd0);
assign basesoc_timer_done0 = basesoc_timer_done1;
assign basesoc_timer_count0 = basesoc_timer_count1;
assign basesoc_sequencer_start1 = (basesoc_sequencer_start0 | (basesoc_sequencer_count != 1'd0));
assign basesoc_sequencer_done0 = (basesoc_sequencer_done1 & (basesoc_sequencer_count == 1'd0));
assign basesoc_zqcs_timer_done1 = (basesoc_zqcs_timer_count1 == 1'd0);
assign basesoc_zqcs_timer_done0 = basesoc_zqcs_timer_done1;
assign basesoc_zqcs_timer_count0 = basesoc_zqcs_timer_count1;
always @(*) begin
    basesoc_cmd_last <= 1'd0;
    basesoc_cmd_valid <= 1'd0;
    basesoc_sequencer_start0 <= 1'd0;
    basesoc_zqcs_executer_start <= 1'd0;
    refresher_next_state <= 2'd0;
    refresher_next_state <= refresher_state;
    case (refresher_state)
        1'd1: begin
            basesoc_cmd_valid <= 1'd1;
            if (basesoc_cmd_ready) begin
                basesoc_sequencer_start0 <= 1'd1;
                refresher_next_state <= 2'd2;
            end
        end
        2'd2: begin
            basesoc_cmd_valid <= 1'd1;
            if (basesoc_sequencer_done0) begin
                if (basesoc_wants_zqcs) begin
                    basesoc_zqcs_executer_start <= 1'd1;
                    refresher_next_state <= 2'd3;
                end else begin
                    basesoc_cmd_valid <= 1'd0;
                    basesoc_cmd_last <= 1'd1;
                    refresher_next_state <= 1'd0;
                end
            end
        end
        2'd3: begin
            basesoc_cmd_valid <= 1'd1;
            if (basesoc_zqcs_executer_done) begin
                basesoc_cmd_valid <= 1'd0;
                basesoc_cmd_last <= 1'd1;
                refresher_next_state <= 1'd0;
            end
        end
        default: begin
            if (1'd1) begin
                if (basesoc_wants_refresh) begin
                    refresher_next_state <= 1'd1;
                end
            end
        end
    endcase
end
assign basesoc_bankmachine0_sink_valid = basesoc_bankmachine0_req_valid;
assign basesoc_bankmachine0_req_ready = basesoc_bankmachine0_sink_ready;
assign basesoc_bankmachine0_sink_payload_we = basesoc_bankmachine0_req_we;
assign basesoc_bankmachine0_sink_payload_addr = basesoc_bankmachine0_req_addr;
assign basesoc_bankmachine0_sink_sink_valid = basesoc_bankmachine0_source_valid;
assign basesoc_bankmachine0_source_ready = basesoc_bankmachine0_sink_sink_ready;
assign basesoc_bankmachine0_sink_sink_first = basesoc_bankmachine0_source_first;
assign basesoc_bankmachine0_sink_sink_last = basesoc_bankmachine0_source_last;
assign basesoc_bankmachine0_sink_sink_payload_we = basesoc_bankmachine0_source_payload_we;
assign basesoc_bankmachine0_sink_sink_payload_addr = basesoc_bankmachine0_source_payload_addr;
assign basesoc_bankmachine0_source_source_ready = (basesoc_bankmachine0_req_wdata_ready | basesoc_bankmachine0_req_rdata_valid);
assign basesoc_bankmachine0_req_lock = (basesoc_bankmachine0_source_valid | basesoc_bankmachine0_source_source_valid);
assign basesoc_bankmachine0_row_hit = (basesoc_bankmachine0_row == basesoc_bankmachine0_source_source_payload_addr[20:7]);
assign basesoc_bankmachine0_cmd_payload_ba = 1'd0;
always @(*) begin
    basesoc_bankmachine0_cmd_payload_a <= 14'd0;
    if (basesoc_bankmachine0_row_col_n_addr_sel) begin
        basesoc_bankmachine0_cmd_payload_a <= basesoc_bankmachine0_source_source_payload_addr[20:7];
    end else begin
        basesoc_bankmachine0_cmd_payload_a <= ((basesoc_bankmachine0_auto_precharge <<< 4'd10) | {basesoc_bankmachine0_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_bankmachine0_twtpcon_valid = ((basesoc_bankmachine0_cmd_valid & basesoc_bankmachine0_cmd_ready) & basesoc_bankmachine0_cmd_payload_is_write);
assign basesoc_bankmachine0_trccon_valid = ((basesoc_bankmachine0_cmd_valid & basesoc_bankmachine0_cmd_ready) & basesoc_bankmachine0_row_open);
assign basesoc_bankmachine0_trascon_valid = ((basesoc_bankmachine0_cmd_valid & basesoc_bankmachine0_cmd_ready) & basesoc_bankmachine0_row_open);
always @(*) begin
    basesoc_bankmachine0_auto_precharge <= 1'd0;
    if ((basesoc_bankmachine0_source_valid & basesoc_bankmachine0_source_source_valid)) begin
        if ((basesoc_bankmachine0_source_payload_addr[20:7] != basesoc_bankmachine0_source_source_payload_addr[20:7])) begin
            basesoc_bankmachine0_auto_precharge <= (basesoc_bankmachine0_row_close == 1'd0);
        end
    end
end
assign basesoc_bankmachine0_syncfifo0_din = {basesoc_bankmachine0_fifo_in_last, basesoc_bankmachine0_fifo_in_first, basesoc_bankmachine0_fifo_in_payload_addr, basesoc_bankmachine0_fifo_in_payload_we};
assign {basesoc_bankmachine0_fifo_out_last, basesoc_bankmachine0_fifo_out_first, basesoc_bankmachine0_fifo_out_payload_addr, basesoc_bankmachine0_fifo_out_payload_we} = basesoc_bankmachine0_syncfifo0_dout;
assign basesoc_bankmachine0_sink_ready = basesoc_bankmachine0_syncfifo0_writable;
assign basesoc_bankmachine0_syncfifo0_we = basesoc_bankmachine0_sink_valid;
assign basesoc_bankmachine0_fifo_in_first = basesoc_bankmachine0_sink_first;
assign basesoc_bankmachine0_fifo_in_last = basesoc_bankmachine0_sink_last;
assign basesoc_bankmachine0_fifo_in_payload_we = basesoc_bankmachine0_sink_payload_we;
assign basesoc_bankmachine0_fifo_in_payload_addr = basesoc_bankmachine0_sink_payload_addr;
assign basesoc_bankmachine0_source_valid = basesoc_bankmachine0_syncfifo0_readable;
assign basesoc_bankmachine0_source_first = basesoc_bankmachine0_fifo_out_first;
assign basesoc_bankmachine0_source_last = basesoc_bankmachine0_fifo_out_last;
assign basesoc_bankmachine0_source_payload_we = basesoc_bankmachine0_fifo_out_payload_we;
assign basesoc_bankmachine0_source_payload_addr = basesoc_bankmachine0_fifo_out_payload_addr;
assign basesoc_bankmachine0_syncfifo0_re = basesoc_bankmachine0_source_ready;
always @(*) begin
    basesoc_bankmachine0_wrport_adr <= 3'd0;
    if (basesoc_bankmachine0_replace) begin
        basesoc_bankmachine0_wrport_adr <= (basesoc_bankmachine0_produce - 1'd1);
    end else begin
        basesoc_bankmachine0_wrport_adr <= basesoc_bankmachine0_produce;
    end
end
assign basesoc_bankmachine0_wrport_dat_w = basesoc_bankmachine0_syncfifo0_din;
assign basesoc_bankmachine0_wrport_we = (basesoc_bankmachine0_syncfifo0_we & (basesoc_bankmachine0_syncfifo0_writable | basesoc_bankmachine0_replace));
assign basesoc_bankmachine0_do_read = (basesoc_bankmachine0_syncfifo0_readable & basesoc_bankmachine0_syncfifo0_re);
assign basesoc_bankmachine0_rdport_adr = basesoc_bankmachine0_consume;
assign basesoc_bankmachine0_syncfifo0_dout = basesoc_bankmachine0_rdport_dat_r;
assign basesoc_bankmachine0_syncfifo0_writable = (basesoc_bankmachine0_level != 4'd8);
assign basesoc_bankmachine0_syncfifo0_readable = (basesoc_bankmachine0_level != 1'd0);
assign basesoc_bankmachine0_pipe_valid_sink_ready = ((~basesoc_bankmachine0_pipe_valid_source_valid) | basesoc_bankmachine0_pipe_valid_source_ready);
assign basesoc_bankmachine0_pipe_valid_sink_valid = basesoc_bankmachine0_sink_sink_valid;
assign basesoc_bankmachine0_sink_sink_ready = basesoc_bankmachine0_pipe_valid_sink_ready;
assign basesoc_bankmachine0_pipe_valid_sink_first = basesoc_bankmachine0_sink_sink_first;
assign basesoc_bankmachine0_pipe_valid_sink_last = basesoc_bankmachine0_sink_sink_last;
assign basesoc_bankmachine0_pipe_valid_sink_payload_we = basesoc_bankmachine0_sink_sink_payload_we;
assign basesoc_bankmachine0_pipe_valid_sink_payload_addr = basesoc_bankmachine0_sink_sink_payload_addr;
assign basesoc_bankmachine0_source_source_valid = basesoc_bankmachine0_pipe_valid_source_valid;
assign basesoc_bankmachine0_pipe_valid_source_ready = basesoc_bankmachine0_source_source_ready;
assign basesoc_bankmachine0_source_source_first = basesoc_bankmachine0_pipe_valid_source_first;
assign basesoc_bankmachine0_source_source_last = basesoc_bankmachine0_pipe_valid_source_last;
assign basesoc_bankmachine0_source_source_payload_we = basesoc_bankmachine0_pipe_valid_source_payload_we;
assign basesoc_bankmachine0_source_source_payload_addr = basesoc_bankmachine0_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine0_next_state <= 3'd0;
    basesoc_bankmachine0_cmd_payload_cas <= 1'd0;
    basesoc_bankmachine0_cmd_payload_is_cmd <= 1'd0;
    basesoc_bankmachine0_cmd_payload_is_read <= 1'd0;
    basesoc_bankmachine0_cmd_payload_is_write <= 1'd0;
    basesoc_bankmachine0_cmd_payload_ras <= 1'd0;
    basesoc_bankmachine0_cmd_payload_we <= 1'd0;
    basesoc_bankmachine0_cmd_valid <= 1'd0;
    basesoc_bankmachine0_refresh_gnt <= 1'd0;
    basesoc_bankmachine0_req_rdata_valid <= 1'd0;
    basesoc_bankmachine0_req_wdata_ready <= 1'd0;
    basesoc_bankmachine0_row_close <= 1'd0;
    basesoc_bankmachine0_row_col_n_addr_sel <= 1'd0;
    basesoc_bankmachine0_row_open <= 1'd0;
    bankmachine0_next_state <= bankmachine0_state;
    case (bankmachine0_state)
        1'd1: begin
            if ((basesoc_bankmachine0_twtpcon_ready & basesoc_bankmachine0_trascon_ready)) begin
                basesoc_bankmachine0_cmd_valid <= 1'd1;
                if (basesoc_bankmachine0_cmd_ready) begin
                    bankmachine0_next_state <= 3'd5;
                end
                basesoc_bankmachine0_cmd_payload_ras <= 1'd1;
                basesoc_bankmachine0_cmd_payload_we <= 1'd1;
                basesoc_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_bankmachine0_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_bankmachine0_twtpcon_ready & basesoc_bankmachine0_trascon_ready)) begin
                bankmachine0_next_state <= 3'd5;
            end
            basesoc_bankmachine0_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_bankmachine0_trccon_ready) begin
                basesoc_bankmachine0_row_col_n_addr_sel <= 1'd1;
                basesoc_bankmachine0_row_open <= 1'd1;
                basesoc_bankmachine0_cmd_valid <= 1'd1;
                basesoc_bankmachine0_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_bankmachine0_cmd_ready) begin
                    bankmachine0_next_state <= 3'd6;
                end
                basesoc_bankmachine0_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_bankmachine0_twtpcon_ready) begin
                basesoc_bankmachine0_refresh_gnt <= 1'd1;
            end
            basesoc_bankmachine0_row_close <= 1'd1;
            basesoc_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_bankmachine0_refresh_req)) begin
                bankmachine0_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine0_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine0_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_bankmachine0_refresh_req) begin
                bankmachine0_next_state <= 3'd4;
            end else begin
                if (basesoc_bankmachine0_source_source_valid) begin
                    if (basesoc_bankmachine0_row_opened) begin
                        if (basesoc_bankmachine0_row_hit) begin
                            basesoc_bankmachine0_cmd_valid <= 1'd1;
                            if (basesoc_bankmachine0_source_source_payload_we) begin
                                basesoc_bankmachine0_req_wdata_ready <= basesoc_bankmachine0_cmd_ready;
                                basesoc_bankmachine0_cmd_payload_is_write <= 1'd1;
                                basesoc_bankmachine0_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_bankmachine0_req_rdata_valid <= basesoc_bankmachine0_cmd_ready;
                                basesoc_bankmachine0_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_bankmachine0_cmd_payload_cas <= 1'd1;
                            if ((basesoc_bankmachine0_cmd_ready & basesoc_bankmachine0_auto_precharge)) begin
                                bankmachine0_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine0_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine0_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_bankmachine1_sink_valid = basesoc_bankmachine1_req_valid;
assign basesoc_bankmachine1_req_ready = basesoc_bankmachine1_sink_ready;
assign basesoc_bankmachine1_sink_payload_we = basesoc_bankmachine1_req_we;
assign basesoc_bankmachine1_sink_payload_addr = basesoc_bankmachine1_req_addr;
assign basesoc_bankmachine1_sink_sink_valid = basesoc_bankmachine1_source_valid;
assign basesoc_bankmachine1_source_ready = basesoc_bankmachine1_sink_sink_ready;
assign basesoc_bankmachine1_sink_sink_first = basesoc_bankmachine1_source_first;
assign basesoc_bankmachine1_sink_sink_last = basesoc_bankmachine1_source_last;
assign basesoc_bankmachine1_sink_sink_payload_we = basesoc_bankmachine1_source_payload_we;
assign basesoc_bankmachine1_sink_sink_payload_addr = basesoc_bankmachine1_source_payload_addr;
assign basesoc_bankmachine1_source_source_ready = (basesoc_bankmachine1_req_wdata_ready | basesoc_bankmachine1_req_rdata_valid);
assign basesoc_bankmachine1_req_lock = (basesoc_bankmachine1_source_valid | basesoc_bankmachine1_source_source_valid);
assign basesoc_bankmachine1_row_hit = (basesoc_bankmachine1_row == basesoc_bankmachine1_source_source_payload_addr[20:7]);
assign basesoc_bankmachine1_cmd_payload_ba = 1'd1;
always @(*) begin
    basesoc_bankmachine1_cmd_payload_a <= 14'd0;
    if (basesoc_bankmachine1_row_col_n_addr_sel) begin
        basesoc_bankmachine1_cmd_payload_a <= basesoc_bankmachine1_source_source_payload_addr[20:7];
    end else begin
        basesoc_bankmachine1_cmd_payload_a <= ((basesoc_bankmachine1_auto_precharge <<< 4'd10) | {basesoc_bankmachine1_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_bankmachine1_twtpcon_valid = ((basesoc_bankmachine1_cmd_valid & basesoc_bankmachine1_cmd_ready) & basesoc_bankmachine1_cmd_payload_is_write);
assign basesoc_bankmachine1_trccon_valid = ((basesoc_bankmachine1_cmd_valid & basesoc_bankmachine1_cmd_ready) & basesoc_bankmachine1_row_open);
assign basesoc_bankmachine1_trascon_valid = ((basesoc_bankmachine1_cmd_valid & basesoc_bankmachine1_cmd_ready) & basesoc_bankmachine1_row_open);
always @(*) begin
    basesoc_bankmachine1_auto_precharge <= 1'd0;
    if ((basesoc_bankmachine1_source_valid & basesoc_bankmachine1_source_source_valid)) begin
        if ((basesoc_bankmachine1_source_payload_addr[20:7] != basesoc_bankmachine1_source_source_payload_addr[20:7])) begin
            basesoc_bankmachine1_auto_precharge <= (basesoc_bankmachine1_row_close == 1'd0);
        end
    end
end
assign basesoc_bankmachine1_syncfifo1_din = {basesoc_bankmachine1_fifo_in_last, basesoc_bankmachine1_fifo_in_first, basesoc_bankmachine1_fifo_in_payload_addr, basesoc_bankmachine1_fifo_in_payload_we};
assign {basesoc_bankmachine1_fifo_out_last, basesoc_bankmachine1_fifo_out_first, basesoc_bankmachine1_fifo_out_payload_addr, basesoc_bankmachine1_fifo_out_payload_we} = basesoc_bankmachine1_syncfifo1_dout;
assign basesoc_bankmachine1_sink_ready = basesoc_bankmachine1_syncfifo1_writable;
assign basesoc_bankmachine1_syncfifo1_we = basesoc_bankmachine1_sink_valid;
assign basesoc_bankmachine1_fifo_in_first = basesoc_bankmachine1_sink_first;
assign basesoc_bankmachine1_fifo_in_last = basesoc_bankmachine1_sink_last;
assign basesoc_bankmachine1_fifo_in_payload_we = basesoc_bankmachine1_sink_payload_we;
assign basesoc_bankmachine1_fifo_in_payload_addr = basesoc_bankmachine1_sink_payload_addr;
assign basesoc_bankmachine1_source_valid = basesoc_bankmachine1_syncfifo1_readable;
assign basesoc_bankmachine1_source_first = basesoc_bankmachine1_fifo_out_first;
assign basesoc_bankmachine1_source_last = basesoc_bankmachine1_fifo_out_last;
assign basesoc_bankmachine1_source_payload_we = basesoc_bankmachine1_fifo_out_payload_we;
assign basesoc_bankmachine1_source_payload_addr = basesoc_bankmachine1_fifo_out_payload_addr;
assign basesoc_bankmachine1_syncfifo1_re = basesoc_bankmachine1_source_ready;
always @(*) begin
    basesoc_bankmachine1_wrport_adr <= 3'd0;
    if (basesoc_bankmachine1_replace) begin
        basesoc_bankmachine1_wrport_adr <= (basesoc_bankmachine1_produce - 1'd1);
    end else begin
        basesoc_bankmachine1_wrport_adr <= basesoc_bankmachine1_produce;
    end
end
assign basesoc_bankmachine1_wrport_dat_w = basesoc_bankmachine1_syncfifo1_din;
assign basesoc_bankmachine1_wrport_we = (basesoc_bankmachine1_syncfifo1_we & (basesoc_bankmachine1_syncfifo1_writable | basesoc_bankmachine1_replace));
assign basesoc_bankmachine1_do_read = (basesoc_bankmachine1_syncfifo1_readable & basesoc_bankmachine1_syncfifo1_re);
assign basesoc_bankmachine1_rdport_adr = basesoc_bankmachine1_consume;
assign basesoc_bankmachine1_syncfifo1_dout = basesoc_bankmachine1_rdport_dat_r;
assign basesoc_bankmachine1_syncfifo1_writable = (basesoc_bankmachine1_level != 4'd8);
assign basesoc_bankmachine1_syncfifo1_readable = (basesoc_bankmachine1_level != 1'd0);
assign basesoc_bankmachine1_pipe_valid_sink_ready = ((~basesoc_bankmachine1_pipe_valid_source_valid) | basesoc_bankmachine1_pipe_valid_source_ready);
assign basesoc_bankmachine1_pipe_valid_sink_valid = basesoc_bankmachine1_sink_sink_valid;
assign basesoc_bankmachine1_sink_sink_ready = basesoc_bankmachine1_pipe_valid_sink_ready;
assign basesoc_bankmachine1_pipe_valid_sink_first = basesoc_bankmachine1_sink_sink_first;
assign basesoc_bankmachine1_pipe_valid_sink_last = basesoc_bankmachine1_sink_sink_last;
assign basesoc_bankmachine1_pipe_valid_sink_payload_we = basesoc_bankmachine1_sink_sink_payload_we;
assign basesoc_bankmachine1_pipe_valid_sink_payload_addr = basesoc_bankmachine1_sink_sink_payload_addr;
assign basesoc_bankmachine1_source_source_valid = basesoc_bankmachine1_pipe_valid_source_valid;
assign basesoc_bankmachine1_pipe_valid_source_ready = basesoc_bankmachine1_source_source_ready;
assign basesoc_bankmachine1_source_source_first = basesoc_bankmachine1_pipe_valid_source_first;
assign basesoc_bankmachine1_source_source_last = basesoc_bankmachine1_pipe_valid_source_last;
assign basesoc_bankmachine1_source_source_payload_we = basesoc_bankmachine1_pipe_valid_source_payload_we;
assign basesoc_bankmachine1_source_source_payload_addr = basesoc_bankmachine1_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine1_next_state <= 3'd0;
    basesoc_bankmachine1_cmd_payload_cas <= 1'd0;
    basesoc_bankmachine1_cmd_payload_is_cmd <= 1'd0;
    basesoc_bankmachine1_cmd_payload_is_read <= 1'd0;
    basesoc_bankmachine1_cmd_payload_is_write <= 1'd0;
    basesoc_bankmachine1_cmd_payload_ras <= 1'd0;
    basesoc_bankmachine1_cmd_payload_we <= 1'd0;
    basesoc_bankmachine1_cmd_valid <= 1'd0;
    basesoc_bankmachine1_refresh_gnt <= 1'd0;
    basesoc_bankmachine1_req_rdata_valid <= 1'd0;
    basesoc_bankmachine1_req_wdata_ready <= 1'd0;
    basesoc_bankmachine1_row_close <= 1'd0;
    basesoc_bankmachine1_row_col_n_addr_sel <= 1'd0;
    basesoc_bankmachine1_row_open <= 1'd0;
    bankmachine1_next_state <= bankmachine1_state;
    case (bankmachine1_state)
        1'd1: begin
            if ((basesoc_bankmachine1_twtpcon_ready & basesoc_bankmachine1_trascon_ready)) begin
                basesoc_bankmachine1_cmd_valid <= 1'd1;
                if (basesoc_bankmachine1_cmd_ready) begin
                    bankmachine1_next_state <= 3'd5;
                end
                basesoc_bankmachine1_cmd_payload_ras <= 1'd1;
                basesoc_bankmachine1_cmd_payload_we <= 1'd1;
                basesoc_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_bankmachine1_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_bankmachine1_twtpcon_ready & basesoc_bankmachine1_trascon_ready)) begin
                bankmachine1_next_state <= 3'd5;
            end
            basesoc_bankmachine1_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_bankmachine1_trccon_ready) begin
                basesoc_bankmachine1_row_col_n_addr_sel <= 1'd1;
                basesoc_bankmachine1_row_open <= 1'd1;
                basesoc_bankmachine1_cmd_valid <= 1'd1;
                basesoc_bankmachine1_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_bankmachine1_cmd_ready) begin
                    bankmachine1_next_state <= 3'd6;
                end
                basesoc_bankmachine1_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_bankmachine1_twtpcon_ready) begin
                basesoc_bankmachine1_refresh_gnt <= 1'd1;
            end
            basesoc_bankmachine1_row_close <= 1'd1;
            basesoc_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_bankmachine1_refresh_req)) begin
                bankmachine1_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine1_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine1_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_bankmachine1_refresh_req) begin
                bankmachine1_next_state <= 3'd4;
            end else begin
                if (basesoc_bankmachine1_source_source_valid) begin
                    if (basesoc_bankmachine1_row_opened) begin
                        if (basesoc_bankmachine1_row_hit) begin
                            basesoc_bankmachine1_cmd_valid <= 1'd1;
                            if (basesoc_bankmachine1_source_source_payload_we) begin
                                basesoc_bankmachine1_req_wdata_ready <= basesoc_bankmachine1_cmd_ready;
                                basesoc_bankmachine1_cmd_payload_is_write <= 1'd1;
                                basesoc_bankmachine1_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_bankmachine1_req_rdata_valid <= basesoc_bankmachine1_cmd_ready;
                                basesoc_bankmachine1_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_bankmachine1_cmd_payload_cas <= 1'd1;
                            if ((basesoc_bankmachine1_cmd_ready & basesoc_bankmachine1_auto_precharge)) begin
                                bankmachine1_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine1_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine1_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_bankmachine2_sink_valid = basesoc_bankmachine2_req_valid;
assign basesoc_bankmachine2_req_ready = basesoc_bankmachine2_sink_ready;
assign basesoc_bankmachine2_sink_payload_we = basesoc_bankmachine2_req_we;
assign basesoc_bankmachine2_sink_payload_addr = basesoc_bankmachine2_req_addr;
assign basesoc_bankmachine2_sink_sink_valid = basesoc_bankmachine2_source_valid;
assign basesoc_bankmachine2_source_ready = basesoc_bankmachine2_sink_sink_ready;
assign basesoc_bankmachine2_sink_sink_first = basesoc_bankmachine2_source_first;
assign basesoc_bankmachine2_sink_sink_last = basesoc_bankmachine2_source_last;
assign basesoc_bankmachine2_sink_sink_payload_we = basesoc_bankmachine2_source_payload_we;
assign basesoc_bankmachine2_sink_sink_payload_addr = basesoc_bankmachine2_source_payload_addr;
assign basesoc_bankmachine2_source_source_ready = (basesoc_bankmachine2_req_wdata_ready | basesoc_bankmachine2_req_rdata_valid);
assign basesoc_bankmachine2_req_lock = (basesoc_bankmachine2_source_valid | basesoc_bankmachine2_source_source_valid);
assign basesoc_bankmachine2_row_hit = (basesoc_bankmachine2_row == basesoc_bankmachine2_source_source_payload_addr[20:7]);
assign basesoc_bankmachine2_cmd_payload_ba = 2'd2;
always @(*) begin
    basesoc_bankmachine2_cmd_payload_a <= 14'd0;
    if (basesoc_bankmachine2_row_col_n_addr_sel) begin
        basesoc_bankmachine2_cmd_payload_a <= basesoc_bankmachine2_source_source_payload_addr[20:7];
    end else begin
        basesoc_bankmachine2_cmd_payload_a <= ((basesoc_bankmachine2_auto_precharge <<< 4'd10) | {basesoc_bankmachine2_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_bankmachine2_twtpcon_valid = ((basesoc_bankmachine2_cmd_valid & basesoc_bankmachine2_cmd_ready) & basesoc_bankmachine2_cmd_payload_is_write);
assign basesoc_bankmachine2_trccon_valid = ((basesoc_bankmachine2_cmd_valid & basesoc_bankmachine2_cmd_ready) & basesoc_bankmachine2_row_open);
assign basesoc_bankmachine2_trascon_valid = ((basesoc_bankmachine2_cmd_valid & basesoc_bankmachine2_cmd_ready) & basesoc_bankmachine2_row_open);
always @(*) begin
    basesoc_bankmachine2_auto_precharge <= 1'd0;
    if ((basesoc_bankmachine2_source_valid & basesoc_bankmachine2_source_source_valid)) begin
        if ((basesoc_bankmachine2_source_payload_addr[20:7] != basesoc_bankmachine2_source_source_payload_addr[20:7])) begin
            basesoc_bankmachine2_auto_precharge <= (basesoc_bankmachine2_row_close == 1'd0);
        end
    end
end
assign basesoc_bankmachine2_syncfifo2_din = {basesoc_bankmachine2_fifo_in_last, basesoc_bankmachine2_fifo_in_first, basesoc_bankmachine2_fifo_in_payload_addr, basesoc_bankmachine2_fifo_in_payload_we};
assign {basesoc_bankmachine2_fifo_out_last, basesoc_bankmachine2_fifo_out_first, basesoc_bankmachine2_fifo_out_payload_addr, basesoc_bankmachine2_fifo_out_payload_we} = basesoc_bankmachine2_syncfifo2_dout;
assign basesoc_bankmachine2_sink_ready = basesoc_bankmachine2_syncfifo2_writable;
assign basesoc_bankmachine2_syncfifo2_we = basesoc_bankmachine2_sink_valid;
assign basesoc_bankmachine2_fifo_in_first = basesoc_bankmachine2_sink_first;
assign basesoc_bankmachine2_fifo_in_last = basesoc_bankmachine2_sink_last;
assign basesoc_bankmachine2_fifo_in_payload_we = basesoc_bankmachine2_sink_payload_we;
assign basesoc_bankmachine2_fifo_in_payload_addr = basesoc_bankmachine2_sink_payload_addr;
assign basesoc_bankmachine2_source_valid = basesoc_bankmachine2_syncfifo2_readable;
assign basesoc_bankmachine2_source_first = basesoc_bankmachine2_fifo_out_first;
assign basesoc_bankmachine2_source_last = basesoc_bankmachine2_fifo_out_last;
assign basesoc_bankmachine2_source_payload_we = basesoc_bankmachine2_fifo_out_payload_we;
assign basesoc_bankmachine2_source_payload_addr = basesoc_bankmachine2_fifo_out_payload_addr;
assign basesoc_bankmachine2_syncfifo2_re = basesoc_bankmachine2_source_ready;
always @(*) begin
    basesoc_bankmachine2_wrport_adr <= 3'd0;
    if (basesoc_bankmachine2_replace) begin
        basesoc_bankmachine2_wrport_adr <= (basesoc_bankmachine2_produce - 1'd1);
    end else begin
        basesoc_bankmachine2_wrport_adr <= basesoc_bankmachine2_produce;
    end
end
assign basesoc_bankmachine2_wrport_dat_w = basesoc_bankmachine2_syncfifo2_din;
assign basesoc_bankmachine2_wrport_we = (basesoc_bankmachine2_syncfifo2_we & (basesoc_bankmachine2_syncfifo2_writable | basesoc_bankmachine2_replace));
assign basesoc_bankmachine2_do_read = (basesoc_bankmachine2_syncfifo2_readable & basesoc_bankmachine2_syncfifo2_re);
assign basesoc_bankmachine2_rdport_adr = basesoc_bankmachine2_consume;
assign basesoc_bankmachine2_syncfifo2_dout = basesoc_bankmachine2_rdport_dat_r;
assign basesoc_bankmachine2_syncfifo2_writable = (basesoc_bankmachine2_level != 4'd8);
assign basesoc_bankmachine2_syncfifo2_readable = (basesoc_bankmachine2_level != 1'd0);
assign basesoc_bankmachine2_pipe_valid_sink_ready = ((~basesoc_bankmachine2_pipe_valid_source_valid) | basesoc_bankmachine2_pipe_valid_source_ready);
assign basesoc_bankmachine2_pipe_valid_sink_valid = basesoc_bankmachine2_sink_sink_valid;
assign basesoc_bankmachine2_sink_sink_ready = basesoc_bankmachine2_pipe_valid_sink_ready;
assign basesoc_bankmachine2_pipe_valid_sink_first = basesoc_bankmachine2_sink_sink_first;
assign basesoc_bankmachine2_pipe_valid_sink_last = basesoc_bankmachine2_sink_sink_last;
assign basesoc_bankmachine2_pipe_valid_sink_payload_we = basesoc_bankmachine2_sink_sink_payload_we;
assign basesoc_bankmachine2_pipe_valid_sink_payload_addr = basesoc_bankmachine2_sink_sink_payload_addr;
assign basesoc_bankmachine2_source_source_valid = basesoc_bankmachine2_pipe_valid_source_valid;
assign basesoc_bankmachine2_pipe_valid_source_ready = basesoc_bankmachine2_source_source_ready;
assign basesoc_bankmachine2_source_source_first = basesoc_bankmachine2_pipe_valid_source_first;
assign basesoc_bankmachine2_source_source_last = basesoc_bankmachine2_pipe_valid_source_last;
assign basesoc_bankmachine2_source_source_payload_we = basesoc_bankmachine2_pipe_valid_source_payload_we;
assign basesoc_bankmachine2_source_source_payload_addr = basesoc_bankmachine2_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine2_next_state <= 3'd0;
    basesoc_bankmachine2_cmd_payload_cas <= 1'd0;
    basesoc_bankmachine2_cmd_payload_is_cmd <= 1'd0;
    basesoc_bankmachine2_cmd_payload_is_read <= 1'd0;
    basesoc_bankmachine2_cmd_payload_is_write <= 1'd0;
    basesoc_bankmachine2_cmd_payload_ras <= 1'd0;
    basesoc_bankmachine2_cmd_payload_we <= 1'd0;
    basesoc_bankmachine2_cmd_valid <= 1'd0;
    basesoc_bankmachine2_refresh_gnt <= 1'd0;
    basesoc_bankmachine2_req_rdata_valid <= 1'd0;
    basesoc_bankmachine2_req_wdata_ready <= 1'd0;
    basesoc_bankmachine2_row_close <= 1'd0;
    basesoc_bankmachine2_row_col_n_addr_sel <= 1'd0;
    basesoc_bankmachine2_row_open <= 1'd0;
    bankmachine2_next_state <= bankmachine2_state;
    case (bankmachine2_state)
        1'd1: begin
            if ((basesoc_bankmachine2_twtpcon_ready & basesoc_bankmachine2_trascon_ready)) begin
                basesoc_bankmachine2_cmd_valid <= 1'd1;
                if (basesoc_bankmachine2_cmd_ready) begin
                    bankmachine2_next_state <= 3'd5;
                end
                basesoc_bankmachine2_cmd_payload_ras <= 1'd1;
                basesoc_bankmachine2_cmd_payload_we <= 1'd1;
                basesoc_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_bankmachine2_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_bankmachine2_twtpcon_ready & basesoc_bankmachine2_trascon_ready)) begin
                bankmachine2_next_state <= 3'd5;
            end
            basesoc_bankmachine2_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_bankmachine2_trccon_ready) begin
                basesoc_bankmachine2_row_col_n_addr_sel <= 1'd1;
                basesoc_bankmachine2_row_open <= 1'd1;
                basesoc_bankmachine2_cmd_valid <= 1'd1;
                basesoc_bankmachine2_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_bankmachine2_cmd_ready) begin
                    bankmachine2_next_state <= 3'd6;
                end
                basesoc_bankmachine2_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_bankmachine2_twtpcon_ready) begin
                basesoc_bankmachine2_refresh_gnt <= 1'd1;
            end
            basesoc_bankmachine2_row_close <= 1'd1;
            basesoc_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_bankmachine2_refresh_req)) begin
                bankmachine2_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine2_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine2_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_bankmachine2_refresh_req) begin
                bankmachine2_next_state <= 3'd4;
            end else begin
                if (basesoc_bankmachine2_source_source_valid) begin
                    if (basesoc_bankmachine2_row_opened) begin
                        if (basesoc_bankmachine2_row_hit) begin
                            basesoc_bankmachine2_cmd_valid <= 1'd1;
                            if (basesoc_bankmachine2_source_source_payload_we) begin
                                basesoc_bankmachine2_req_wdata_ready <= basesoc_bankmachine2_cmd_ready;
                                basesoc_bankmachine2_cmd_payload_is_write <= 1'd1;
                                basesoc_bankmachine2_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_bankmachine2_req_rdata_valid <= basesoc_bankmachine2_cmd_ready;
                                basesoc_bankmachine2_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_bankmachine2_cmd_payload_cas <= 1'd1;
                            if ((basesoc_bankmachine2_cmd_ready & basesoc_bankmachine2_auto_precharge)) begin
                                bankmachine2_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine2_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine2_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_bankmachine3_sink_valid = basesoc_bankmachine3_req_valid;
assign basesoc_bankmachine3_req_ready = basesoc_bankmachine3_sink_ready;
assign basesoc_bankmachine3_sink_payload_we = basesoc_bankmachine3_req_we;
assign basesoc_bankmachine3_sink_payload_addr = basesoc_bankmachine3_req_addr;
assign basesoc_bankmachine3_sink_sink_valid = basesoc_bankmachine3_source_valid;
assign basesoc_bankmachine3_source_ready = basesoc_bankmachine3_sink_sink_ready;
assign basesoc_bankmachine3_sink_sink_first = basesoc_bankmachine3_source_first;
assign basesoc_bankmachine3_sink_sink_last = basesoc_bankmachine3_source_last;
assign basesoc_bankmachine3_sink_sink_payload_we = basesoc_bankmachine3_source_payload_we;
assign basesoc_bankmachine3_sink_sink_payload_addr = basesoc_bankmachine3_source_payload_addr;
assign basesoc_bankmachine3_source_source_ready = (basesoc_bankmachine3_req_wdata_ready | basesoc_bankmachine3_req_rdata_valid);
assign basesoc_bankmachine3_req_lock = (basesoc_bankmachine3_source_valid | basesoc_bankmachine3_source_source_valid);
assign basesoc_bankmachine3_row_hit = (basesoc_bankmachine3_row == basesoc_bankmachine3_source_source_payload_addr[20:7]);
assign basesoc_bankmachine3_cmd_payload_ba = 2'd3;
always @(*) begin
    basesoc_bankmachine3_cmd_payload_a <= 14'd0;
    if (basesoc_bankmachine3_row_col_n_addr_sel) begin
        basesoc_bankmachine3_cmd_payload_a <= basesoc_bankmachine3_source_source_payload_addr[20:7];
    end else begin
        basesoc_bankmachine3_cmd_payload_a <= ((basesoc_bankmachine3_auto_precharge <<< 4'd10) | {basesoc_bankmachine3_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_bankmachine3_twtpcon_valid = ((basesoc_bankmachine3_cmd_valid & basesoc_bankmachine3_cmd_ready) & basesoc_bankmachine3_cmd_payload_is_write);
assign basesoc_bankmachine3_trccon_valid = ((basesoc_bankmachine3_cmd_valid & basesoc_bankmachine3_cmd_ready) & basesoc_bankmachine3_row_open);
assign basesoc_bankmachine3_trascon_valid = ((basesoc_bankmachine3_cmd_valid & basesoc_bankmachine3_cmd_ready) & basesoc_bankmachine3_row_open);
always @(*) begin
    basesoc_bankmachine3_auto_precharge <= 1'd0;
    if ((basesoc_bankmachine3_source_valid & basesoc_bankmachine3_source_source_valid)) begin
        if ((basesoc_bankmachine3_source_payload_addr[20:7] != basesoc_bankmachine3_source_source_payload_addr[20:7])) begin
            basesoc_bankmachine3_auto_precharge <= (basesoc_bankmachine3_row_close == 1'd0);
        end
    end
end
assign basesoc_bankmachine3_syncfifo3_din = {basesoc_bankmachine3_fifo_in_last, basesoc_bankmachine3_fifo_in_first, basesoc_bankmachine3_fifo_in_payload_addr, basesoc_bankmachine3_fifo_in_payload_we};
assign {basesoc_bankmachine3_fifo_out_last, basesoc_bankmachine3_fifo_out_first, basesoc_bankmachine3_fifo_out_payload_addr, basesoc_bankmachine3_fifo_out_payload_we} = basesoc_bankmachine3_syncfifo3_dout;
assign basesoc_bankmachine3_sink_ready = basesoc_bankmachine3_syncfifo3_writable;
assign basesoc_bankmachine3_syncfifo3_we = basesoc_bankmachine3_sink_valid;
assign basesoc_bankmachine3_fifo_in_first = basesoc_bankmachine3_sink_first;
assign basesoc_bankmachine3_fifo_in_last = basesoc_bankmachine3_sink_last;
assign basesoc_bankmachine3_fifo_in_payload_we = basesoc_bankmachine3_sink_payload_we;
assign basesoc_bankmachine3_fifo_in_payload_addr = basesoc_bankmachine3_sink_payload_addr;
assign basesoc_bankmachine3_source_valid = basesoc_bankmachine3_syncfifo3_readable;
assign basesoc_bankmachine3_source_first = basesoc_bankmachine3_fifo_out_first;
assign basesoc_bankmachine3_source_last = basesoc_bankmachine3_fifo_out_last;
assign basesoc_bankmachine3_source_payload_we = basesoc_bankmachine3_fifo_out_payload_we;
assign basesoc_bankmachine3_source_payload_addr = basesoc_bankmachine3_fifo_out_payload_addr;
assign basesoc_bankmachine3_syncfifo3_re = basesoc_bankmachine3_source_ready;
always @(*) begin
    basesoc_bankmachine3_wrport_adr <= 3'd0;
    if (basesoc_bankmachine3_replace) begin
        basesoc_bankmachine3_wrport_adr <= (basesoc_bankmachine3_produce - 1'd1);
    end else begin
        basesoc_bankmachine3_wrport_adr <= basesoc_bankmachine3_produce;
    end
end
assign basesoc_bankmachine3_wrport_dat_w = basesoc_bankmachine3_syncfifo3_din;
assign basesoc_bankmachine3_wrport_we = (basesoc_bankmachine3_syncfifo3_we & (basesoc_bankmachine3_syncfifo3_writable | basesoc_bankmachine3_replace));
assign basesoc_bankmachine3_do_read = (basesoc_bankmachine3_syncfifo3_readable & basesoc_bankmachine3_syncfifo3_re);
assign basesoc_bankmachine3_rdport_adr = basesoc_bankmachine3_consume;
assign basesoc_bankmachine3_syncfifo3_dout = basesoc_bankmachine3_rdport_dat_r;
assign basesoc_bankmachine3_syncfifo3_writable = (basesoc_bankmachine3_level != 4'd8);
assign basesoc_bankmachine3_syncfifo3_readable = (basesoc_bankmachine3_level != 1'd0);
assign basesoc_bankmachine3_pipe_valid_sink_ready = ((~basesoc_bankmachine3_pipe_valid_source_valid) | basesoc_bankmachine3_pipe_valid_source_ready);
assign basesoc_bankmachine3_pipe_valid_sink_valid = basesoc_bankmachine3_sink_sink_valid;
assign basesoc_bankmachine3_sink_sink_ready = basesoc_bankmachine3_pipe_valid_sink_ready;
assign basesoc_bankmachine3_pipe_valid_sink_first = basesoc_bankmachine3_sink_sink_first;
assign basesoc_bankmachine3_pipe_valid_sink_last = basesoc_bankmachine3_sink_sink_last;
assign basesoc_bankmachine3_pipe_valid_sink_payload_we = basesoc_bankmachine3_sink_sink_payload_we;
assign basesoc_bankmachine3_pipe_valid_sink_payload_addr = basesoc_bankmachine3_sink_sink_payload_addr;
assign basesoc_bankmachine3_source_source_valid = basesoc_bankmachine3_pipe_valid_source_valid;
assign basesoc_bankmachine3_pipe_valid_source_ready = basesoc_bankmachine3_source_source_ready;
assign basesoc_bankmachine3_source_source_first = basesoc_bankmachine3_pipe_valid_source_first;
assign basesoc_bankmachine3_source_source_last = basesoc_bankmachine3_pipe_valid_source_last;
assign basesoc_bankmachine3_source_source_payload_we = basesoc_bankmachine3_pipe_valid_source_payload_we;
assign basesoc_bankmachine3_source_source_payload_addr = basesoc_bankmachine3_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine3_next_state <= 3'd0;
    basesoc_bankmachine3_cmd_payload_cas <= 1'd0;
    basesoc_bankmachine3_cmd_payload_is_cmd <= 1'd0;
    basesoc_bankmachine3_cmd_payload_is_read <= 1'd0;
    basesoc_bankmachine3_cmd_payload_is_write <= 1'd0;
    basesoc_bankmachine3_cmd_payload_ras <= 1'd0;
    basesoc_bankmachine3_cmd_payload_we <= 1'd0;
    basesoc_bankmachine3_cmd_valid <= 1'd0;
    basesoc_bankmachine3_refresh_gnt <= 1'd0;
    basesoc_bankmachine3_req_rdata_valid <= 1'd0;
    basesoc_bankmachine3_req_wdata_ready <= 1'd0;
    basesoc_bankmachine3_row_close <= 1'd0;
    basesoc_bankmachine3_row_col_n_addr_sel <= 1'd0;
    basesoc_bankmachine3_row_open <= 1'd0;
    bankmachine3_next_state <= bankmachine3_state;
    case (bankmachine3_state)
        1'd1: begin
            if ((basesoc_bankmachine3_twtpcon_ready & basesoc_bankmachine3_trascon_ready)) begin
                basesoc_bankmachine3_cmd_valid <= 1'd1;
                if (basesoc_bankmachine3_cmd_ready) begin
                    bankmachine3_next_state <= 3'd5;
                end
                basesoc_bankmachine3_cmd_payload_ras <= 1'd1;
                basesoc_bankmachine3_cmd_payload_we <= 1'd1;
                basesoc_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_bankmachine3_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_bankmachine3_twtpcon_ready & basesoc_bankmachine3_trascon_ready)) begin
                bankmachine3_next_state <= 3'd5;
            end
            basesoc_bankmachine3_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_bankmachine3_trccon_ready) begin
                basesoc_bankmachine3_row_col_n_addr_sel <= 1'd1;
                basesoc_bankmachine3_row_open <= 1'd1;
                basesoc_bankmachine3_cmd_valid <= 1'd1;
                basesoc_bankmachine3_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_bankmachine3_cmd_ready) begin
                    bankmachine3_next_state <= 3'd6;
                end
                basesoc_bankmachine3_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_bankmachine3_twtpcon_ready) begin
                basesoc_bankmachine3_refresh_gnt <= 1'd1;
            end
            basesoc_bankmachine3_row_close <= 1'd1;
            basesoc_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_bankmachine3_refresh_req)) begin
                bankmachine3_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine3_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine3_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_bankmachine3_refresh_req) begin
                bankmachine3_next_state <= 3'd4;
            end else begin
                if (basesoc_bankmachine3_source_source_valid) begin
                    if (basesoc_bankmachine3_row_opened) begin
                        if (basesoc_bankmachine3_row_hit) begin
                            basesoc_bankmachine3_cmd_valid <= 1'd1;
                            if (basesoc_bankmachine3_source_source_payload_we) begin
                                basesoc_bankmachine3_req_wdata_ready <= basesoc_bankmachine3_cmd_ready;
                                basesoc_bankmachine3_cmd_payload_is_write <= 1'd1;
                                basesoc_bankmachine3_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_bankmachine3_req_rdata_valid <= basesoc_bankmachine3_cmd_ready;
                                basesoc_bankmachine3_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_bankmachine3_cmd_payload_cas <= 1'd1;
                            if ((basesoc_bankmachine3_cmd_ready & basesoc_bankmachine3_auto_precharge)) begin
                                bankmachine3_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine3_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine3_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_bankmachine4_sink_valid = basesoc_bankmachine4_req_valid;
assign basesoc_bankmachine4_req_ready = basesoc_bankmachine4_sink_ready;
assign basesoc_bankmachine4_sink_payload_we = basesoc_bankmachine4_req_we;
assign basesoc_bankmachine4_sink_payload_addr = basesoc_bankmachine4_req_addr;
assign basesoc_bankmachine4_sink_sink_valid = basesoc_bankmachine4_source_valid;
assign basesoc_bankmachine4_source_ready = basesoc_bankmachine4_sink_sink_ready;
assign basesoc_bankmachine4_sink_sink_first = basesoc_bankmachine4_source_first;
assign basesoc_bankmachine4_sink_sink_last = basesoc_bankmachine4_source_last;
assign basesoc_bankmachine4_sink_sink_payload_we = basesoc_bankmachine4_source_payload_we;
assign basesoc_bankmachine4_sink_sink_payload_addr = basesoc_bankmachine4_source_payload_addr;
assign basesoc_bankmachine4_source_source_ready = (basesoc_bankmachine4_req_wdata_ready | basesoc_bankmachine4_req_rdata_valid);
assign basesoc_bankmachine4_req_lock = (basesoc_bankmachine4_source_valid | basesoc_bankmachine4_source_source_valid);
assign basesoc_bankmachine4_row_hit = (basesoc_bankmachine4_row == basesoc_bankmachine4_source_source_payload_addr[20:7]);
assign basesoc_bankmachine4_cmd_payload_ba = 3'd4;
always @(*) begin
    basesoc_bankmachine4_cmd_payload_a <= 14'd0;
    if (basesoc_bankmachine4_row_col_n_addr_sel) begin
        basesoc_bankmachine4_cmd_payload_a <= basesoc_bankmachine4_source_source_payload_addr[20:7];
    end else begin
        basesoc_bankmachine4_cmd_payload_a <= ((basesoc_bankmachine4_auto_precharge <<< 4'd10) | {basesoc_bankmachine4_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_bankmachine4_twtpcon_valid = ((basesoc_bankmachine4_cmd_valid & basesoc_bankmachine4_cmd_ready) & basesoc_bankmachine4_cmd_payload_is_write);
assign basesoc_bankmachine4_trccon_valid = ((basesoc_bankmachine4_cmd_valid & basesoc_bankmachine4_cmd_ready) & basesoc_bankmachine4_row_open);
assign basesoc_bankmachine4_trascon_valid = ((basesoc_bankmachine4_cmd_valid & basesoc_bankmachine4_cmd_ready) & basesoc_bankmachine4_row_open);
always @(*) begin
    basesoc_bankmachine4_auto_precharge <= 1'd0;
    if ((basesoc_bankmachine4_source_valid & basesoc_bankmachine4_source_source_valid)) begin
        if ((basesoc_bankmachine4_source_payload_addr[20:7] != basesoc_bankmachine4_source_source_payload_addr[20:7])) begin
            basesoc_bankmachine4_auto_precharge <= (basesoc_bankmachine4_row_close == 1'd0);
        end
    end
end
assign basesoc_bankmachine4_syncfifo4_din = {basesoc_bankmachine4_fifo_in_last, basesoc_bankmachine4_fifo_in_first, basesoc_bankmachine4_fifo_in_payload_addr, basesoc_bankmachine4_fifo_in_payload_we};
assign {basesoc_bankmachine4_fifo_out_last, basesoc_bankmachine4_fifo_out_first, basesoc_bankmachine4_fifo_out_payload_addr, basesoc_bankmachine4_fifo_out_payload_we} = basesoc_bankmachine4_syncfifo4_dout;
assign basesoc_bankmachine4_sink_ready = basesoc_bankmachine4_syncfifo4_writable;
assign basesoc_bankmachine4_syncfifo4_we = basesoc_bankmachine4_sink_valid;
assign basesoc_bankmachine4_fifo_in_first = basesoc_bankmachine4_sink_first;
assign basesoc_bankmachine4_fifo_in_last = basesoc_bankmachine4_sink_last;
assign basesoc_bankmachine4_fifo_in_payload_we = basesoc_bankmachine4_sink_payload_we;
assign basesoc_bankmachine4_fifo_in_payload_addr = basesoc_bankmachine4_sink_payload_addr;
assign basesoc_bankmachine4_source_valid = basesoc_bankmachine4_syncfifo4_readable;
assign basesoc_bankmachine4_source_first = basesoc_bankmachine4_fifo_out_first;
assign basesoc_bankmachine4_source_last = basesoc_bankmachine4_fifo_out_last;
assign basesoc_bankmachine4_source_payload_we = basesoc_bankmachine4_fifo_out_payload_we;
assign basesoc_bankmachine4_source_payload_addr = basesoc_bankmachine4_fifo_out_payload_addr;
assign basesoc_bankmachine4_syncfifo4_re = basesoc_bankmachine4_source_ready;
always @(*) begin
    basesoc_bankmachine4_wrport_adr <= 3'd0;
    if (basesoc_bankmachine4_replace) begin
        basesoc_bankmachine4_wrport_adr <= (basesoc_bankmachine4_produce - 1'd1);
    end else begin
        basesoc_bankmachine4_wrport_adr <= basesoc_bankmachine4_produce;
    end
end
assign basesoc_bankmachine4_wrport_dat_w = basesoc_bankmachine4_syncfifo4_din;
assign basesoc_bankmachine4_wrport_we = (basesoc_bankmachine4_syncfifo4_we & (basesoc_bankmachine4_syncfifo4_writable | basesoc_bankmachine4_replace));
assign basesoc_bankmachine4_do_read = (basesoc_bankmachine4_syncfifo4_readable & basesoc_bankmachine4_syncfifo4_re);
assign basesoc_bankmachine4_rdport_adr = basesoc_bankmachine4_consume;
assign basesoc_bankmachine4_syncfifo4_dout = basesoc_bankmachine4_rdport_dat_r;
assign basesoc_bankmachine4_syncfifo4_writable = (basesoc_bankmachine4_level != 4'd8);
assign basesoc_bankmachine4_syncfifo4_readable = (basesoc_bankmachine4_level != 1'd0);
assign basesoc_bankmachine4_pipe_valid_sink_ready = ((~basesoc_bankmachine4_pipe_valid_source_valid) | basesoc_bankmachine4_pipe_valid_source_ready);
assign basesoc_bankmachine4_pipe_valid_sink_valid = basesoc_bankmachine4_sink_sink_valid;
assign basesoc_bankmachine4_sink_sink_ready = basesoc_bankmachine4_pipe_valid_sink_ready;
assign basesoc_bankmachine4_pipe_valid_sink_first = basesoc_bankmachine4_sink_sink_first;
assign basesoc_bankmachine4_pipe_valid_sink_last = basesoc_bankmachine4_sink_sink_last;
assign basesoc_bankmachine4_pipe_valid_sink_payload_we = basesoc_bankmachine4_sink_sink_payload_we;
assign basesoc_bankmachine4_pipe_valid_sink_payload_addr = basesoc_bankmachine4_sink_sink_payload_addr;
assign basesoc_bankmachine4_source_source_valid = basesoc_bankmachine4_pipe_valid_source_valid;
assign basesoc_bankmachine4_pipe_valid_source_ready = basesoc_bankmachine4_source_source_ready;
assign basesoc_bankmachine4_source_source_first = basesoc_bankmachine4_pipe_valid_source_first;
assign basesoc_bankmachine4_source_source_last = basesoc_bankmachine4_pipe_valid_source_last;
assign basesoc_bankmachine4_source_source_payload_we = basesoc_bankmachine4_pipe_valid_source_payload_we;
assign basesoc_bankmachine4_source_source_payload_addr = basesoc_bankmachine4_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine4_next_state <= 3'd0;
    basesoc_bankmachine4_cmd_payload_cas <= 1'd0;
    basesoc_bankmachine4_cmd_payload_is_cmd <= 1'd0;
    basesoc_bankmachine4_cmd_payload_is_read <= 1'd0;
    basesoc_bankmachine4_cmd_payload_is_write <= 1'd0;
    basesoc_bankmachine4_cmd_payload_ras <= 1'd0;
    basesoc_bankmachine4_cmd_payload_we <= 1'd0;
    basesoc_bankmachine4_cmd_valid <= 1'd0;
    basesoc_bankmachine4_refresh_gnt <= 1'd0;
    basesoc_bankmachine4_req_rdata_valid <= 1'd0;
    basesoc_bankmachine4_req_wdata_ready <= 1'd0;
    basesoc_bankmachine4_row_close <= 1'd0;
    basesoc_bankmachine4_row_col_n_addr_sel <= 1'd0;
    basesoc_bankmachine4_row_open <= 1'd0;
    bankmachine4_next_state <= bankmachine4_state;
    case (bankmachine4_state)
        1'd1: begin
            if ((basesoc_bankmachine4_twtpcon_ready & basesoc_bankmachine4_trascon_ready)) begin
                basesoc_bankmachine4_cmd_valid <= 1'd1;
                if (basesoc_bankmachine4_cmd_ready) begin
                    bankmachine4_next_state <= 3'd5;
                end
                basesoc_bankmachine4_cmd_payload_ras <= 1'd1;
                basesoc_bankmachine4_cmd_payload_we <= 1'd1;
                basesoc_bankmachine4_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_bankmachine4_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_bankmachine4_twtpcon_ready & basesoc_bankmachine4_trascon_ready)) begin
                bankmachine4_next_state <= 3'd5;
            end
            basesoc_bankmachine4_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_bankmachine4_trccon_ready) begin
                basesoc_bankmachine4_row_col_n_addr_sel <= 1'd1;
                basesoc_bankmachine4_row_open <= 1'd1;
                basesoc_bankmachine4_cmd_valid <= 1'd1;
                basesoc_bankmachine4_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_bankmachine4_cmd_ready) begin
                    bankmachine4_next_state <= 3'd6;
                end
                basesoc_bankmachine4_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_bankmachine4_twtpcon_ready) begin
                basesoc_bankmachine4_refresh_gnt <= 1'd1;
            end
            basesoc_bankmachine4_row_close <= 1'd1;
            basesoc_bankmachine4_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_bankmachine4_refresh_req)) begin
                bankmachine4_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine4_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine4_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_bankmachine4_refresh_req) begin
                bankmachine4_next_state <= 3'd4;
            end else begin
                if (basesoc_bankmachine4_source_source_valid) begin
                    if (basesoc_bankmachine4_row_opened) begin
                        if (basesoc_bankmachine4_row_hit) begin
                            basesoc_bankmachine4_cmd_valid <= 1'd1;
                            if (basesoc_bankmachine4_source_source_payload_we) begin
                                basesoc_bankmachine4_req_wdata_ready <= basesoc_bankmachine4_cmd_ready;
                                basesoc_bankmachine4_cmd_payload_is_write <= 1'd1;
                                basesoc_bankmachine4_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_bankmachine4_req_rdata_valid <= basesoc_bankmachine4_cmd_ready;
                                basesoc_bankmachine4_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_bankmachine4_cmd_payload_cas <= 1'd1;
                            if ((basesoc_bankmachine4_cmd_ready & basesoc_bankmachine4_auto_precharge)) begin
                                bankmachine4_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine4_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine4_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_bankmachine5_sink_valid = basesoc_bankmachine5_req_valid;
assign basesoc_bankmachine5_req_ready = basesoc_bankmachine5_sink_ready;
assign basesoc_bankmachine5_sink_payload_we = basesoc_bankmachine5_req_we;
assign basesoc_bankmachine5_sink_payload_addr = basesoc_bankmachine5_req_addr;
assign basesoc_bankmachine5_sink_sink_valid = basesoc_bankmachine5_source_valid;
assign basesoc_bankmachine5_source_ready = basesoc_bankmachine5_sink_sink_ready;
assign basesoc_bankmachine5_sink_sink_first = basesoc_bankmachine5_source_first;
assign basesoc_bankmachine5_sink_sink_last = basesoc_bankmachine5_source_last;
assign basesoc_bankmachine5_sink_sink_payload_we = basesoc_bankmachine5_source_payload_we;
assign basesoc_bankmachine5_sink_sink_payload_addr = basesoc_bankmachine5_source_payload_addr;
assign basesoc_bankmachine5_source_source_ready = (basesoc_bankmachine5_req_wdata_ready | basesoc_bankmachine5_req_rdata_valid);
assign basesoc_bankmachine5_req_lock = (basesoc_bankmachine5_source_valid | basesoc_bankmachine5_source_source_valid);
assign basesoc_bankmachine5_row_hit = (basesoc_bankmachine5_row == basesoc_bankmachine5_source_source_payload_addr[20:7]);
assign basesoc_bankmachine5_cmd_payload_ba = 3'd5;
always @(*) begin
    basesoc_bankmachine5_cmd_payload_a <= 14'd0;
    if (basesoc_bankmachine5_row_col_n_addr_sel) begin
        basesoc_bankmachine5_cmd_payload_a <= basesoc_bankmachine5_source_source_payload_addr[20:7];
    end else begin
        basesoc_bankmachine5_cmd_payload_a <= ((basesoc_bankmachine5_auto_precharge <<< 4'd10) | {basesoc_bankmachine5_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_bankmachine5_twtpcon_valid = ((basesoc_bankmachine5_cmd_valid & basesoc_bankmachine5_cmd_ready) & basesoc_bankmachine5_cmd_payload_is_write);
assign basesoc_bankmachine5_trccon_valid = ((basesoc_bankmachine5_cmd_valid & basesoc_bankmachine5_cmd_ready) & basesoc_bankmachine5_row_open);
assign basesoc_bankmachine5_trascon_valid = ((basesoc_bankmachine5_cmd_valid & basesoc_bankmachine5_cmd_ready) & basesoc_bankmachine5_row_open);
always @(*) begin
    basesoc_bankmachine5_auto_precharge <= 1'd0;
    if ((basesoc_bankmachine5_source_valid & basesoc_bankmachine5_source_source_valid)) begin
        if ((basesoc_bankmachine5_source_payload_addr[20:7] != basesoc_bankmachine5_source_source_payload_addr[20:7])) begin
            basesoc_bankmachine5_auto_precharge <= (basesoc_bankmachine5_row_close == 1'd0);
        end
    end
end
assign basesoc_bankmachine5_syncfifo5_din = {basesoc_bankmachine5_fifo_in_last, basesoc_bankmachine5_fifo_in_first, basesoc_bankmachine5_fifo_in_payload_addr, basesoc_bankmachine5_fifo_in_payload_we};
assign {basesoc_bankmachine5_fifo_out_last, basesoc_bankmachine5_fifo_out_first, basesoc_bankmachine5_fifo_out_payload_addr, basesoc_bankmachine5_fifo_out_payload_we} = basesoc_bankmachine5_syncfifo5_dout;
assign basesoc_bankmachine5_sink_ready = basesoc_bankmachine5_syncfifo5_writable;
assign basesoc_bankmachine5_syncfifo5_we = basesoc_bankmachine5_sink_valid;
assign basesoc_bankmachine5_fifo_in_first = basesoc_bankmachine5_sink_first;
assign basesoc_bankmachine5_fifo_in_last = basesoc_bankmachine5_sink_last;
assign basesoc_bankmachine5_fifo_in_payload_we = basesoc_bankmachine5_sink_payload_we;
assign basesoc_bankmachine5_fifo_in_payload_addr = basesoc_bankmachine5_sink_payload_addr;
assign basesoc_bankmachine5_source_valid = basesoc_bankmachine5_syncfifo5_readable;
assign basesoc_bankmachine5_source_first = basesoc_bankmachine5_fifo_out_first;
assign basesoc_bankmachine5_source_last = basesoc_bankmachine5_fifo_out_last;
assign basesoc_bankmachine5_source_payload_we = basesoc_bankmachine5_fifo_out_payload_we;
assign basesoc_bankmachine5_source_payload_addr = basesoc_bankmachine5_fifo_out_payload_addr;
assign basesoc_bankmachine5_syncfifo5_re = basesoc_bankmachine5_source_ready;
always @(*) begin
    basesoc_bankmachine5_wrport_adr <= 3'd0;
    if (basesoc_bankmachine5_replace) begin
        basesoc_bankmachine5_wrport_adr <= (basesoc_bankmachine5_produce - 1'd1);
    end else begin
        basesoc_bankmachine5_wrport_adr <= basesoc_bankmachine5_produce;
    end
end
assign basesoc_bankmachine5_wrport_dat_w = basesoc_bankmachine5_syncfifo5_din;
assign basesoc_bankmachine5_wrport_we = (basesoc_bankmachine5_syncfifo5_we & (basesoc_bankmachine5_syncfifo5_writable | basesoc_bankmachine5_replace));
assign basesoc_bankmachine5_do_read = (basesoc_bankmachine5_syncfifo5_readable & basesoc_bankmachine5_syncfifo5_re);
assign basesoc_bankmachine5_rdport_adr = basesoc_bankmachine5_consume;
assign basesoc_bankmachine5_syncfifo5_dout = basesoc_bankmachine5_rdport_dat_r;
assign basesoc_bankmachine5_syncfifo5_writable = (basesoc_bankmachine5_level != 4'd8);
assign basesoc_bankmachine5_syncfifo5_readable = (basesoc_bankmachine5_level != 1'd0);
assign basesoc_bankmachine5_pipe_valid_sink_ready = ((~basesoc_bankmachine5_pipe_valid_source_valid) | basesoc_bankmachine5_pipe_valid_source_ready);
assign basesoc_bankmachine5_pipe_valid_sink_valid = basesoc_bankmachine5_sink_sink_valid;
assign basesoc_bankmachine5_sink_sink_ready = basesoc_bankmachine5_pipe_valid_sink_ready;
assign basesoc_bankmachine5_pipe_valid_sink_first = basesoc_bankmachine5_sink_sink_first;
assign basesoc_bankmachine5_pipe_valid_sink_last = basesoc_bankmachine5_sink_sink_last;
assign basesoc_bankmachine5_pipe_valid_sink_payload_we = basesoc_bankmachine5_sink_sink_payload_we;
assign basesoc_bankmachine5_pipe_valid_sink_payload_addr = basesoc_bankmachine5_sink_sink_payload_addr;
assign basesoc_bankmachine5_source_source_valid = basesoc_bankmachine5_pipe_valid_source_valid;
assign basesoc_bankmachine5_pipe_valid_source_ready = basesoc_bankmachine5_source_source_ready;
assign basesoc_bankmachine5_source_source_first = basesoc_bankmachine5_pipe_valid_source_first;
assign basesoc_bankmachine5_source_source_last = basesoc_bankmachine5_pipe_valid_source_last;
assign basesoc_bankmachine5_source_source_payload_we = basesoc_bankmachine5_pipe_valid_source_payload_we;
assign basesoc_bankmachine5_source_source_payload_addr = basesoc_bankmachine5_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine5_next_state <= 3'd0;
    basesoc_bankmachine5_cmd_payload_cas <= 1'd0;
    basesoc_bankmachine5_cmd_payload_is_cmd <= 1'd0;
    basesoc_bankmachine5_cmd_payload_is_read <= 1'd0;
    basesoc_bankmachine5_cmd_payload_is_write <= 1'd0;
    basesoc_bankmachine5_cmd_payload_ras <= 1'd0;
    basesoc_bankmachine5_cmd_payload_we <= 1'd0;
    basesoc_bankmachine5_cmd_valid <= 1'd0;
    basesoc_bankmachine5_refresh_gnt <= 1'd0;
    basesoc_bankmachine5_req_rdata_valid <= 1'd0;
    basesoc_bankmachine5_req_wdata_ready <= 1'd0;
    basesoc_bankmachine5_row_close <= 1'd0;
    basesoc_bankmachine5_row_col_n_addr_sel <= 1'd0;
    basesoc_bankmachine5_row_open <= 1'd0;
    bankmachine5_next_state <= bankmachine5_state;
    case (bankmachine5_state)
        1'd1: begin
            if ((basesoc_bankmachine5_twtpcon_ready & basesoc_bankmachine5_trascon_ready)) begin
                basesoc_bankmachine5_cmd_valid <= 1'd1;
                if (basesoc_bankmachine5_cmd_ready) begin
                    bankmachine5_next_state <= 3'd5;
                end
                basesoc_bankmachine5_cmd_payload_ras <= 1'd1;
                basesoc_bankmachine5_cmd_payload_we <= 1'd1;
                basesoc_bankmachine5_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_bankmachine5_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_bankmachine5_twtpcon_ready & basesoc_bankmachine5_trascon_ready)) begin
                bankmachine5_next_state <= 3'd5;
            end
            basesoc_bankmachine5_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_bankmachine5_trccon_ready) begin
                basesoc_bankmachine5_row_col_n_addr_sel <= 1'd1;
                basesoc_bankmachine5_row_open <= 1'd1;
                basesoc_bankmachine5_cmd_valid <= 1'd1;
                basesoc_bankmachine5_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_bankmachine5_cmd_ready) begin
                    bankmachine5_next_state <= 3'd6;
                end
                basesoc_bankmachine5_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_bankmachine5_twtpcon_ready) begin
                basesoc_bankmachine5_refresh_gnt <= 1'd1;
            end
            basesoc_bankmachine5_row_close <= 1'd1;
            basesoc_bankmachine5_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_bankmachine5_refresh_req)) begin
                bankmachine5_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine5_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine5_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_bankmachine5_refresh_req) begin
                bankmachine5_next_state <= 3'd4;
            end else begin
                if (basesoc_bankmachine5_source_source_valid) begin
                    if (basesoc_bankmachine5_row_opened) begin
                        if (basesoc_bankmachine5_row_hit) begin
                            basesoc_bankmachine5_cmd_valid <= 1'd1;
                            if (basesoc_bankmachine5_source_source_payload_we) begin
                                basesoc_bankmachine5_req_wdata_ready <= basesoc_bankmachine5_cmd_ready;
                                basesoc_bankmachine5_cmd_payload_is_write <= 1'd1;
                                basesoc_bankmachine5_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_bankmachine5_req_rdata_valid <= basesoc_bankmachine5_cmd_ready;
                                basesoc_bankmachine5_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_bankmachine5_cmd_payload_cas <= 1'd1;
                            if ((basesoc_bankmachine5_cmd_ready & basesoc_bankmachine5_auto_precharge)) begin
                                bankmachine5_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine5_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine5_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_bankmachine6_sink_valid = basesoc_bankmachine6_req_valid;
assign basesoc_bankmachine6_req_ready = basesoc_bankmachine6_sink_ready;
assign basesoc_bankmachine6_sink_payload_we = basesoc_bankmachine6_req_we;
assign basesoc_bankmachine6_sink_payload_addr = basesoc_bankmachine6_req_addr;
assign basesoc_bankmachine6_sink_sink_valid = basesoc_bankmachine6_source_valid;
assign basesoc_bankmachine6_source_ready = basesoc_bankmachine6_sink_sink_ready;
assign basesoc_bankmachine6_sink_sink_first = basesoc_bankmachine6_source_first;
assign basesoc_bankmachine6_sink_sink_last = basesoc_bankmachine6_source_last;
assign basesoc_bankmachine6_sink_sink_payload_we = basesoc_bankmachine6_source_payload_we;
assign basesoc_bankmachine6_sink_sink_payload_addr = basesoc_bankmachine6_source_payload_addr;
assign basesoc_bankmachine6_source_source_ready = (basesoc_bankmachine6_req_wdata_ready | basesoc_bankmachine6_req_rdata_valid);
assign basesoc_bankmachine6_req_lock = (basesoc_bankmachine6_source_valid | basesoc_bankmachine6_source_source_valid);
assign basesoc_bankmachine6_row_hit = (basesoc_bankmachine6_row == basesoc_bankmachine6_source_source_payload_addr[20:7]);
assign basesoc_bankmachine6_cmd_payload_ba = 3'd6;
always @(*) begin
    basesoc_bankmachine6_cmd_payload_a <= 14'd0;
    if (basesoc_bankmachine6_row_col_n_addr_sel) begin
        basesoc_bankmachine6_cmd_payload_a <= basesoc_bankmachine6_source_source_payload_addr[20:7];
    end else begin
        basesoc_bankmachine6_cmd_payload_a <= ((basesoc_bankmachine6_auto_precharge <<< 4'd10) | {basesoc_bankmachine6_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_bankmachine6_twtpcon_valid = ((basesoc_bankmachine6_cmd_valid & basesoc_bankmachine6_cmd_ready) & basesoc_bankmachine6_cmd_payload_is_write);
assign basesoc_bankmachine6_trccon_valid = ((basesoc_bankmachine6_cmd_valid & basesoc_bankmachine6_cmd_ready) & basesoc_bankmachine6_row_open);
assign basesoc_bankmachine6_trascon_valid = ((basesoc_bankmachine6_cmd_valid & basesoc_bankmachine6_cmd_ready) & basesoc_bankmachine6_row_open);
always @(*) begin
    basesoc_bankmachine6_auto_precharge <= 1'd0;
    if ((basesoc_bankmachine6_source_valid & basesoc_bankmachine6_source_source_valid)) begin
        if ((basesoc_bankmachine6_source_payload_addr[20:7] != basesoc_bankmachine6_source_source_payload_addr[20:7])) begin
            basesoc_bankmachine6_auto_precharge <= (basesoc_bankmachine6_row_close == 1'd0);
        end
    end
end
assign basesoc_bankmachine6_syncfifo6_din = {basesoc_bankmachine6_fifo_in_last, basesoc_bankmachine6_fifo_in_first, basesoc_bankmachine6_fifo_in_payload_addr, basesoc_bankmachine6_fifo_in_payload_we};
assign {basesoc_bankmachine6_fifo_out_last, basesoc_bankmachine6_fifo_out_first, basesoc_bankmachine6_fifo_out_payload_addr, basesoc_bankmachine6_fifo_out_payload_we} = basesoc_bankmachine6_syncfifo6_dout;
assign basesoc_bankmachine6_sink_ready = basesoc_bankmachine6_syncfifo6_writable;
assign basesoc_bankmachine6_syncfifo6_we = basesoc_bankmachine6_sink_valid;
assign basesoc_bankmachine6_fifo_in_first = basesoc_bankmachine6_sink_first;
assign basesoc_bankmachine6_fifo_in_last = basesoc_bankmachine6_sink_last;
assign basesoc_bankmachine6_fifo_in_payload_we = basesoc_bankmachine6_sink_payload_we;
assign basesoc_bankmachine6_fifo_in_payload_addr = basesoc_bankmachine6_sink_payload_addr;
assign basesoc_bankmachine6_source_valid = basesoc_bankmachine6_syncfifo6_readable;
assign basesoc_bankmachine6_source_first = basesoc_bankmachine6_fifo_out_first;
assign basesoc_bankmachine6_source_last = basesoc_bankmachine6_fifo_out_last;
assign basesoc_bankmachine6_source_payload_we = basesoc_bankmachine6_fifo_out_payload_we;
assign basesoc_bankmachine6_source_payload_addr = basesoc_bankmachine6_fifo_out_payload_addr;
assign basesoc_bankmachine6_syncfifo6_re = basesoc_bankmachine6_source_ready;
always @(*) begin
    basesoc_bankmachine6_wrport_adr <= 3'd0;
    if (basesoc_bankmachine6_replace) begin
        basesoc_bankmachine6_wrport_adr <= (basesoc_bankmachine6_produce - 1'd1);
    end else begin
        basesoc_bankmachine6_wrport_adr <= basesoc_bankmachine6_produce;
    end
end
assign basesoc_bankmachine6_wrport_dat_w = basesoc_bankmachine6_syncfifo6_din;
assign basesoc_bankmachine6_wrport_we = (basesoc_bankmachine6_syncfifo6_we & (basesoc_bankmachine6_syncfifo6_writable | basesoc_bankmachine6_replace));
assign basesoc_bankmachine6_do_read = (basesoc_bankmachine6_syncfifo6_readable & basesoc_bankmachine6_syncfifo6_re);
assign basesoc_bankmachine6_rdport_adr = basesoc_bankmachine6_consume;
assign basesoc_bankmachine6_syncfifo6_dout = basesoc_bankmachine6_rdport_dat_r;
assign basesoc_bankmachine6_syncfifo6_writable = (basesoc_bankmachine6_level != 4'd8);
assign basesoc_bankmachine6_syncfifo6_readable = (basesoc_bankmachine6_level != 1'd0);
assign basesoc_bankmachine6_pipe_valid_sink_ready = ((~basesoc_bankmachine6_pipe_valid_source_valid) | basesoc_bankmachine6_pipe_valid_source_ready);
assign basesoc_bankmachine6_pipe_valid_sink_valid = basesoc_bankmachine6_sink_sink_valid;
assign basesoc_bankmachine6_sink_sink_ready = basesoc_bankmachine6_pipe_valid_sink_ready;
assign basesoc_bankmachine6_pipe_valid_sink_first = basesoc_bankmachine6_sink_sink_first;
assign basesoc_bankmachine6_pipe_valid_sink_last = basesoc_bankmachine6_sink_sink_last;
assign basesoc_bankmachine6_pipe_valid_sink_payload_we = basesoc_bankmachine6_sink_sink_payload_we;
assign basesoc_bankmachine6_pipe_valid_sink_payload_addr = basesoc_bankmachine6_sink_sink_payload_addr;
assign basesoc_bankmachine6_source_source_valid = basesoc_bankmachine6_pipe_valid_source_valid;
assign basesoc_bankmachine6_pipe_valid_source_ready = basesoc_bankmachine6_source_source_ready;
assign basesoc_bankmachine6_source_source_first = basesoc_bankmachine6_pipe_valid_source_first;
assign basesoc_bankmachine6_source_source_last = basesoc_bankmachine6_pipe_valid_source_last;
assign basesoc_bankmachine6_source_source_payload_we = basesoc_bankmachine6_pipe_valid_source_payload_we;
assign basesoc_bankmachine6_source_source_payload_addr = basesoc_bankmachine6_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine6_next_state <= 3'd0;
    basesoc_bankmachine6_cmd_payload_cas <= 1'd0;
    basesoc_bankmachine6_cmd_payload_is_cmd <= 1'd0;
    basesoc_bankmachine6_cmd_payload_is_read <= 1'd0;
    basesoc_bankmachine6_cmd_payload_is_write <= 1'd0;
    basesoc_bankmachine6_cmd_payload_ras <= 1'd0;
    basesoc_bankmachine6_cmd_payload_we <= 1'd0;
    basesoc_bankmachine6_cmd_valid <= 1'd0;
    basesoc_bankmachine6_refresh_gnt <= 1'd0;
    basesoc_bankmachine6_req_rdata_valid <= 1'd0;
    basesoc_bankmachine6_req_wdata_ready <= 1'd0;
    basesoc_bankmachine6_row_close <= 1'd0;
    basesoc_bankmachine6_row_col_n_addr_sel <= 1'd0;
    basesoc_bankmachine6_row_open <= 1'd0;
    bankmachine6_next_state <= bankmachine6_state;
    case (bankmachine6_state)
        1'd1: begin
            if ((basesoc_bankmachine6_twtpcon_ready & basesoc_bankmachine6_trascon_ready)) begin
                basesoc_bankmachine6_cmd_valid <= 1'd1;
                if (basesoc_bankmachine6_cmd_ready) begin
                    bankmachine6_next_state <= 3'd5;
                end
                basesoc_bankmachine6_cmd_payload_ras <= 1'd1;
                basesoc_bankmachine6_cmd_payload_we <= 1'd1;
                basesoc_bankmachine6_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_bankmachine6_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_bankmachine6_twtpcon_ready & basesoc_bankmachine6_trascon_ready)) begin
                bankmachine6_next_state <= 3'd5;
            end
            basesoc_bankmachine6_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_bankmachine6_trccon_ready) begin
                basesoc_bankmachine6_row_col_n_addr_sel <= 1'd1;
                basesoc_bankmachine6_row_open <= 1'd1;
                basesoc_bankmachine6_cmd_valid <= 1'd1;
                basesoc_bankmachine6_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_bankmachine6_cmd_ready) begin
                    bankmachine6_next_state <= 3'd6;
                end
                basesoc_bankmachine6_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_bankmachine6_twtpcon_ready) begin
                basesoc_bankmachine6_refresh_gnt <= 1'd1;
            end
            basesoc_bankmachine6_row_close <= 1'd1;
            basesoc_bankmachine6_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_bankmachine6_refresh_req)) begin
                bankmachine6_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine6_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine6_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_bankmachine6_refresh_req) begin
                bankmachine6_next_state <= 3'd4;
            end else begin
                if (basesoc_bankmachine6_source_source_valid) begin
                    if (basesoc_bankmachine6_row_opened) begin
                        if (basesoc_bankmachine6_row_hit) begin
                            basesoc_bankmachine6_cmd_valid <= 1'd1;
                            if (basesoc_bankmachine6_source_source_payload_we) begin
                                basesoc_bankmachine6_req_wdata_ready <= basesoc_bankmachine6_cmd_ready;
                                basesoc_bankmachine6_cmd_payload_is_write <= 1'd1;
                                basesoc_bankmachine6_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_bankmachine6_req_rdata_valid <= basesoc_bankmachine6_cmd_ready;
                                basesoc_bankmachine6_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_bankmachine6_cmd_payload_cas <= 1'd1;
                            if ((basesoc_bankmachine6_cmd_ready & basesoc_bankmachine6_auto_precharge)) begin
                                bankmachine6_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine6_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine6_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_bankmachine7_sink_valid = basesoc_bankmachine7_req_valid;
assign basesoc_bankmachine7_req_ready = basesoc_bankmachine7_sink_ready;
assign basesoc_bankmachine7_sink_payload_we = basesoc_bankmachine7_req_we;
assign basesoc_bankmachine7_sink_payload_addr = basesoc_bankmachine7_req_addr;
assign basesoc_bankmachine7_sink_sink_valid = basesoc_bankmachine7_source_valid;
assign basesoc_bankmachine7_source_ready = basesoc_bankmachine7_sink_sink_ready;
assign basesoc_bankmachine7_sink_sink_first = basesoc_bankmachine7_source_first;
assign basesoc_bankmachine7_sink_sink_last = basesoc_bankmachine7_source_last;
assign basesoc_bankmachine7_sink_sink_payload_we = basesoc_bankmachine7_source_payload_we;
assign basesoc_bankmachine7_sink_sink_payload_addr = basesoc_bankmachine7_source_payload_addr;
assign basesoc_bankmachine7_source_source_ready = (basesoc_bankmachine7_req_wdata_ready | basesoc_bankmachine7_req_rdata_valid);
assign basesoc_bankmachine7_req_lock = (basesoc_bankmachine7_source_valid | basesoc_bankmachine7_source_source_valid);
assign basesoc_bankmachine7_row_hit = (basesoc_bankmachine7_row == basesoc_bankmachine7_source_source_payload_addr[20:7]);
assign basesoc_bankmachine7_cmd_payload_ba = 3'd7;
always @(*) begin
    basesoc_bankmachine7_cmd_payload_a <= 14'd0;
    if (basesoc_bankmachine7_row_col_n_addr_sel) begin
        basesoc_bankmachine7_cmd_payload_a <= basesoc_bankmachine7_source_source_payload_addr[20:7];
    end else begin
        basesoc_bankmachine7_cmd_payload_a <= ((basesoc_bankmachine7_auto_precharge <<< 4'd10) | {basesoc_bankmachine7_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_bankmachine7_twtpcon_valid = ((basesoc_bankmachine7_cmd_valid & basesoc_bankmachine7_cmd_ready) & basesoc_bankmachine7_cmd_payload_is_write);
assign basesoc_bankmachine7_trccon_valid = ((basesoc_bankmachine7_cmd_valid & basesoc_bankmachine7_cmd_ready) & basesoc_bankmachine7_row_open);
assign basesoc_bankmachine7_trascon_valid = ((basesoc_bankmachine7_cmd_valid & basesoc_bankmachine7_cmd_ready) & basesoc_bankmachine7_row_open);
always @(*) begin
    basesoc_bankmachine7_auto_precharge <= 1'd0;
    if ((basesoc_bankmachine7_source_valid & basesoc_bankmachine7_source_source_valid)) begin
        if ((basesoc_bankmachine7_source_payload_addr[20:7] != basesoc_bankmachine7_source_source_payload_addr[20:7])) begin
            basesoc_bankmachine7_auto_precharge <= (basesoc_bankmachine7_row_close == 1'd0);
        end
    end
end
assign basesoc_bankmachine7_syncfifo7_din = {basesoc_bankmachine7_fifo_in_last, basesoc_bankmachine7_fifo_in_first, basesoc_bankmachine7_fifo_in_payload_addr, basesoc_bankmachine7_fifo_in_payload_we};
assign {basesoc_bankmachine7_fifo_out_last, basesoc_bankmachine7_fifo_out_first, basesoc_bankmachine7_fifo_out_payload_addr, basesoc_bankmachine7_fifo_out_payload_we} = basesoc_bankmachine7_syncfifo7_dout;
assign basesoc_bankmachine7_sink_ready = basesoc_bankmachine7_syncfifo7_writable;
assign basesoc_bankmachine7_syncfifo7_we = basesoc_bankmachine7_sink_valid;
assign basesoc_bankmachine7_fifo_in_first = basesoc_bankmachine7_sink_first;
assign basesoc_bankmachine7_fifo_in_last = basesoc_bankmachine7_sink_last;
assign basesoc_bankmachine7_fifo_in_payload_we = basesoc_bankmachine7_sink_payload_we;
assign basesoc_bankmachine7_fifo_in_payload_addr = basesoc_bankmachine7_sink_payload_addr;
assign basesoc_bankmachine7_source_valid = basesoc_bankmachine7_syncfifo7_readable;
assign basesoc_bankmachine7_source_first = basesoc_bankmachine7_fifo_out_first;
assign basesoc_bankmachine7_source_last = basesoc_bankmachine7_fifo_out_last;
assign basesoc_bankmachine7_source_payload_we = basesoc_bankmachine7_fifo_out_payload_we;
assign basesoc_bankmachine7_source_payload_addr = basesoc_bankmachine7_fifo_out_payload_addr;
assign basesoc_bankmachine7_syncfifo7_re = basesoc_bankmachine7_source_ready;
always @(*) begin
    basesoc_bankmachine7_wrport_adr <= 3'd0;
    if (basesoc_bankmachine7_replace) begin
        basesoc_bankmachine7_wrport_adr <= (basesoc_bankmachine7_produce - 1'd1);
    end else begin
        basesoc_bankmachine7_wrport_adr <= basesoc_bankmachine7_produce;
    end
end
assign basesoc_bankmachine7_wrport_dat_w = basesoc_bankmachine7_syncfifo7_din;
assign basesoc_bankmachine7_wrport_we = (basesoc_bankmachine7_syncfifo7_we & (basesoc_bankmachine7_syncfifo7_writable | basesoc_bankmachine7_replace));
assign basesoc_bankmachine7_do_read = (basesoc_bankmachine7_syncfifo7_readable & basesoc_bankmachine7_syncfifo7_re);
assign basesoc_bankmachine7_rdport_adr = basesoc_bankmachine7_consume;
assign basesoc_bankmachine7_syncfifo7_dout = basesoc_bankmachine7_rdport_dat_r;
assign basesoc_bankmachine7_syncfifo7_writable = (basesoc_bankmachine7_level != 4'd8);
assign basesoc_bankmachine7_syncfifo7_readable = (basesoc_bankmachine7_level != 1'd0);
assign basesoc_bankmachine7_pipe_valid_sink_ready = ((~basesoc_bankmachine7_pipe_valid_source_valid) | basesoc_bankmachine7_pipe_valid_source_ready);
assign basesoc_bankmachine7_pipe_valid_sink_valid = basesoc_bankmachine7_sink_sink_valid;
assign basesoc_bankmachine7_sink_sink_ready = basesoc_bankmachine7_pipe_valid_sink_ready;
assign basesoc_bankmachine7_pipe_valid_sink_first = basesoc_bankmachine7_sink_sink_first;
assign basesoc_bankmachine7_pipe_valid_sink_last = basesoc_bankmachine7_sink_sink_last;
assign basesoc_bankmachine7_pipe_valid_sink_payload_we = basesoc_bankmachine7_sink_sink_payload_we;
assign basesoc_bankmachine7_pipe_valid_sink_payload_addr = basesoc_bankmachine7_sink_sink_payload_addr;
assign basesoc_bankmachine7_source_source_valid = basesoc_bankmachine7_pipe_valid_source_valid;
assign basesoc_bankmachine7_pipe_valid_source_ready = basesoc_bankmachine7_source_source_ready;
assign basesoc_bankmachine7_source_source_first = basesoc_bankmachine7_pipe_valid_source_first;
assign basesoc_bankmachine7_source_source_last = basesoc_bankmachine7_pipe_valid_source_last;
assign basesoc_bankmachine7_source_source_payload_we = basesoc_bankmachine7_pipe_valid_source_payload_we;
assign basesoc_bankmachine7_source_source_payload_addr = basesoc_bankmachine7_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine7_next_state <= 3'd0;
    basesoc_bankmachine7_cmd_payload_cas <= 1'd0;
    basesoc_bankmachine7_cmd_payload_is_cmd <= 1'd0;
    basesoc_bankmachine7_cmd_payload_is_read <= 1'd0;
    basesoc_bankmachine7_cmd_payload_is_write <= 1'd0;
    basesoc_bankmachine7_cmd_payload_ras <= 1'd0;
    basesoc_bankmachine7_cmd_payload_we <= 1'd0;
    basesoc_bankmachine7_cmd_valid <= 1'd0;
    basesoc_bankmachine7_refresh_gnt <= 1'd0;
    basesoc_bankmachine7_req_rdata_valid <= 1'd0;
    basesoc_bankmachine7_req_wdata_ready <= 1'd0;
    basesoc_bankmachine7_row_close <= 1'd0;
    basesoc_bankmachine7_row_col_n_addr_sel <= 1'd0;
    basesoc_bankmachine7_row_open <= 1'd0;
    bankmachine7_next_state <= bankmachine7_state;
    case (bankmachine7_state)
        1'd1: begin
            if ((basesoc_bankmachine7_twtpcon_ready & basesoc_bankmachine7_trascon_ready)) begin
                basesoc_bankmachine7_cmd_valid <= 1'd1;
                if (basesoc_bankmachine7_cmd_ready) begin
                    bankmachine7_next_state <= 3'd5;
                end
                basesoc_bankmachine7_cmd_payload_ras <= 1'd1;
                basesoc_bankmachine7_cmd_payload_we <= 1'd1;
                basesoc_bankmachine7_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_bankmachine7_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_bankmachine7_twtpcon_ready & basesoc_bankmachine7_trascon_ready)) begin
                bankmachine7_next_state <= 3'd5;
            end
            basesoc_bankmachine7_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_bankmachine7_trccon_ready) begin
                basesoc_bankmachine7_row_col_n_addr_sel <= 1'd1;
                basesoc_bankmachine7_row_open <= 1'd1;
                basesoc_bankmachine7_cmd_valid <= 1'd1;
                basesoc_bankmachine7_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_bankmachine7_cmd_ready) begin
                    bankmachine7_next_state <= 3'd6;
                end
                basesoc_bankmachine7_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_bankmachine7_twtpcon_ready) begin
                basesoc_bankmachine7_refresh_gnt <= 1'd1;
            end
            basesoc_bankmachine7_row_close <= 1'd1;
            basesoc_bankmachine7_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_bankmachine7_refresh_req)) begin
                bankmachine7_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine7_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine7_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_bankmachine7_refresh_req) begin
                bankmachine7_next_state <= 3'd4;
            end else begin
                if (basesoc_bankmachine7_source_source_valid) begin
                    if (basesoc_bankmachine7_row_opened) begin
                        if (basesoc_bankmachine7_row_hit) begin
                            basesoc_bankmachine7_cmd_valid <= 1'd1;
                            if (basesoc_bankmachine7_source_source_payload_we) begin
                                basesoc_bankmachine7_req_wdata_ready <= basesoc_bankmachine7_cmd_ready;
                                basesoc_bankmachine7_cmd_payload_is_write <= 1'd1;
                                basesoc_bankmachine7_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_bankmachine7_req_rdata_valid <= basesoc_bankmachine7_cmd_ready;
                                basesoc_bankmachine7_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_bankmachine7_cmd_payload_cas <= 1'd1;
                            if ((basesoc_bankmachine7_cmd_ready & basesoc_bankmachine7_auto_precharge)) begin
                                bankmachine7_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine7_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine7_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_trrdcon_valid = ((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & ((basesoc_choose_cmd_cmd_payload_ras & (~basesoc_choose_cmd_cmd_payload_cas)) & (~basesoc_choose_cmd_cmd_payload_we)));
assign basesoc_tfawcon_valid = ((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & ((basesoc_choose_cmd_cmd_payload_ras & (~basesoc_choose_cmd_cmd_payload_cas)) & (~basesoc_choose_cmd_cmd_payload_we)));
assign basesoc_ras_allowed = (basesoc_trrdcon_ready & basesoc_tfawcon_ready);
assign basesoc_tccdcon_valid = ((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & (basesoc_choose_req_cmd_payload_is_write | basesoc_choose_req_cmd_payload_is_read));
assign basesoc_cas_allowed = basesoc_tccdcon_ready;
assign basesoc_twtrcon_valid = ((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & basesoc_choose_req_cmd_payload_is_write);
assign basesoc_read_available = ((((((((basesoc_bankmachine0_cmd_valid & basesoc_bankmachine0_cmd_payload_is_read) | (basesoc_bankmachine1_cmd_valid & basesoc_bankmachine1_cmd_payload_is_read)) | (basesoc_bankmachine2_cmd_valid & basesoc_bankmachine2_cmd_payload_is_read)) | (basesoc_bankmachine3_cmd_valid & basesoc_bankmachine3_cmd_payload_is_read)) | (basesoc_bankmachine4_cmd_valid & basesoc_bankmachine4_cmd_payload_is_read)) | (basesoc_bankmachine5_cmd_valid & basesoc_bankmachine5_cmd_payload_is_read)) | (basesoc_bankmachine6_cmd_valid & basesoc_bankmachine6_cmd_payload_is_read)) | (basesoc_bankmachine7_cmd_valid & basesoc_bankmachine7_cmd_payload_is_read));
assign basesoc_write_available = ((((((((basesoc_bankmachine0_cmd_valid & basesoc_bankmachine0_cmd_payload_is_write) | (basesoc_bankmachine1_cmd_valid & basesoc_bankmachine1_cmd_payload_is_write)) | (basesoc_bankmachine2_cmd_valid & basesoc_bankmachine2_cmd_payload_is_write)) | (basesoc_bankmachine3_cmd_valid & basesoc_bankmachine3_cmd_payload_is_write)) | (basesoc_bankmachine4_cmd_valid & basesoc_bankmachine4_cmd_payload_is_write)) | (basesoc_bankmachine5_cmd_valid & basesoc_bankmachine5_cmd_payload_is_write)) | (basesoc_bankmachine6_cmd_valid & basesoc_bankmachine6_cmd_payload_is_write)) | (basesoc_bankmachine7_cmd_valid & basesoc_bankmachine7_cmd_payload_is_write));
assign basesoc_max_time0 = (basesoc_time0 == 1'd0);
assign basesoc_max_time1 = (basesoc_time1 == 1'd0);
assign basesoc_bankmachine0_refresh_req = basesoc_cmd_valid;
assign basesoc_bankmachine1_refresh_req = basesoc_cmd_valid;
assign basesoc_bankmachine2_refresh_req = basesoc_cmd_valid;
assign basesoc_bankmachine3_refresh_req = basesoc_cmd_valid;
assign basesoc_bankmachine4_refresh_req = basesoc_cmd_valid;
assign basesoc_bankmachine5_refresh_req = basesoc_cmd_valid;
assign basesoc_bankmachine6_refresh_req = basesoc_cmd_valid;
assign basesoc_bankmachine7_refresh_req = basesoc_cmd_valid;
assign basesoc_go_to_refresh = (((((((basesoc_bankmachine0_refresh_gnt & basesoc_bankmachine1_refresh_gnt) & basesoc_bankmachine2_refresh_gnt) & basesoc_bankmachine3_refresh_gnt) & basesoc_bankmachine4_refresh_gnt) & basesoc_bankmachine5_refresh_gnt) & basesoc_bankmachine6_refresh_gnt) & basesoc_bankmachine7_refresh_gnt);
assign basesoc_interface_rdata = {basesoc_dfi_p1_rddata, basesoc_dfi_p0_rddata};
assign {basesoc_dfi_p1_wrdata, basesoc_dfi_p0_wrdata} = basesoc_interface_wdata;
assign {basesoc_dfi_p1_wrdata_mask, basesoc_dfi_p0_wrdata_mask} = (~basesoc_interface_wdata_we);
always @(*) begin
    basesoc_choose_cmd_valids <= 8'd0;
    basesoc_choose_cmd_valids[0] <= (basesoc_bankmachine0_cmd_valid & (((basesoc_bankmachine0_cmd_payload_is_cmd & basesoc_choose_cmd_want_cmds) & ((~((basesoc_bankmachine0_cmd_payload_ras & (~basesoc_bankmachine0_cmd_payload_cas)) & (~basesoc_bankmachine0_cmd_payload_we))) | basesoc_choose_cmd_want_activates)) | ((basesoc_bankmachine0_cmd_payload_is_read == basesoc_choose_cmd_want_reads) & (basesoc_bankmachine0_cmd_payload_is_write == basesoc_choose_cmd_want_writes))));
    basesoc_choose_cmd_valids[1] <= (basesoc_bankmachine1_cmd_valid & (((basesoc_bankmachine1_cmd_payload_is_cmd & basesoc_choose_cmd_want_cmds) & ((~((basesoc_bankmachine1_cmd_payload_ras & (~basesoc_bankmachine1_cmd_payload_cas)) & (~basesoc_bankmachine1_cmd_payload_we))) | basesoc_choose_cmd_want_activates)) | ((basesoc_bankmachine1_cmd_payload_is_read == basesoc_choose_cmd_want_reads) & (basesoc_bankmachine1_cmd_payload_is_write == basesoc_choose_cmd_want_writes))));
    basesoc_choose_cmd_valids[2] <= (basesoc_bankmachine2_cmd_valid & (((basesoc_bankmachine2_cmd_payload_is_cmd & basesoc_choose_cmd_want_cmds) & ((~((basesoc_bankmachine2_cmd_payload_ras & (~basesoc_bankmachine2_cmd_payload_cas)) & (~basesoc_bankmachine2_cmd_payload_we))) | basesoc_choose_cmd_want_activates)) | ((basesoc_bankmachine2_cmd_payload_is_read == basesoc_choose_cmd_want_reads) & (basesoc_bankmachine2_cmd_payload_is_write == basesoc_choose_cmd_want_writes))));
    basesoc_choose_cmd_valids[3] <= (basesoc_bankmachine3_cmd_valid & (((basesoc_bankmachine3_cmd_payload_is_cmd & basesoc_choose_cmd_want_cmds) & ((~((basesoc_bankmachine3_cmd_payload_ras & (~basesoc_bankmachine3_cmd_payload_cas)) & (~basesoc_bankmachine3_cmd_payload_we))) | basesoc_choose_cmd_want_activates)) | ((basesoc_bankmachine3_cmd_payload_is_read == basesoc_choose_cmd_want_reads) & (basesoc_bankmachine3_cmd_payload_is_write == basesoc_choose_cmd_want_writes))));
    basesoc_choose_cmd_valids[4] <= (basesoc_bankmachine4_cmd_valid & (((basesoc_bankmachine4_cmd_payload_is_cmd & basesoc_choose_cmd_want_cmds) & ((~((basesoc_bankmachine4_cmd_payload_ras & (~basesoc_bankmachine4_cmd_payload_cas)) & (~basesoc_bankmachine4_cmd_payload_we))) | basesoc_choose_cmd_want_activates)) | ((basesoc_bankmachine4_cmd_payload_is_read == basesoc_choose_cmd_want_reads) & (basesoc_bankmachine4_cmd_payload_is_write == basesoc_choose_cmd_want_writes))));
    basesoc_choose_cmd_valids[5] <= (basesoc_bankmachine5_cmd_valid & (((basesoc_bankmachine5_cmd_payload_is_cmd & basesoc_choose_cmd_want_cmds) & ((~((basesoc_bankmachine5_cmd_payload_ras & (~basesoc_bankmachine5_cmd_payload_cas)) & (~basesoc_bankmachine5_cmd_payload_we))) | basesoc_choose_cmd_want_activates)) | ((basesoc_bankmachine5_cmd_payload_is_read == basesoc_choose_cmd_want_reads) & (basesoc_bankmachine5_cmd_payload_is_write == basesoc_choose_cmd_want_writes))));
    basesoc_choose_cmd_valids[6] <= (basesoc_bankmachine6_cmd_valid & (((basesoc_bankmachine6_cmd_payload_is_cmd & basesoc_choose_cmd_want_cmds) & ((~((basesoc_bankmachine6_cmd_payload_ras & (~basesoc_bankmachine6_cmd_payload_cas)) & (~basesoc_bankmachine6_cmd_payload_we))) | basesoc_choose_cmd_want_activates)) | ((basesoc_bankmachine6_cmd_payload_is_read == basesoc_choose_cmd_want_reads) & (basesoc_bankmachine6_cmd_payload_is_write == basesoc_choose_cmd_want_writes))));
    basesoc_choose_cmd_valids[7] <= (basesoc_bankmachine7_cmd_valid & (((basesoc_bankmachine7_cmd_payload_is_cmd & basesoc_choose_cmd_want_cmds) & ((~((basesoc_bankmachine7_cmd_payload_ras & (~basesoc_bankmachine7_cmd_payload_cas)) & (~basesoc_bankmachine7_cmd_payload_we))) | basesoc_choose_cmd_want_activates)) | ((basesoc_bankmachine7_cmd_payload_is_read == basesoc_choose_cmd_want_reads) & (basesoc_bankmachine7_cmd_payload_is_write == basesoc_choose_cmd_want_writes))));
end
assign basesoc_choose_cmd_request = basesoc_choose_cmd_valids;
assign basesoc_choose_cmd_cmd_valid = rhs_self8;
assign basesoc_choose_cmd_cmd_payload_a = rhs_self9;
assign basesoc_choose_cmd_cmd_payload_ba = rhs_self10;
assign basesoc_choose_cmd_cmd_payload_is_read = rhs_self11;
assign basesoc_choose_cmd_cmd_payload_is_write = rhs_self12;
assign basesoc_choose_cmd_cmd_payload_is_cmd = rhs_self13;
always @(*) begin
    basesoc_choose_cmd_cmd_payload_cas <= 1'd0;
    if (basesoc_choose_cmd_cmd_valid) begin
        basesoc_choose_cmd_cmd_payload_cas <= t_self0;
    end
end
always @(*) begin
    basesoc_choose_cmd_cmd_payload_ras <= 1'd0;
    if (basesoc_choose_cmd_cmd_valid) begin
        basesoc_choose_cmd_cmd_payload_ras <= t_self1;
    end
end
always @(*) begin
    basesoc_choose_cmd_cmd_payload_we <= 1'd0;
    if (basesoc_choose_cmd_cmd_valid) begin
        basesoc_choose_cmd_cmd_payload_we <= t_self2;
    end
end
assign basesoc_choose_cmd_ce = (basesoc_choose_cmd_cmd_ready | (~basesoc_choose_cmd_cmd_valid));
always @(*) begin
    basesoc_choose_req_valids <= 8'd0;
    basesoc_choose_req_valids[0] <= (basesoc_bankmachine0_cmd_valid & (((basesoc_bankmachine0_cmd_payload_is_cmd & basesoc_choose_req_want_cmds) & ((~((basesoc_bankmachine0_cmd_payload_ras & (~basesoc_bankmachine0_cmd_payload_cas)) & (~basesoc_bankmachine0_cmd_payload_we))) | basesoc_choose_req_want_activates)) | ((basesoc_bankmachine0_cmd_payload_is_read == basesoc_choose_req_want_reads) & (basesoc_bankmachine0_cmd_payload_is_write == basesoc_choose_req_want_writes))));
    basesoc_choose_req_valids[1] <= (basesoc_bankmachine1_cmd_valid & (((basesoc_bankmachine1_cmd_payload_is_cmd & basesoc_choose_req_want_cmds) & ((~((basesoc_bankmachine1_cmd_payload_ras & (~basesoc_bankmachine1_cmd_payload_cas)) & (~basesoc_bankmachine1_cmd_payload_we))) | basesoc_choose_req_want_activates)) | ((basesoc_bankmachine1_cmd_payload_is_read == basesoc_choose_req_want_reads) & (basesoc_bankmachine1_cmd_payload_is_write == basesoc_choose_req_want_writes))));
    basesoc_choose_req_valids[2] <= (basesoc_bankmachine2_cmd_valid & (((basesoc_bankmachine2_cmd_payload_is_cmd & basesoc_choose_req_want_cmds) & ((~((basesoc_bankmachine2_cmd_payload_ras & (~basesoc_bankmachine2_cmd_payload_cas)) & (~basesoc_bankmachine2_cmd_payload_we))) | basesoc_choose_req_want_activates)) | ((basesoc_bankmachine2_cmd_payload_is_read == basesoc_choose_req_want_reads) & (basesoc_bankmachine2_cmd_payload_is_write == basesoc_choose_req_want_writes))));
    basesoc_choose_req_valids[3] <= (basesoc_bankmachine3_cmd_valid & (((basesoc_bankmachine3_cmd_payload_is_cmd & basesoc_choose_req_want_cmds) & ((~((basesoc_bankmachine3_cmd_payload_ras & (~basesoc_bankmachine3_cmd_payload_cas)) & (~basesoc_bankmachine3_cmd_payload_we))) | basesoc_choose_req_want_activates)) | ((basesoc_bankmachine3_cmd_payload_is_read == basesoc_choose_req_want_reads) & (basesoc_bankmachine3_cmd_payload_is_write == basesoc_choose_req_want_writes))));
    basesoc_choose_req_valids[4] <= (basesoc_bankmachine4_cmd_valid & (((basesoc_bankmachine4_cmd_payload_is_cmd & basesoc_choose_req_want_cmds) & ((~((basesoc_bankmachine4_cmd_payload_ras & (~basesoc_bankmachine4_cmd_payload_cas)) & (~basesoc_bankmachine4_cmd_payload_we))) | basesoc_choose_req_want_activates)) | ((basesoc_bankmachine4_cmd_payload_is_read == basesoc_choose_req_want_reads) & (basesoc_bankmachine4_cmd_payload_is_write == basesoc_choose_req_want_writes))));
    basesoc_choose_req_valids[5] <= (basesoc_bankmachine5_cmd_valid & (((basesoc_bankmachine5_cmd_payload_is_cmd & basesoc_choose_req_want_cmds) & ((~((basesoc_bankmachine5_cmd_payload_ras & (~basesoc_bankmachine5_cmd_payload_cas)) & (~basesoc_bankmachine5_cmd_payload_we))) | basesoc_choose_req_want_activates)) | ((basesoc_bankmachine5_cmd_payload_is_read == basesoc_choose_req_want_reads) & (basesoc_bankmachine5_cmd_payload_is_write == basesoc_choose_req_want_writes))));
    basesoc_choose_req_valids[6] <= (basesoc_bankmachine6_cmd_valid & (((basesoc_bankmachine6_cmd_payload_is_cmd & basesoc_choose_req_want_cmds) & ((~((basesoc_bankmachine6_cmd_payload_ras & (~basesoc_bankmachine6_cmd_payload_cas)) & (~basesoc_bankmachine6_cmd_payload_we))) | basesoc_choose_req_want_activates)) | ((basesoc_bankmachine6_cmd_payload_is_read == basesoc_choose_req_want_reads) & (basesoc_bankmachine6_cmd_payload_is_write == basesoc_choose_req_want_writes))));
    basesoc_choose_req_valids[7] <= (basesoc_bankmachine7_cmd_valid & (((basesoc_bankmachine7_cmd_payload_is_cmd & basesoc_choose_req_want_cmds) & ((~((basesoc_bankmachine7_cmd_payload_ras & (~basesoc_bankmachine7_cmd_payload_cas)) & (~basesoc_bankmachine7_cmd_payload_we))) | basesoc_choose_req_want_activates)) | ((basesoc_bankmachine7_cmd_payload_is_read == basesoc_choose_req_want_reads) & (basesoc_bankmachine7_cmd_payload_is_write == basesoc_choose_req_want_writes))));
end
assign basesoc_choose_req_request = basesoc_choose_req_valids;
assign basesoc_choose_req_cmd_valid = rhs_self14;
assign basesoc_choose_req_cmd_payload_a = rhs_self15;
assign basesoc_choose_req_cmd_payload_ba = rhs_self16;
assign basesoc_choose_req_cmd_payload_is_read = rhs_self17;
assign basesoc_choose_req_cmd_payload_is_write = rhs_self18;
assign basesoc_choose_req_cmd_payload_is_cmd = rhs_self19;
always @(*) begin
    basesoc_choose_req_cmd_payload_cas <= 1'd0;
    if (basesoc_choose_req_cmd_valid) begin
        basesoc_choose_req_cmd_payload_cas <= t_self3;
    end
end
always @(*) begin
    basesoc_choose_req_cmd_payload_ras <= 1'd0;
    if (basesoc_choose_req_cmd_valid) begin
        basesoc_choose_req_cmd_payload_ras <= t_self4;
    end
end
always @(*) begin
    basesoc_choose_req_cmd_payload_we <= 1'd0;
    if (basesoc_choose_req_cmd_valid) begin
        basesoc_choose_req_cmd_payload_we <= t_self5;
    end
end
always @(*) begin
    basesoc_bankmachine0_cmd_ready <= 1'd0;
    if (((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & (basesoc_choose_cmd_grant == 1'd0))) begin
        basesoc_bankmachine0_cmd_ready <= 1'd1;
    end
    if (((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & (basesoc_choose_req_grant == 1'd0))) begin
        basesoc_bankmachine0_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    basesoc_bankmachine1_cmd_ready <= 1'd0;
    if (((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & (basesoc_choose_cmd_grant == 1'd1))) begin
        basesoc_bankmachine1_cmd_ready <= 1'd1;
    end
    if (((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & (basesoc_choose_req_grant == 1'd1))) begin
        basesoc_bankmachine1_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    basesoc_bankmachine2_cmd_ready <= 1'd0;
    if (((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & (basesoc_choose_cmd_grant == 2'd2))) begin
        basesoc_bankmachine2_cmd_ready <= 1'd1;
    end
    if (((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & (basesoc_choose_req_grant == 2'd2))) begin
        basesoc_bankmachine2_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    basesoc_bankmachine3_cmd_ready <= 1'd0;
    if (((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & (basesoc_choose_cmd_grant == 2'd3))) begin
        basesoc_bankmachine3_cmd_ready <= 1'd1;
    end
    if (((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & (basesoc_choose_req_grant == 2'd3))) begin
        basesoc_bankmachine3_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    basesoc_bankmachine4_cmd_ready <= 1'd0;
    if (((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & (basesoc_choose_cmd_grant == 3'd4))) begin
        basesoc_bankmachine4_cmd_ready <= 1'd1;
    end
    if (((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & (basesoc_choose_req_grant == 3'd4))) begin
        basesoc_bankmachine4_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    basesoc_bankmachine5_cmd_ready <= 1'd0;
    if (((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & (basesoc_choose_cmd_grant == 3'd5))) begin
        basesoc_bankmachine5_cmd_ready <= 1'd1;
    end
    if (((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & (basesoc_choose_req_grant == 3'd5))) begin
        basesoc_bankmachine5_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    basesoc_bankmachine6_cmd_ready <= 1'd0;
    if (((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & (basesoc_choose_cmd_grant == 3'd6))) begin
        basesoc_bankmachine6_cmd_ready <= 1'd1;
    end
    if (((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & (basesoc_choose_req_grant == 3'd6))) begin
        basesoc_bankmachine6_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    basesoc_bankmachine7_cmd_ready <= 1'd0;
    if (((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & (basesoc_choose_cmd_grant == 3'd7))) begin
        basesoc_bankmachine7_cmd_ready <= 1'd1;
    end
    if (((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & (basesoc_choose_req_grant == 3'd7))) begin
        basesoc_bankmachine7_cmd_ready <= 1'd1;
    end
end
assign basesoc_choose_req_ce = (basesoc_choose_req_cmd_ready | (~basesoc_choose_req_cmd_valid));
assign basesoc_dfi_p0_reset_n = 1'd1;
assign basesoc_dfi_p0_cke = {1{basesoc_steerer2}};
assign basesoc_dfi_p0_odt = {1{basesoc_steerer3}};
assign basesoc_dfi_p1_reset_n = 1'd1;
assign basesoc_dfi_p1_cke = {1{basesoc_steerer4}};
assign basesoc_dfi_p1_odt = {1{basesoc_steerer5}};
assign basesoc_tfawcon_count = ((basesoc_tfawcon_window[0] + basesoc_tfawcon_window[1]) + basesoc_tfawcon_window[2]);
always @(*) begin
    basesoc_choose_cmd_cmd_ready <= 1'd0;
    basesoc_choose_cmd_want_activates <= 1'd0;
    basesoc_choose_req_cmd_ready <= 1'd0;
    basesoc_choose_req_want_reads <= 1'd0;
    basesoc_choose_req_want_writes <= 1'd0;
    basesoc_cmd_ready <= 1'd0;
    basesoc_en0 <= 1'd0;
    basesoc_en1 <= 1'd0;
    basesoc_steerer0 <= 2'd0;
    basesoc_steerer1 <= 2'd0;
    multiplexer_next_state <= 4'd0;
    multiplexer_next_state <= multiplexer_state;
    case (multiplexer_state)
        1'd1: begin
            basesoc_en1 <= 1'd1;
            basesoc_choose_req_want_writes <= 1'd1;
            if (1'd0) begin
                basesoc_choose_req_cmd_ready <= (basesoc_cas_allowed & ((~((basesoc_choose_req_cmd_payload_ras & (~basesoc_choose_req_cmd_payload_cas)) & (~basesoc_choose_req_cmd_payload_we))) | basesoc_ras_allowed));
            end else begin
                basesoc_choose_cmd_want_activates <= basesoc_ras_allowed;
                basesoc_choose_cmd_cmd_ready <= ((~((basesoc_choose_cmd_cmd_payload_ras & (~basesoc_choose_cmd_cmd_payload_cas)) & (~basesoc_choose_cmd_cmd_payload_we))) | basesoc_ras_allowed);
                basesoc_choose_req_cmd_ready <= basesoc_cas_allowed;
            end
            basesoc_steerer0 <= 1'd0;
            if (1'd0) begin
                basesoc_steerer0 <= 2'd2;
            end
            if (1'd1) begin
                basesoc_steerer0 <= 1'd1;
            end
            basesoc_steerer1 <= 1'd0;
            if (1'd1) begin
                basesoc_steerer1 <= 2'd2;
            end
            if (1'd0) begin
                basesoc_steerer1 <= 1'd1;
            end
            if (basesoc_read_available) begin
                if (((~basesoc_write_available) | basesoc_max_time1)) begin
                    multiplexer_next_state <= 2'd3;
                end
            end
            if (basesoc_go_to_refresh) begin
                multiplexer_next_state <= 2'd2;
            end
        end
        2'd2: begin
            basesoc_steerer0 <= 2'd3;
            basesoc_cmd_ready <= 1'd1;
            if (basesoc_cmd_last) begin
                multiplexer_next_state <= 1'd0;
            end
        end
        2'd3: begin
            if (basesoc_twtrcon_ready) begin
                multiplexer_next_state <= 1'd0;
            end
        end
        3'd4: begin
            multiplexer_next_state <= 3'd5;
        end
        3'd5: begin
            multiplexer_next_state <= 3'd6;
        end
        3'd6: begin
            multiplexer_next_state <= 3'd7;
        end
        3'd7: begin
            multiplexer_next_state <= 4'd8;
        end
        4'd8: begin
            multiplexer_next_state <= 4'd9;
        end
        4'd9: begin
            multiplexer_next_state <= 4'd10;
        end
        4'd10: begin
            multiplexer_next_state <= 4'd11;
        end
        4'd11: begin
            multiplexer_next_state <= 4'd12;
        end
        4'd12: begin
            multiplexer_next_state <= 4'd13;
        end
        4'd13: begin
            multiplexer_next_state <= 4'd14;
        end
        4'd14: begin
            multiplexer_next_state <= 4'd15;
        end
        4'd15: begin
            multiplexer_next_state <= 1'd1;
        end
        default: begin
            basesoc_en0 <= 1'd1;
            basesoc_choose_req_want_reads <= 1'd1;
            if (1'd0) begin
                basesoc_choose_req_cmd_ready <= (basesoc_cas_allowed & ((~((basesoc_choose_req_cmd_payload_ras & (~basesoc_choose_req_cmd_payload_cas)) & (~basesoc_choose_req_cmd_payload_we))) | basesoc_ras_allowed));
            end else begin
                basesoc_choose_cmd_want_activates <= basesoc_ras_allowed;
                basesoc_choose_cmd_cmd_ready <= ((~((basesoc_choose_cmd_cmd_payload_ras & (~basesoc_choose_cmd_cmd_payload_cas)) & (~basesoc_choose_cmd_cmd_payload_we))) | basesoc_ras_allowed);
                basesoc_choose_req_cmd_ready <= basesoc_cas_allowed;
            end
            basesoc_steerer0 <= 1'd0;
            if (1'd1) begin
                basesoc_steerer0 <= 2'd2;
            end
            if (1'd0) begin
                basesoc_steerer0 <= 1'd1;
            end
            basesoc_steerer1 <= 1'd0;
            if (1'd0) begin
                basesoc_steerer1 <= 2'd2;
            end
            if (1'd1) begin
                basesoc_steerer1 <= 1'd1;
            end
            if (basesoc_write_available) begin
                if (((~basesoc_read_available) | basesoc_max_time0)) begin
                    multiplexer_next_state <= 3'd4;
                end
            end
            if (basesoc_go_to_refresh) begin
                multiplexer_next_state <= 2'd2;
            end
        end
    endcase
end
assign roundrobin0_request = {(((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked2 | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid), (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked1 | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid), (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked0 | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid)};
assign roundrobin0_ce = ((~basesoc_interface_bank0_valid) & (~basesoc_interface_bank0_lock));
assign basesoc_interface_bank0_addr = rhs_self20;
assign basesoc_interface_bank0_we = rhs_self21;
assign basesoc_interface_bank0_valid = rhs_self22;
assign roundrobin1_request = {(((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked5 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid), (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked4 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid), (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked3 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid)};
assign roundrobin1_ce = ((~basesoc_interface_bank1_valid) & (~basesoc_interface_bank1_lock));
assign basesoc_interface_bank1_addr = rhs_self23;
assign basesoc_interface_bank1_we = rhs_self24;
assign basesoc_interface_bank1_valid = rhs_self25;
assign roundrobin2_request = {(((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked8 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid), (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked7 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid), (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked6 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid)};
assign roundrobin2_ce = ((~basesoc_interface_bank2_valid) & (~basesoc_interface_bank2_lock));
assign basesoc_interface_bank2_addr = rhs_self26;
assign basesoc_interface_bank2_we = rhs_self27;
assign basesoc_interface_bank2_valid = rhs_self28;
assign roundrobin3_request = {(((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked11 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid), (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked10 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid), (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked9 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid)};
assign roundrobin3_ce = ((~basesoc_interface_bank3_valid) & (~basesoc_interface_bank3_lock));
assign basesoc_interface_bank3_addr = rhs_self29;
assign basesoc_interface_bank3_we = rhs_self30;
assign basesoc_interface_bank3_valid = rhs_self31;
assign roundrobin4_request = {(((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked14 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid), (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked13 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid), (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked12 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid)};
assign roundrobin4_ce = ((~basesoc_interface_bank4_valid) & (~basesoc_interface_bank4_lock));
assign basesoc_interface_bank4_addr = rhs_self32;
assign basesoc_interface_bank4_we = rhs_self33;
assign basesoc_interface_bank4_valid = rhs_self34;
assign roundrobin5_request = {(((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked17 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid), (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked16 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid), (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked15 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid)};
assign roundrobin5_ce = ((~basesoc_interface_bank5_valid) & (~basesoc_interface_bank5_lock));
assign basesoc_interface_bank5_addr = rhs_self35;
assign basesoc_interface_bank5_we = rhs_self36;
assign basesoc_interface_bank5_valid = rhs_self37;
assign roundrobin6_request = {(((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked20 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid), (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked19 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid), (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked18 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid)};
assign roundrobin6_ce = ((~basesoc_interface_bank6_valid) & (~basesoc_interface_bank6_lock));
assign basesoc_interface_bank6_addr = rhs_self38;
assign basesoc_interface_bank6_we = rhs_self39;
assign basesoc_interface_bank6_valid = rhs_self40;
assign roundrobin7_request = {(((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked23 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid), (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked22 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid), (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked21 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid)};
assign roundrobin7_ce = ((~basesoc_interface_bank7_valid) & (~basesoc_interface_bank7_lock));
assign basesoc_interface_bank7_addr = rhs_self41;
assign basesoc_interface_bank7_we = rhs_self42;
assign basesoc_interface_bank7_valid = rhs_self43;
assign basesoc_litedramnativeport0_cmd_ready = ((((((((1'd0 | (((roundrobin0_grant == 1'd0) & ((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked0 | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_interface_bank0_ready)) | (((roundrobin1_grant == 1'd0) & ((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked3 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_interface_bank1_ready)) | (((roundrobin2_grant == 1'd0) & ((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked6 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_interface_bank2_ready)) | (((roundrobin3_grant == 1'd0) & ((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked9 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_interface_bank3_ready)) | (((roundrobin4_grant == 1'd0) & ((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked12 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_interface_bank4_ready)) | (((roundrobin5_grant == 1'd0) & ((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked15 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_interface_bank5_ready)) | (((roundrobin6_grant == 1'd0) & ((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked18 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_interface_bank6_ready)) | (((roundrobin7_grant == 1'd0) & ((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked21 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0)))))) & basesoc_interface_bank7_ready));
assign basesoc_litedramnativeport1_cmd_ready = ((((((((1'd0 | (((roundrobin0_grant == 1'd1) & ((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked1 | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1)))))) & basesoc_interface_bank0_ready)) | (((roundrobin1_grant == 1'd1) & ((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked4 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1)))))) & basesoc_interface_bank1_ready)) | (((roundrobin2_grant == 1'd1) & ((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked7 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1)))))) & basesoc_interface_bank2_ready)) | (((roundrobin3_grant == 1'd1) & ((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked10 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1)))))) & basesoc_interface_bank3_ready)) | (((roundrobin4_grant == 1'd1) & ((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked13 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1)))))) & basesoc_interface_bank4_ready)) | (((roundrobin5_grant == 1'd1) & ((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked16 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1)))))) & basesoc_interface_bank5_ready)) | (((roundrobin6_grant == 1'd1) & ((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked19 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1)))))) & basesoc_interface_bank6_ready)) | (((roundrobin7_grant == 1'd1) & ((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked22 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1)))))) & basesoc_interface_bank7_ready));
assign basesoc_litedramnativeport2_cmd_ready = ((((((((1'd0 | (((roundrobin0_grant == 2'd2) & ((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked2 | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2)))))) & basesoc_interface_bank0_ready)) | (((roundrobin1_grant == 2'd2) & ((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked5 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2)))))) & basesoc_interface_bank1_ready)) | (((roundrobin2_grant == 2'd2) & ((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked8 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2)))))) & basesoc_interface_bank2_ready)) | (((roundrobin3_grant == 2'd2) & ((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked11 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2)))))) & basesoc_interface_bank3_ready)) | (((roundrobin4_grant == 2'd2) & ((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked14 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2)))))) & basesoc_interface_bank4_ready)) | (((roundrobin5_grant == 2'd2) & ((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked17 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2)))))) & basesoc_interface_bank5_ready)) | (((roundrobin6_grant == 2'd2) & ((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked20 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2)))))) & basesoc_interface_bank6_ready)) | (((roundrobin7_grant == 2'd2) & ((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked23 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2)))))) & basesoc_interface_bank7_ready));
assign basesoc_litedramnativeport0_wdata_ready = new_master_wdata_ready3;
assign basesoc_litedramnativeport1_wdata_ready = new_master_wdata_ready7;
assign basesoc_litedramnativeport2_wdata_ready = new_master_wdata_ready11;
assign basesoc_litedramnativeport0_rdata_valid = new_master_rdata_valid13;
assign basesoc_litedramnativeport1_rdata_valid = new_master_rdata_valid27;
assign basesoc_litedramnativeport2_rdata_valid = new_master_rdata_valid41;
always @(*) begin
    basesoc_interface_wdata <= 256'd0;
    basesoc_interface_wdata_we <= 32'd0;
    case ({new_master_wdata_ready11, new_master_wdata_ready7, new_master_wdata_ready3})
        1'd1: begin
            basesoc_interface_wdata <= basesoc_litedramnativeport0_wdata_payload_data;
            basesoc_interface_wdata_we <= basesoc_litedramnativeport0_wdata_payload_we;
        end
        2'd2: begin
            basesoc_interface_wdata <= basesoc_litedramnativeport1_wdata_payload_data;
            basesoc_interface_wdata_we <= basesoc_litedramnativeport1_wdata_payload_we;
        end
        3'd4: begin
            basesoc_interface_wdata <= basesoc_litedramnativeport2_wdata_payload_data;
            basesoc_interface_wdata_we <= basesoc_litedramnativeport2_wdata_payload_we;
        end
        default: begin
            basesoc_interface_wdata <= 1'd0;
            basesoc_interface_wdata_we <= 1'd0;
        end
    endcase
end
assign basesoc_litedramnativeport0_rdata_payload_data = basesoc_interface_rdata;
assign basesoc_litedramnativeport1_rdata_payload_data = basesoc_interface_rdata;
assign basesoc_litedramnativeport2_rdata_payload_data = basesoc_interface_rdata;
assign basesoc_litedram_wb_cyc = basesoc_wb_sdram_cyc;
assign basesoc_litedram_wb_stb = basesoc_wb_sdram_stb;
assign basesoc_wb_sdram_ack = basesoc_litedram_wb_ack;
assign basesoc_litedram_wb_we = basesoc_wb_sdram_we;
assign basesoc_litedram_wb_cti = basesoc_wb_sdram_cti;
assign basesoc_litedram_wb_bte = basesoc_wb_sdram_bte;
assign basesoc_wb_sdram_err = basesoc_litedram_wb_err;
always @(*) begin
    basesoc_litedram_wb_adr <= 27'd0;
    basesoc_litedram_wb_dat_w <= 256'd0;
    basesoc_litedram_wb_sel <= 32'd0;
    basesoc_wb_sdram_dat_r <= 32'd0;
    case (basesoc_wb_sdram_adr[2:0])
        1'd0: begin
            basesoc_litedram_wb_adr <= basesoc_wb_sdram_adr[29:3];
            basesoc_litedram_wb_sel[3:0] <= basesoc_wb_sdram_sel;
            basesoc_litedram_wb_dat_w[31:0] <= basesoc_wb_sdram_dat_w;
            basesoc_wb_sdram_dat_r <= basesoc_litedram_wb_dat_r[31:0];
        end
        1'd1: begin
            basesoc_litedram_wb_adr <= basesoc_wb_sdram_adr[29:3];
            basesoc_litedram_wb_sel[7:4] <= basesoc_wb_sdram_sel;
            basesoc_litedram_wb_dat_w[63:32] <= basesoc_wb_sdram_dat_w;
            basesoc_wb_sdram_dat_r <= basesoc_litedram_wb_dat_r[63:32];
        end
        2'd2: begin
            basesoc_litedram_wb_adr <= basesoc_wb_sdram_adr[29:3];
            basesoc_litedram_wb_sel[11:8] <= basesoc_wb_sdram_sel;
            basesoc_litedram_wb_dat_w[95:64] <= basesoc_wb_sdram_dat_w;
            basesoc_wb_sdram_dat_r <= basesoc_litedram_wb_dat_r[95:64];
        end
        2'd3: begin
            basesoc_litedram_wb_adr <= basesoc_wb_sdram_adr[29:3];
            basesoc_litedram_wb_sel[15:12] <= basesoc_wb_sdram_sel;
            basesoc_litedram_wb_dat_w[127:96] <= basesoc_wb_sdram_dat_w;
            basesoc_wb_sdram_dat_r <= basesoc_litedram_wb_dat_r[127:96];
        end
        3'd4: begin
            basesoc_litedram_wb_adr <= basesoc_wb_sdram_adr[29:3];
            basesoc_litedram_wb_sel[19:16] <= basesoc_wb_sdram_sel;
            basesoc_litedram_wb_dat_w[159:128] <= basesoc_wb_sdram_dat_w;
            basesoc_wb_sdram_dat_r <= basesoc_litedram_wb_dat_r[159:128];
        end
        3'd5: begin
            basesoc_litedram_wb_adr <= basesoc_wb_sdram_adr[29:3];
            basesoc_litedram_wb_sel[23:20] <= basesoc_wb_sdram_sel;
            basesoc_litedram_wb_dat_w[191:160] <= basesoc_wb_sdram_dat_w;
            basesoc_wb_sdram_dat_r <= basesoc_litedram_wb_dat_r[191:160];
        end
        3'd6: begin
            basesoc_litedram_wb_adr <= basesoc_wb_sdram_adr[29:3];
            basesoc_litedram_wb_sel[27:24] <= basesoc_wb_sdram_sel;
            basesoc_litedram_wb_dat_w[223:192] <= basesoc_wb_sdram_dat_w;
            basesoc_wb_sdram_dat_r <= basesoc_litedram_wb_dat_r[223:192];
        end
        3'd7: begin
            basesoc_litedram_wb_adr <= basesoc_wb_sdram_adr[29:3];
            basesoc_litedram_wb_sel[31:28] <= basesoc_wb_sdram_sel;
            basesoc_litedram_wb_dat_w[255:224] <= basesoc_wb_sdram_dat_w;
            basesoc_wb_sdram_dat_r <= basesoc_litedram_wb_dat_r[255:224];
        end
    endcase
end
assign basesoc_litedramnativeport2_cmd_payload_addr = (basesoc_litedram_wb_adr - 26'd33554432);
assign basesoc_litedramnativeport2_cmd_payload_we = basesoc_litedram_wb_we;
assign basesoc_litedramnativeport2_cmd_last = (~basesoc_litedram_wb_we);
assign basesoc_litedramnativeport2_flush = (~basesoc_litedram_wb_cyc);
always @(*) begin
    basesoc_litedramnativeport2_wdata_valid <= 1'd0;
    basesoc_litedramnativeport2_wdata_valid <= (basesoc_litedram_wb_stb & basesoc_litedram_wb_we);
    if (1'd1) begin
        if ((~basesoc_is_ongoing)) begin
            basesoc_litedramnativeport2_wdata_valid <= 1'd0;
        end
    end
end
assign basesoc_litedramnativeport2_wdata_payload_data = basesoc_litedram_wb_dat_w;
assign basesoc_litedramnativeport2_wdata_payload_we = basesoc_litedram_wb_sel;
assign basesoc_litedramnativeport2_rdata_ready = 1'd1;
always @(*) begin
    basesoc_aborted_litedramwishbone2native_next_value <= 1'd0;
    basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd0;
    basesoc_is_ongoing <= 1'd0;
    basesoc_litedram_wb_ack <= 1'd0;
    basesoc_litedram_wb_dat_r <= 256'd0;
    basesoc_litedramnativeport2_cmd_valid <= 1'd0;
    litedramwishbone2native_next_state <= 2'd0;
    litedramwishbone2native_next_state <= litedramwishbone2native_state;
    case (litedramwishbone2native_state)
        1'd1: begin
            basesoc_is_ongoing <= 1'd1;
            basesoc_aborted_litedramwishbone2native_next_value <= ((~basesoc_litedram_wb_cyc) | basesoc_aborted);
            basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
            if ((basesoc_litedramnativeport2_wdata_valid & basesoc_litedramnativeport2_wdata_ready)) begin
                basesoc_litedram_wb_ack <= (basesoc_litedram_wb_cyc & (~basesoc_aborted));
                litedramwishbone2native_next_state <= 1'd0;
            end
        end
        2'd2: begin
            basesoc_aborted_litedramwishbone2native_next_value <= ((~basesoc_litedram_wb_cyc) | basesoc_aborted);
            basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
            if (basesoc_litedramnativeport2_rdata_valid) begin
                basesoc_litedram_wb_ack <= (basesoc_litedram_wb_cyc & (~basesoc_aborted));
                basesoc_litedram_wb_dat_r <= basesoc_litedramnativeport2_rdata_payload_data;
                litedramwishbone2native_next_state <= 1'd0;
            end
        end
        default: begin
            basesoc_litedramnativeport2_cmd_valid <= (basesoc_litedram_wb_cyc & basesoc_litedram_wb_stb);
            if (((basesoc_litedramnativeport2_cmd_valid & basesoc_litedramnativeport2_cmd_ready) & basesoc_litedram_wb_we)) begin
                litedramwishbone2native_next_state <= 1'd1;
            end
            if (((basesoc_litedramnativeport2_cmd_valid & basesoc_litedramnativeport2_cmd_ready) & (~basesoc_litedram_wb_we))) begin
                litedramwishbone2native_next_state <= 2'd2;
            end
            basesoc_aborted_litedramwishbone2native_next_value <= 1'd0;
            basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
        end
    endcase
end
always @(*) begin
    interface0_ack <= 1'd0;
    interface0_dat_r <= 32'd0;
    interface1_adr_wishbone2csr_next_value1 <= 14'd0;
    interface1_adr_wishbone2csr_next_value_ce1 <= 1'd0;
    interface1_dat_w_wishbone2csr_next_value0 <= 32'd0;
    interface1_dat_w_wishbone2csr_next_value_ce0 <= 1'd0;
    interface1_re_wishbone2csr_next_value2 <= 1'd0;
    interface1_re_wishbone2csr_next_value_ce2 <= 1'd0;
    interface1_we_wishbone2csr_next_value3 <= 1'd0;
    interface1_we_wishbone2csr_next_value_ce3 <= 1'd0;
    wishbone2csr_next_state <= 2'd0;
    wishbone2csr_next_state <= wishbone2csr_state;
    case (wishbone2csr_state)
        1'd1: begin
            interface1_adr_wishbone2csr_next_value1 <= 1'd0;
            interface1_adr_wishbone2csr_next_value_ce1 <= 1'd1;
            interface1_re_wishbone2csr_next_value2 <= 1'd0;
            interface1_re_wishbone2csr_next_value_ce2 <= 1'd1;
            interface1_we_wishbone2csr_next_value3 <= 1'd0;
            interface1_we_wishbone2csr_next_value_ce3 <= 1'd1;
            wishbone2csr_next_state <= 2'd2;
        end
        2'd2: begin
            interface0_ack <= 1'd1;
            interface0_dat_r <= interface1_dat_r;
            wishbone2csr_next_state <= 1'd0;
        end
        default: begin
            interface1_dat_w_wishbone2csr_next_value0 <= interface0_dat_w;
            interface1_dat_w_wishbone2csr_next_value_ce0 <= 1'd1;
            if ((interface0_cyc & interface0_stb)) begin
                interface1_adr_wishbone2csr_next_value1 <= interface0_adr[29:0];
                interface1_adr_wishbone2csr_next_value_ce1 <= 1'd1;
                interface1_re_wishbone2csr_next_value2 <= ((~interface0_we) & (interface0_sel != 1'd0));
                interface1_re_wishbone2csr_next_value_ce2 <= 1'd1;
                interface1_we_wishbone2csr_next_value3 <= (interface0_we & (interface0_sel != 1'd0));
                interface1_we_wishbone2csr_next_value_ce3 <= 1'd1;
                wishbone2csr_next_state <= 1'd1;
            end
        end
    endcase
end
assign csr_bankarray_csrbank0_sel = (csr_bankarray_interface0_bank_bus_adr[13:9] == 1'd0);
assign csr_bankarray_csrbank0_reset0_r = csr_bankarray_interface0_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank0_reset0_re <= 1'd0;
    csr_bankarray_csrbank0_reset0_we <= 1'd0;
    if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank0_reset0_re <= csr_bankarray_interface0_bank_bus_we;
        csr_bankarray_csrbank0_reset0_we <= csr_bankarray_interface0_bank_bus_re;
    end
end
assign csr_bankarray_csrbank0_scratch0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank0_scratch0_re <= 1'd0;
    csr_bankarray_csrbank0_scratch0_we <= 1'd0;
    if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank0_scratch0_re <= csr_bankarray_interface0_bank_bus_we;
        csr_bankarray_csrbank0_scratch0_we <= csr_bankarray_interface0_bank_bus_re;
    end
end
assign csr_bankarray_csrbank0_bus_errors_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank0_bus_errors_re <= 1'd0;
    csr_bankarray_csrbank0_bus_errors_we <= 1'd0;
    if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank0_bus_errors_re <= csr_bankarray_interface0_bank_bus_we;
        csr_bankarray_csrbank0_bus_errors_we <= csr_bankarray_interface0_bank_bus_re;
    end
end
always @(*) begin
    basesoc_soc_rst <= 1'd0;
    if (basesoc_reset_re) begin
        basesoc_soc_rst <= basesoc_reset_storage[0];
    end
end
assign basesoc_cpu_rst = basesoc_reset_storage[1];
assign csr_bankarray_csrbank0_reset0_w = basesoc_reset_storage[1:0];
assign csr_bankarray_csrbank0_scratch0_w = basesoc_scratch_storage[31:0];
assign csr_bankarray_csrbank0_bus_errors_w = basesoc_bus_errors_status[31:0];
assign basesoc_bus_errors_we = csr_bankarray_csrbank0_bus_errors_we;
assign csr_bankarray_csrbank1_sel = (csr_bankarray_interface1_bank_bus_adr[13:9] == 1'd1);
assign csr_bankarray_csrbank1_dly_sel0_r = csr_bankarray_interface1_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank1_dly_sel0_re <= 1'd0;
    csr_bankarray_csrbank1_dly_sel0_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank1_dly_sel0_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_dly_sel0_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign gw5ddrphy_rdly_dq_rst_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    gw5ddrphy_rdly_dq_rst_re <= 1'd0;
    gw5ddrphy_rdly_dq_rst_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd1))) begin
        gw5ddrphy_rdly_dq_rst_re <= csr_bankarray_interface1_bank_bus_we;
        gw5ddrphy_rdly_dq_rst_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign gw5ddrphy_rdly_dq_inc_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    gw5ddrphy_rdly_dq_inc_re <= 1'd0;
    gw5ddrphy_rdly_dq_inc_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd2))) begin
        gw5ddrphy_rdly_dq_inc_re <= csr_bankarray_interface1_bank_bus_we;
        gw5ddrphy_rdly_dq_inc_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign gw5ddrphy_rdly_dq_bitslip_rst_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    gw5ddrphy_rdly_dq_bitslip_rst_re <= 1'd0;
    gw5ddrphy_rdly_dq_bitslip_rst_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd3))) begin
        gw5ddrphy_rdly_dq_bitslip_rst_re <= csr_bankarray_interface1_bank_bus_we;
        gw5ddrphy_rdly_dq_bitslip_rst_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign gw5ddrphy_rdly_dq_bitslip_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    gw5ddrphy_rdly_dq_bitslip_re <= 1'd0;
    gw5ddrphy_rdly_dq_bitslip_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd4))) begin
        gw5ddrphy_rdly_dq_bitslip_re <= csr_bankarray_interface1_bank_bus_we;
        gw5ddrphy_rdly_dq_bitslip_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign gw5ddrphy_burstdet_clr_r = csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    gw5ddrphy_burstdet_clr_re <= 1'd0;
    gw5ddrphy_burstdet_clr_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd5))) begin
        gw5ddrphy_burstdet_clr_re <= csr_bankarray_interface1_bank_bus_we;
        gw5ddrphy_burstdet_clr_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign csr_bankarray_csrbank1_burstdet_seen_r = csr_bankarray_interface1_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank1_burstdet_seen_re <= 1'd0;
    csr_bankarray_csrbank1_burstdet_seen_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank1_burstdet_seen_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_burstdet_seen_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign csr_bankarray_csrbank1_dly_sel0_w = gw5ddrphy_dly_sel_storage[3:0];
assign csr_bankarray_csrbank1_burstdet_seen_w = gw5ddrphy_burstdet_seen_status[3:0];
assign gw5ddrphy_burstdet_seen_we = csr_bankarray_csrbank1_burstdet_seen_we;
assign csr_bankarray_sel = (csr_bankarray_sram_bus_adr[13:9] == 2'd2);
always @(*) begin
    csr_bankarray_sram_bus_dat_r <= 32'd0;
    if (csr_bankarray_sel_r) begin
        csr_bankarray_sram_bus_dat_r <= csr_bankarray_dat_r;
    end
end
assign csr_bankarray_adr = csr_bankarray_sram_bus_adr[5:0];
assign csr_bankarray_csrbank2_sel = (csr_bankarray_interface2_bank_bus_adr[13:9] == 2'd3);
assign csr_bankarray_csrbank2_dfii_control0_r = csr_bankarray_interface2_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_control0_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_control0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank2_dfii_control0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_control0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi0_command0_r = csr_bankarray_interface2_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi0_command0_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi0_command0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank2_dfii_pi0_command0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi0_command0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign basesoc_phaseinjector0_command_issue_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    basesoc_phaseinjector0_command_issue_re <= 1'd0;
    basesoc_phaseinjector0_command_issue_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd2))) begin
        basesoc_phaseinjector0_command_issue_re <= csr_bankarray_interface2_bank_bus_we;
        basesoc_phaseinjector0_command_issue_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi0_address0_r = csr_bankarray_interface2_bank_bus_dat_w[13:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi0_address0_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi0_address0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank2_dfii_pi0_address0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi0_address0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi0_baddress0_r = csr_bankarray_interface2_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi0_baddress0_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi0_baddress0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank2_dfii_pi0_baddress0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi0_baddress0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi0_wrdata3_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi0_wrdata3_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi0_wrdata3_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank2_dfii_pi0_wrdata3_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi0_wrdata3_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi0_wrdata2_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi0_wrdata2_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi0_wrdata2_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank2_dfii_pi0_wrdata2_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi0_wrdata2_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi0_wrdata1_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi0_wrdata1_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi0_wrdata1_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank2_dfii_pi0_wrdata1_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi0_wrdata1_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi0_wrdata0_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi0_wrdata0_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi0_wrdata0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd8))) begin
        csr_bankarray_csrbank2_dfii_pi0_wrdata0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi0_wrdata0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi0_rddata3_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi0_rddata3_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi0_rddata3_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd9))) begin
        csr_bankarray_csrbank2_dfii_pi0_rddata3_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi0_rddata3_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi0_rddata2_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi0_rddata2_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi0_rddata2_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd10))) begin
        csr_bankarray_csrbank2_dfii_pi0_rddata2_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi0_rddata2_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi0_rddata1_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi0_rddata1_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi0_rddata1_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd11))) begin
        csr_bankarray_csrbank2_dfii_pi0_rddata1_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi0_rddata1_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi0_rddata0_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi0_rddata0_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi0_rddata0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd12))) begin
        csr_bankarray_csrbank2_dfii_pi0_rddata0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi0_rddata0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi1_command0_r = csr_bankarray_interface2_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi1_command0_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi1_command0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd13))) begin
        csr_bankarray_csrbank2_dfii_pi1_command0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi1_command0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign basesoc_phaseinjector1_command_issue_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    basesoc_phaseinjector1_command_issue_re <= 1'd0;
    basesoc_phaseinjector1_command_issue_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd14))) begin
        basesoc_phaseinjector1_command_issue_re <= csr_bankarray_interface2_bank_bus_we;
        basesoc_phaseinjector1_command_issue_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi1_address0_r = csr_bankarray_interface2_bank_bus_dat_w[13:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi1_address0_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi1_address0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd15))) begin
        csr_bankarray_csrbank2_dfii_pi1_address0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi1_address0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi1_baddress0_r = csr_bankarray_interface2_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi1_baddress0_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi1_baddress0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 5'd16))) begin
        csr_bankarray_csrbank2_dfii_pi1_baddress0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi1_baddress0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi1_wrdata3_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi1_wrdata3_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi1_wrdata3_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 5'd17))) begin
        csr_bankarray_csrbank2_dfii_pi1_wrdata3_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi1_wrdata3_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi1_wrdata2_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi1_wrdata2_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi1_wrdata2_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 5'd18))) begin
        csr_bankarray_csrbank2_dfii_pi1_wrdata2_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi1_wrdata2_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi1_wrdata1_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi1_wrdata1_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi1_wrdata1_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 5'd19))) begin
        csr_bankarray_csrbank2_dfii_pi1_wrdata1_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi1_wrdata1_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi1_wrdata0_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi1_wrdata0_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi1_wrdata0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 5'd20))) begin
        csr_bankarray_csrbank2_dfii_pi1_wrdata0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi1_wrdata0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi1_rddata3_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi1_rddata3_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi1_rddata3_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 5'd21))) begin
        csr_bankarray_csrbank2_dfii_pi1_rddata3_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi1_rddata3_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi1_rddata2_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi1_rddata2_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi1_rddata2_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 5'd22))) begin
        csr_bankarray_csrbank2_dfii_pi1_rddata2_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi1_rddata2_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi1_rddata1_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi1_rddata1_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi1_rddata1_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 5'd23))) begin
        csr_bankarray_csrbank2_dfii_pi1_rddata1_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi1_rddata1_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dfii_pi1_rddata0_r = csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank2_dfii_pi1_rddata0_re <= 1'd0;
    csr_bankarray_csrbank2_dfii_pi1_rddata0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 5'd24))) begin
        csr_bankarray_csrbank2_dfii_pi1_rddata0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dfii_pi1_rddata0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign basesoc_sel = basesoc_storage[0];
assign basesoc_cke = basesoc_storage[1];
assign basesoc_odt = basesoc_storage[2];
assign basesoc_reset_n = basesoc_storage[3];
assign csr_bankarray_csrbank2_dfii_control0_w = basesoc_storage[3:0];
assign basesoc_phaseinjector0_csrfield_cs = basesoc_phaseinjector0_command_storage[0];
assign basesoc_phaseinjector0_csrfield_we = basesoc_phaseinjector0_command_storage[1];
assign basesoc_phaseinjector0_csrfield_cas = basesoc_phaseinjector0_command_storage[2];
assign basesoc_phaseinjector0_csrfield_ras = basesoc_phaseinjector0_command_storage[3];
assign basesoc_phaseinjector0_csrfield_wren = basesoc_phaseinjector0_command_storage[4];
assign basesoc_phaseinjector0_csrfield_rden = basesoc_phaseinjector0_command_storage[5];
assign basesoc_phaseinjector0_csrfield_cs_top = basesoc_phaseinjector0_command_storage[6];
assign basesoc_phaseinjector0_csrfield_cs_bottom = basesoc_phaseinjector0_command_storage[7];
assign csr_bankarray_csrbank2_dfii_pi0_command0_w = basesoc_phaseinjector0_command_storage[7:0];
assign csr_bankarray_csrbank2_dfii_pi0_address0_w = basesoc_phaseinjector0_address_storage[13:0];
assign csr_bankarray_csrbank2_dfii_pi0_baddress0_w = basesoc_phaseinjector0_baddress_storage[2:0];
assign csr_bankarray_csrbank2_dfii_pi0_wrdata3_w = basesoc_phaseinjector0_wrdata_storage[127:96];
assign csr_bankarray_csrbank2_dfii_pi0_wrdata2_w = basesoc_phaseinjector0_wrdata_storage[95:64];
assign csr_bankarray_csrbank2_dfii_pi0_wrdata1_w = basesoc_phaseinjector0_wrdata_storage[63:32];
assign csr_bankarray_csrbank2_dfii_pi0_wrdata0_w = basesoc_phaseinjector0_wrdata_storage[31:0];
assign csr_bankarray_csrbank2_dfii_pi0_rddata3_w = basesoc_phaseinjector0_rddata_status[127:96];
assign csr_bankarray_csrbank2_dfii_pi0_rddata2_w = basesoc_phaseinjector0_rddata_status[95:64];
assign csr_bankarray_csrbank2_dfii_pi0_rddata1_w = basesoc_phaseinjector0_rddata_status[63:32];
assign csr_bankarray_csrbank2_dfii_pi0_rddata0_w = basesoc_phaseinjector0_rddata_status[31:0];
assign basesoc_phaseinjector0_rddata_we = csr_bankarray_csrbank2_dfii_pi0_rddata0_we;
assign basesoc_phaseinjector1_csrfield_cs = basesoc_phaseinjector1_command_storage[0];
assign basesoc_phaseinjector1_csrfield_we = basesoc_phaseinjector1_command_storage[1];
assign basesoc_phaseinjector1_csrfield_cas = basesoc_phaseinjector1_command_storage[2];
assign basesoc_phaseinjector1_csrfield_ras = basesoc_phaseinjector1_command_storage[3];
assign basesoc_phaseinjector1_csrfield_wren = basesoc_phaseinjector1_command_storage[4];
assign basesoc_phaseinjector1_csrfield_rden = basesoc_phaseinjector1_command_storage[5];
assign basesoc_phaseinjector1_csrfield_cs_top = basesoc_phaseinjector1_command_storage[6];
assign basesoc_phaseinjector1_csrfield_cs_bottom = basesoc_phaseinjector1_command_storage[7];
assign csr_bankarray_csrbank2_dfii_pi1_command0_w = basesoc_phaseinjector1_command_storage[7:0];
assign csr_bankarray_csrbank2_dfii_pi1_address0_w = basesoc_phaseinjector1_address_storage[13:0];
assign csr_bankarray_csrbank2_dfii_pi1_baddress0_w = basesoc_phaseinjector1_baddress_storage[2:0];
assign csr_bankarray_csrbank2_dfii_pi1_wrdata3_w = basesoc_phaseinjector1_wrdata_storage[127:96];
assign csr_bankarray_csrbank2_dfii_pi1_wrdata2_w = basesoc_phaseinjector1_wrdata_storage[95:64];
assign csr_bankarray_csrbank2_dfii_pi1_wrdata1_w = basesoc_phaseinjector1_wrdata_storage[63:32];
assign csr_bankarray_csrbank2_dfii_pi1_wrdata0_w = basesoc_phaseinjector1_wrdata_storage[31:0];
assign csr_bankarray_csrbank2_dfii_pi1_rddata3_w = basesoc_phaseinjector1_rddata_status[127:96];
assign csr_bankarray_csrbank2_dfii_pi1_rddata2_w = basesoc_phaseinjector1_rddata_status[95:64];
assign csr_bankarray_csrbank2_dfii_pi1_rddata1_w = basesoc_phaseinjector1_rddata_status[63:32];
assign csr_bankarray_csrbank2_dfii_pi1_rddata0_w = basesoc_phaseinjector1_rddata_status[31:0];
assign basesoc_phaseinjector1_rddata_we = csr_bankarray_csrbank2_dfii_pi1_rddata0_we;
assign csr_bankarray_csrbank3_sel = (csr_bankarray_interface3_bank_bus_adr[13:9] == 3'd4);
assign csr_bankarray_csrbank3_load0_r = csr_bankarray_interface3_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank3_load0_re <= 1'd0;
    csr_bankarray_csrbank3_load0_we <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank3_load0_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_load0_we <= csr_bankarray_interface3_bank_bus_re;
    end
end
assign csr_bankarray_csrbank3_reload0_r = csr_bankarray_interface3_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank3_reload0_re <= 1'd0;
    csr_bankarray_csrbank3_reload0_we <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank3_reload0_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_reload0_we <= csr_bankarray_interface3_bank_bus_re;
    end
end
assign csr_bankarray_csrbank3_en0_r = csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank3_en0_re <= 1'd0;
    csr_bankarray_csrbank3_en0_we <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank3_en0_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_en0_we <= csr_bankarray_interface3_bank_bus_re;
    end
end
assign csr_bankarray_csrbank3_update_value0_r = csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank3_update_value0_re <= 1'd0;
    csr_bankarray_csrbank3_update_value0_we <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank3_update_value0_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_update_value0_we <= csr_bankarray_interface3_bank_bus_re;
    end
end
assign csr_bankarray_csrbank3_value_r = csr_bankarray_interface3_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank3_value_re <= 1'd0;
    csr_bankarray_csrbank3_value_we <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank3_value_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_value_we <= csr_bankarray_interface3_bank_bus_re;
    end
end
assign csr_bankarray_csrbank3_ev_status_r = csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank3_ev_status_re <= 1'd0;
    csr_bankarray_csrbank3_ev_status_we <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank3_ev_status_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_ev_status_we <= csr_bankarray_interface3_bank_bus_re;
    end
end
assign csr_bankarray_csrbank3_ev_pending_r = csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank3_ev_pending_re <= 1'd0;
    csr_bankarray_csrbank3_ev_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank3_ev_pending_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_ev_pending_we <= csr_bankarray_interface3_bank_bus_re;
    end
end
assign csr_bankarray_csrbank3_ev_enable0_r = csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank3_ev_enable0_re <= 1'd0;
    csr_bankarray_csrbank3_ev_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank3_ev_enable0_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_ev_enable0_we <= csr_bankarray_interface3_bank_bus_re;
    end
end
assign csr_bankarray_csrbank3_load0_w = basesoc_timer_load_storage[31:0];
assign csr_bankarray_csrbank3_reload0_w = basesoc_timer_reload_storage[31:0];
assign csr_bankarray_csrbank3_en0_w = basesoc_timer_en_storage;
assign csr_bankarray_csrbank3_update_value0_w = basesoc_timer_update_value_storage;
assign csr_bankarray_csrbank3_value_w = basesoc_timer_value_status[31:0];
assign basesoc_timer_value_we = csr_bankarray_csrbank3_value_we;
always @(*) begin
    basesoc_timer_status_status <= 1'd0;
    basesoc_timer_status_status <= basesoc_timer_zero0;
end
assign csr_bankarray_csrbank3_ev_status_w = basesoc_timer_status_status;
assign basesoc_timer_status_we = csr_bankarray_csrbank3_ev_status_we;
always @(*) begin
    basesoc_timer_pending_status <= 1'd0;
    basesoc_timer_pending_status <= basesoc_timer_zero1;
end
assign csr_bankarray_csrbank3_ev_pending_w = basesoc_timer_pending_status;
assign basesoc_timer_pending_we = csr_bankarray_csrbank3_ev_pending_we;
assign basesoc_timer_zero2 = basesoc_timer_enable_storage;
assign csr_bankarray_csrbank3_ev_enable0_w = basesoc_timer_enable_storage;
assign csr_bankarray_csrbank4_sel = (csr_bankarray_interface4_bank_bus_adr[13:9] == 3'd5);
assign basesoc_uart_rxtx_r = csr_bankarray_interface4_bank_bus_dat_w[7:0];
always @(*) begin
    basesoc_uart_rxtx_re <= 1'd0;
    basesoc_uart_rxtx_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd0))) begin
        basesoc_uart_rxtx_re <= csr_bankarray_interface4_bank_bus_we;
        basesoc_uart_rxtx_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_txfull_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank4_txfull_re <= 1'd0;
    csr_bankarray_csrbank4_txfull_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank4_txfull_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_txfull_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_rxempty_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank4_rxempty_re <= 1'd0;
    csr_bankarray_csrbank4_rxempty_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank4_rxempty_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_rxempty_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_ev_status_r = csr_bankarray_interface4_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank4_ev_status_re <= 1'd0;
    csr_bankarray_csrbank4_ev_status_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank4_ev_status_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_ev_status_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_ev_pending_r = csr_bankarray_interface4_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank4_ev_pending_re <= 1'd0;
    csr_bankarray_csrbank4_ev_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank4_ev_pending_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_ev_pending_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_ev_enable0_r = csr_bankarray_interface4_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank4_ev_enable0_re <= 1'd0;
    csr_bankarray_csrbank4_ev_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank4_ev_enable0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_ev_enable0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_txempty_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank4_txempty_re <= 1'd0;
    csr_bankarray_csrbank4_txempty_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank4_txempty_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_txempty_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_rxfull_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank4_rxfull_re <= 1'd0;
    csr_bankarray_csrbank4_rxfull_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank4_rxfull_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_rxfull_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_txfull_w = basesoc_uart_txfull_status;
assign basesoc_uart_txfull_we = csr_bankarray_csrbank4_txfull_we;
assign csr_bankarray_csrbank4_rxempty_w = basesoc_uart_rxempty_status;
assign basesoc_uart_rxempty_we = csr_bankarray_csrbank4_rxempty_we;
always @(*) begin
    basesoc_uart_status_status <= 2'd0;
    basesoc_uart_status_status[0] <= basesoc_uart_tx0;
    basesoc_uart_status_status[1] <= basesoc_uart_rx0;
end
assign csr_bankarray_csrbank4_ev_status_w = basesoc_uart_status_status[1:0];
assign basesoc_uart_status_we = csr_bankarray_csrbank4_ev_status_we;
always @(*) begin
    basesoc_uart_pending_status <= 2'd0;
    basesoc_uart_pending_status[0] <= basesoc_uart_tx1;
    basesoc_uart_pending_status[1] <= basesoc_uart_rx1;
end
assign csr_bankarray_csrbank4_ev_pending_w = basesoc_uart_pending_status[1:0];
assign basesoc_uart_pending_we = csr_bankarray_csrbank4_ev_pending_we;
assign basesoc_uart_tx2 = basesoc_uart_enable_storage[0];
assign basesoc_uart_rx2 = basesoc_uart_enable_storage[1];
assign csr_bankarray_csrbank4_ev_enable0_w = basesoc_uart_enable_storage[1:0];
assign csr_bankarray_csrbank4_txempty_w = basesoc_uart_txempty_status;
assign basesoc_uart_txempty_we = csr_bankarray_csrbank4_txempty_we;
assign csr_bankarray_csrbank4_rxfull_w = basesoc_uart_rxfull_status;
assign basesoc_uart_rxfull_we = csr_bankarray_csrbank4_rxfull_we;
assign csr_interconnect_adr = interface1_adr;
assign csr_interconnect_re = interface1_re;
assign csr_interconnect_we = interface1_we;
assign csr_interconnect_dat_w = interface1_dat_w;
assign interface1_dat_r = csr_interconnect_dat_r;
assign csr_bankarray_interface0_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface1_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface2_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface3_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface4_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_sram_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface0_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface1_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface2_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface3_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface4_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_sram_bus_re = csr_interconnect_re;
assign csr_bankarray_interface0_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface1_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface2_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface3_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface4_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_sram_bus_we = csr_interconnect_we;
assign csr_bankarray_interface0_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface1_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface2_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface3_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface4_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_sram_bus_dat_w = csr_interconnect_dat_w;
assign csr_interconnect_dat_r = (((((csr_bankarray_interface0_bank_bus_dat_r | csr_bankarray_interface1_bank_bus_dat_r) | csr_bankarray_interface2_bank_bus_dat_r) | csr_bankarray_interface3_bank_bus_dat_r) | csr_bankarray_interface4_bank_bus_dat_r) | csr_bankarray_sram_bus_dat_r);
always @(*) begin
    rhs_self0 <= 30'd0;
    case (grant)
        default: begin
            rhs_self0 <= basesoc_pbus_adr;
        end
    endcase
end
always @(*) begin
    rhs_self1 <= 32'd0;
    case (grant)
        default: begin
            rhs_self1 <= basesoc_pbus_dat_w;
        end
    endcase
end
always @(*) begin
    rhs_self2 <= 4'd0;
    case (grant)
        default: begin
            rhs_self2 <= basesoc_pbus_sel;
        end
    endcase
end
always @(*) begin
    rhs_self3 <= 1'd0;
    case (grant)
        default: begin
            rhs_self3 <= basesoc_pbus_cyc;
        end
    endcase
end
always @(*) begin
    rhs_self4 <= 1'd0;
    case (grant)
        default: begin
            rhs_self4 <= basesoc_pbus_stb;
        end
    endcase
end
always @(*) begin
    rhs_self5 <= 1'd0;
    case (grant)
        default: begin
            rhs_self5 <= basesoc_pbus_we;
        end
    endcase
end
always @(*) begin
    rhs_self6 <= 3'd0;
    case (grant)
        default: begin
            rhs_self6 <= basesoc_pbus_cti;
        end
    endcase
end
always @(*) begin
    rhs_self7 <= 2'd0;
    case (grant)
        default: begin
            rhs_self7 <= basesoc_pbus_bte;
        end
    endcase
end
always @(*) begin
    rhs_self8 <= 1'd0;
    case (basesoc_choose_cmd_grant)
        1'd0: begin
            rhs_self8 <= basesoc_choose_cmd_valids[0];
        end
        1'd1: begin
            rhs_self8 <= basesoc_choose_cmd_valids[1];
        end
        2'd2: begin
            rhs_self8 <= basesoc_choose_cmd_valids[2];
        end
        2'd3: begin
            rhs_self8 <= basesoc_choose_cmd_valids[3];
        end
        3'd4: begin
            rhs_self8 <= basesoc_choose_cmd_valids[4];
        end
        3'd5: begin
            rhs_self8 <= basesoc_choose_cmd_valids[5];
        end
        3'd6: begin
            rhs_self8 <= basesoc_choose_cmd_valids[6];
        end
        default: begin
            rhs_self8 <= basesoc_choose_cmd_valids[7];
        end
    endcase
end
always @(*) begin
    rhs_self9 <= 14'd0;
    case (basesoc_choose_cmd_grant)
        1'd0: begin
            rhs_self9 <= basesoc_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            rhs_self9 <= basesoc_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            rhs_self9 <= basesoc_bankmachine2_cmd_payload_a;
        end
        2'd3: begin
            rhs_self9 <= basesoc_bankmachine3_cmd_payload_a;
        end
        3'd4: begin
            rhs_self9 <= basesoc_bankmachine4_cmd_payload_a;
        end
        3'd5: begin
            rhs_self9 <= basesoc_bankmachine5_cmd_payload_a;
        end
        3'd6: begin
            rhs_self9 <= basesoc_bankmachine6_cmd_payload_a;
        end
        default: begin
            rhs_self9 <= basesoc_bankmachine7_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    rhs_self10 <= 3'd0;
    case (basesoc_choose_cmd_grant)
        1'd0: begin
            rhs_self10 <= basesoc_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            rhs_self10 <= basesoc_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            rhs_self10 <= basesoc_bankmachine2_cmd_payload_ba;
        end
        2'd3: begin
            rhs_self10 <= basesoc_bankmachine3_cmd_payload_ba;
        end
        3'd4: begin
            rhs_self10 <= basesoc_bankmachine4_cmd_payload_ba;
        end
        3'd5: begin
            rhs_self10 <= basesoc_bankmachine5_cmd_payload_ba;
        end
        3'd6: begin
            rhs_self10 <= basesoc_bankmachine6_cmd_payload_ba;
        end
        default: begin
            rhs_self10 <= basesoc_bankmachine7_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    rhs_self11 <= 1'd0;
    case (basesoc_choose_cmd_grant)
        1'd0: begin
            rhs_self11 <= basesoc_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            rhs_self11 <= basesoc_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            rhs_self11 <= basesoc_bankmachine2_cmd_payload_is_read;
        end
        2'd3: begin
            rhs_self11 <= basesoc_bankmachine3_cmd_payload_is_read;
        end
        3'd4: begin
            rhs_self11 <= basesoc_bankmachine4_cmd_payload_is_read;
        end
        3'd5: begin
            rhs_self11 <= basesoc_bankmachine5_cmd_payload_is_read;
        end
        3'd6: begin
            rhs_self11 <= basesoc_bankmachine6_cmd_payload_is_read;
        end
        default: begin
            rhs_self11 <= basesoc_bankmachine7_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    rhs_self12 <= 1'd0;
    case (basesoc_choose_cmd_grant)
        1'd0: begin
            rhs_self12 <= basesoc_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            rhs_self12 <= basesoc_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            rhs_self12 <= basesoc_bankmachine2_cmd_payload_is_write;
        end
        2'd3: begin
            rhs_self12 <= basesoc_bankmachine3_cmd_payload_is_write;
        end
        3'd4: begin
            rhs_self12 <= basesoc_bankmachine4_cmd_payload_is_write;
        end
        3'd5: begin
            rhs_self12 <= basesoc_bankmachine5_cmd_payload_is_write;
        end
        3'd6: begin
            rhs_self12 <= basesoc_bankmachine6_cmd_payload_is_write;
        end
        default: begin
            rhs_self12 <= basesoc_bankmachine7_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    rhs_self13 <= 1'd0;
    case (basesoc_choose_cmd_grant)
        1'd0: begin
            rhs_self13 <= basesoc_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            rhs_self13 <= basesoc_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            rhs_self13 <= basesoc_bankmachine2_cmd_payload_is_cmd;
        end
        2'd3: begin
            rhs_self13 <= basesoc_bankmachine3_cmd_payload_is_cmd;
        end
        3'd4: begin
            rhs_self13 <= basesoc_bankmachine4_cmd_payload_is_cmd;
        end
        3'd5: begin
            rhs_self13 <= basesoc_bankmachine5_cmd_payload_is_cmd;
        end
        3'd6: begin
            rhs_self13 <= basesoc_bankmachine6_cmd_payload_is_cmd;
        end
        default: begin
            rhs_self13 <= basesoc_bankmachine7_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    t_self0 <= 1'd0;
    case (basesoc_choose_cmd_grant)
        1'd0: begin
            t_self0 <= basesoc_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            t_self0 <= basesoc_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            t_self0 <= basesoc_bankmachine2_cmd_payload_cas;
        end
        2'd3: begin
            t_self0 <= basesoc_bankmachine3_cmd_payload_cas;
        end
        3'd4: begin
            t_self0 <= basesoc_bankmachine4_cmd_payload_cas;
        end
        3'd5: begin
            t_self0 <= basesoc_bankmachine5_cmd_payload_cas;
        end
        3'd6: begin
            t_self0 <= basesoc_bankmachine6_cmd_payload_cas;
        end
        default: begin
            t_self0 <= basesoc_bankmachine7_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    t_self1 <= 1'd0;
    case (basesoc_choose_cmd_grant)
        1'd0: begin
            t_self1 <= basesoc_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            t_self1 <= basesoc_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            t_self1 <= basesoc_bankmachine2_cmd_payload_ras;
        end
        2'd3: begin
            t_self1 <= basesoc_bankmachine3_cmd_payload_ras;
        end
        3'd4: begin
            t_self1 <= basesoc_bankmachine4_cmd_payload_ras;
        end
        3'd5: begin
            t_self1 <= basesoc_bankmachine5_cmd_payload_ras;
        end
        3'd6: begin
            t_self1 <= basesoc_bankmachine6_cmd_payload_ras;
        end
        default: begin
            t_self1 <= basesoc_bankmachine7_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    t_self2 <= 1'd0;
    case (basesoc_choose_cmd_grant)
        1'd0: begin
            t_self2 <= basesoc_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            t_self2 <= basesoc_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            t_self2 <= basesoc_bankmachine2_cmd_payload_we;
        end
        2'd3: begin
            t_self2 <= basesoc_bankmachine3_cmd_payload_we;
        end
        3'd4: begin
            t_self2 <= basesoc_bankmachine4_cmd_payload_we;
        end
        3'd5: begin
            t_self2 <= basesoc_bankmachine5_cmd_payload_we;
        end
        3'd6: begin
            t_self2 <= basesoc_bankmachine6_cmd_payload_we;
        end
        default: begin
            t_self2 <= basesoc_bankmachine7_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self14 <= 1'd0;
    case (basesoc_choose_req_grant)
        1'd0: begin
            rhs_self14 <= basesoc_choose_req_valids[0];
        end
        1'd1: begin
            rhs_self14 <= basesoc_choose_req_valids[1];
        end
        2'd2: begin
            rhs_self14 <= basesoc_choose_req_valids[2];
        end
        2'd3: begin
            rhs_self14 <= basesoc_choose_req_valids[3];
        end
        3'd4: begin
            rhs_self14 <= basesoc_choose_req_valids[4];
        end
        3'd5: begin
            rhs_self14 <= basesoc_choose_req_valids[5];
        end
        3'd6: begin
            rhs_self14 <= basesoc_choose_req_valids[6];
        end
        default: begin
            rhs_self14 <= basesoc_choose_req_valids[7];
        end
    endcase
end
always @(*) begin
    rhs_self15 <= 14'd0;
    case (basesoc_choose_req_grant)
        1'd0: begin
            rhs_self15 <= basesoc_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            rhs_self15 <= basesoc_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            rhs_self15 <= basesoc_bankmachine2_cmd_payload_a;
        end
        2'd3: begin
            rhs_self15 <= basesoc_bankmachine3_cmd_payload_a;
        end
        3'd4: begin
            rhs_self15 <= basesoc_bankmachine4_cmd_payload_a;
        end
        3'd5: begin
            rhs_self15 <= basesoc_bankmachine5_cmd_payload_a;
        end
        3'd6: begin
            rhs_self15 <= basesoc_bankmachine6_cmd_payload_a;
        end
        default: begin
            rhs_self15 <= basesoc_bankmachine7_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    rhs_self16 <= 3'd0;
    case (basesoc_choose_req_grant)
        1'd0: begin
            rhs_self16 <= basesoc_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            rhs_self16 <= basesoc_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            rhs_self16 <= basesoc_bankmachine2_cmd_payload_ba;
        end
        2'd3: begin
            rhs_self16 <= basesoc_bankmachine3_cmd_payload_ba;
        end
        3'd4: begin
            rhs_self16 <= basesoc_bankmachine4_cmd_payload_ba;
        end
        3'd5: begin
            rhs_self16 <= basesoc_bankmachine5_cmd_payload_ba;
        end
        3'd6: begin
            rhs_self16 <= basesoc_bankmachine6_cmd_payload_ba;
        end
        default: begin
            rhs_self16 <= basesoc_bankmachine7_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    rhs_self17 <= 1'd0;
    case (basesoc_choose_req_grant)
        1'd0: begin
            rhs_self17 <= basesoc_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            rhs_self17 <= basesoc_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            rhs_self17 <= basesoc_bankmachine2_cmd_payload_is_read;
        end
        2'd3: begin
            rhs_self17 <= basesoc_bankmachine3_cmd_payload_is_read;
        end
        3'd4: begin
            rhs_self17 <= basesoc_bankmachine4_cmd_payload_is_read;
        end
        3'd5: begin
            rhs_self17 <= basesoc_bankmachine5_cmd_payload_is_read;
        end
        3'd6: begin
            rhs_self17 <= basesoc_bankmachine6_cmd_payload_is_read;
        end
        default: begin
            rhs_self17 <= basesoc_bankmachine7_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    rhs_self18 <= 1'd0;
    case (basesoc_choose_req_grant)
        1'd0: begin
            rhs_self18 <= basesoc_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            rhs_self18 <= basesoc_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            rhs_self18 <= basesoc_bankmachine2_cmd_payload_is_write;
        end
        2'd3: begin
            rhs_self18 <= basesoc_bankmachine3_cmd_payload_is_write;
        end
        3'd4: begin
            rhs_self18 <= basesoc_bankmachine4_cmd_payload_is_write;
        end
        3'd5: begin
            rhs_self18 <= basesoc_bankmachine5_cmd_payload_is_write;
        end
        3'd6: begin
            rhs_self18 <= basesoc_bankmachine6_cmd_payload_is_write;
        end
        default: begin
            rhs_self18 <= basesoc_bankmachine7_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    rhs_self19 <= 1'd0;
    case (basesoc_choose_req_grant)
        1'd0: begin
            rhs_self19 <= basesoc_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            rhs_self19 <= basesoc_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            rhs_self19 <= basesoc_bankmachine2_cmd_payload_is_cmd;
        end
        2'd3: begin
            rhs_self19 <= basesoc_bankmachine3_cmd_payload_is_cmd;
        end
        3'd4: begin
            rhs_self19 <= basesoc_bankmachine4_cmd_payload_is_cmd;
        end
        3'd5: begin
            rhs_self19 <= basesoc_bankmachine5_cmd_payload_is_cmd;
        end
        3'd6: begin
            rhs_self19 <= basesoc_bankmachine6_cmd_payload_is_cmd;
        end
        default: begin
            rhs_self19 <= basesoc_bankmachine7_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    t_self3 <= 1'd0;
    case (basesoc_choose_req_grant)
        1'd0: begin
            t_self3 <= basesoc_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            t_self3 <= basesoc_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            t_self3 <= basesoc_bankmachine2_cmd_payload_cas;
        end
        2'd3: begin
            t_self3 <= basesoc_bankmachine3_cmd_payload_cas;
        end
        3'd4: begin
            t_self3 <= basesoc_bankmachine4_cmd_payload_cas;
        end
        3'd5: begin
            t_self3 <= basesoc_bankmachine5_cmd_payload_cas;
        end
        3'd6: begin
            t_self3 <= basesoc_bankmachine6_cmd_payload_cas;
        end
        default: begin
            t_self3 <= basesoc_bankmachine7_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    t_self4 <= 1'd0;
    case (basesoc_choose_req_grant)
        1'd0: begin
            t_self4 <= basesoc_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            t_self4 <= basesoc_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            t_self4 <= basesoc_bankmachine2_cmd_payload_ras;
        end
        2'd3: begin
            t_self4 <= basesoc_bankmachine3_cmd_payload_ras;
        end
        3'd4: begin
            t_self4 <= basesoc_bankmachine4_cmd_payload_ras;
        end
        3'd5: begin
            t_self4 <= basesoc_bankmachine5_cmd_payload_ras;
        end
        3'd6: begin
            t_self4 <= basesoc_bankmachine6_cmd_payload_ras;
        end
        default: begin
            t_self4 <= basesoc_bankmachine7_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    t_self5 <= 1'd0;
    case (basesoc_choose_req_grant)
        1'd0: begin
            t_self5 <= basesoc_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            t_self5 <= basesoc_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            t_self5 <= basesoc_bankmachine2_cmd_payload_we;
        end
        2'd3: begin
            t_self5 <= basesoc_bankmachine3_cmd_payload_we;
        end
        3'd4: begin
            t_self5 <= basesoc_bankmachine4_cmd_payload_we;
        end
        3'd5: begin
            t_self5 <= basesoc_bankmachine5_cmd_payload_we;
        end
        3'd6: begin
            t_self5 <= basesoc_bankmachine6_cmd_payload_we;
        end
        default: begin
            t_self5 <= basesoc_bankmachine7_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self20 <= 21'd0;
    case (roundrobin0_grant)
        1'd0: begin
            rhs_self20 <= {basesoc_litedramnativeport0_cmd_payload_addr[23:10], basesoc_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_self20 <= {basesoc_litedramnativeport1_cmd_payload_addr[23:10], basesoc_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_self20 <= {basesoc_litedramnativeport2_cmd_payload_addr[23:10], basesoc_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self21 <= 1'd0;
    case (roundrobin0_grant)
        1'd0: begin
            rhs_self21 <= basesoc_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_self21 <= basesoc_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_self21 <= basesoc_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self22 <= 1'd0;
    case (roundrobin0_grant)
        1'd0: begin
            rhs_self22 <= (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked0 | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_self22 <= (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked1 | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_self22 <= (((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked2 | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_self23 <= 21'd0;
    case (roundrobin1_grant)
        1'd0: begin
            rhs_self23 <= {basesoc_litedramnativeport0_cmd_payload_addr[23:10], basesoc_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_self23 <= {basesoc_litedramnativeport1_cmd_payload_addr[23:10], basesoc_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_self23 <= {basesoc_litedramnativeport2_cmd_payload_addr[23:10], basesoc_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self24 <= 1'd0;
    case (roundrobin1_grant)
        1'd0: begin
            rhs_self24 <= basesoc_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_self24 <= basesoc_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_self24 <= basesoc_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self25 <= 1'd0;
    case (roundrobin1_grant)
        1'd0: begin
            rhs_self25 <= (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked3 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_self25 <= (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked4 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_self25 <= (((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked5 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_self26 <= 21'd0;
    case (roundrobin2_grant)
        1'd0: begin
            rhs_self26 <= {basesoc_litedramnativeport0_cmd_payload_addr[23:10], basesoc_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_self26 <= {basesoc_litedramnativeport1_cmd_payload_addr[23:10], basesoc_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_self26 <= {basesoc_litedramnativeport2_cmd_payload_addr[23:10], basesoc_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self27 <= 1'd0;
    case (roundrobin2_grant)
        1'd0: begin
            rhs_self27 <= basesoc_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_self27 <= basesoc_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_self27 <= basesoc_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self28 <= 1'd0;
    case (roundrobin2_grant)
        1'd0: begin
            rhs_self28 <= (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked6 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_self28 <= (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked7 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_self28 <= (((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked8 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_self29 <= 21'd0;
    case (roundrobin3_grant)
        1'd0: begin
            rhs_self29 <= {basesoc_litedramnativeport0_cmd_payload_addr[23:10], basesoc_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_self29 <= {basesoc_litedramnativeport1_cmd_payload_addr[23:10], basesoc_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_self29 <= {basesoc_litedramnativeport2_cmd_payload_addr[23:10], basesoc_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self30 <= 1'd0;
    case (roundrobin3_grant)
        1'd0: begin
            rhs_self30 <= basesoc_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_self30 <= basesoc_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_self30 <= basesoc_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self31 <= 1'd0;
    case (roundrobin3_grant)
        1'd0: begin
            rhs_self31 <= (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked9 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_self31 <= (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked10 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_self31 <= (((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked11 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_self32 <= 21'd0;
    case (roundrobin4_grant)
        1'd0: begin
            rhs_self32 <= {basesoc_litedramnativeport0_cmd_payload_addr[23:10], basesoc_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_self32 <= {basesoc_litedramnativeport1_cmd_payload_addr[23:10], basesoc_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_self32 <= {basesoc_litedramnativeport2_cmd_payload_addr[23:10], basesoc_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self33 <= 1'd0;
    case (roundrobin4_grant)
        1'd0: begin
            rhs_self33 <= basesoc_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_self33 <= basesoc_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_self33 <= basesoc_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self34 <= 1'd0;
    case (roundrobin4_grant)
        1'd0: begin
            rhs_self34 <= (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked12 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_self34 <= (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked13 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_self34 <= (((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked14 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_self35 <= 21'd0;
    case (roundrobin5_grant)
        1'd0: begin
            rhs_self35 <= {basesoc_litedramnativeport0_cmd_payload_addr[23:10], basesoc_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_self35 <= {basesoc_litedramnativeport1_cmd_payload_addr[23:10], basesoc_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_self35 <= {basesoc_litedramnativeport2_cmd_payload_addr[23:10], basesoc_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self36 <= 1'd0;
    case (roundrobin5_grant)
        1'd0: begin
            rhs_self36 <= basesoc_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_self36 <= basesoc_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_self36 <= basesoc_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self37 <= 1'd0;
    case (roundrobin5_grant)
        1'd0: begin
            rhs_self37 <= (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked15 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_self37 <= (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked16 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_self37 <= (((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked17 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_self38 <= 21'd0;
    case (roundrobin6_grant)
        1'd0: begin
            rhs_self38 <= {basesoc_litedramnativeport0_cmd_payload_addr[23:10], basesoc_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_self38 <= {basesoc_litedramnativeport1_cmd_payload_addr[23:10], basesoc_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_self38 <= {basesoc_litedramnativeport2_cmd_payload_addr[23:10], basesoc_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self39 <= 1'd0;
    case (roundrobin6_grant)
        1'd0: begin
            rhs_self39 <= basesoc_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_self39 <= basesoc_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_self39 <= basesoc_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self40 <= 1'd0;
    case (roundrobin6_grant)
        1'd0: begin
            rhs_self40 <= (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked18 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_self40 <= (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked19 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_self40 <= (((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked20 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_self41 <= 21'd0;
    case (roundrobin7_grant)
        1'd0: begin
            rhs_self41 <= {basesoc_litedramnativeport0_cmd_payload_addr[23:10], basesoc_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_self41 <= {basesoc_litedramnativeport1_cmd_payload_addr[23:10], basesoc_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_self41 <= {basesoc_litedramnativeport2_cmd_payload_addr[23:10], basesoc_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self42 <= 1'd0;
    case (roundrobin7_grant)
        1'd0: begin
            rhs_self42 <= basesoc_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_self42 <= basesoc_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_self42 <= basesoc_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self43 <= 1'd0;
    case (roundrobin7_grant)
        1'd0: begin
            rhs_self43 <= (((basesoc_litedramnativeport0_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked21 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd0))))) & basesoc_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_self43 <= (((basesoc_litedramnativeport1_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked22 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 1'd1))))) & basesoc_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_self43 <= (((basesoc_litedramnativeport2_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked23 | (basesoc_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (basesoc_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (basesoc_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (basesoc_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (basesoc_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (basesoc_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (basesoc_interface_bank6_lock & (roundrobin6_grant == 2'd2))))) & basesoc_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    self0 <= 3'd0;
    case (basesoc_steerer0)
        1'd0: begin
            self0 <= basesoc_nop_ba[2:0];
        end
        1'd1: begin
            self0 <= basesoc_choose_cmd_cmd_payload_ba[2:0];
        end
        2'd2: begin
            self0 <= basesoc_choose_req_cmd_payload_ba[2:0];
        end
        default: begin
            self0 <= basesoc_cmd_payload_ba[2:0];
        end
    endcase
end
always @(*) begin
    self1 <= 14'd0;
    case (basesoc_steerer0)
        1'd0: begin
            self1 <= basesoc_nop_a;
        end
        1'd1: begin
            self1 <= basesoc_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            self1 <= basesoc_choose_req_cmd_payload_a;
        end
        default: begin
            self1 <= basesoc_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    self2 <= 1'd0;
    case (basesoc_steerer0)
        1'd0: begin
            self2 <= 1'd0;
        end
        1'd1: begin
            self2 <= ((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & basesoc_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            self2 <= ((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & basesoc_choose_req_cmd_payload_cas);
        end
        default: begin
            self2 <= ((basesoc_cmd_valid & basesoc_cmd_ready) & basesoc_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    self3 <= 1'd0;
    case (basesoc_steerer0)
        1'd0: begin
            self3 <= 1'd0;
        end
        1'd1: begin
            self3 <= ((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & basesoc_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            self3 <= ((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & basesoc_choose_req_cmd_payload_ras);
        end
        default: begin
            self3 <= ((basesoc_cmd_valid & basesoc_cmd_ready) & basesoc_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    self4 <= 1'd0;
    case (basesoc_steerer0)
        1'd0: begin
            self4 <= 1'd0;
        end
        1'd1: begin
            self4 <= ((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & basesoc_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            self4 <= ((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & basesoc_choose_req_cmd_payload_we);
        end
        default: begin
            self4 <= ((basesoc_cmd_valid & basesoc_cmd_ready) & basesoc_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    self5 <= 1'd0;
    case (basesoc_steerer0)
        1'd0: begin
            self5 <= 1'd0;
        end
        1'd1: begin
            self5 <= ((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & basesoc_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            self5 <= ((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & basesoc_choose_req_cmd_payload_is_read);
        end
        default: begin
            self5 <= ((basesoc_cmd_valid & basesoc_cmd_ready) & basesoc_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    self6 <= 1'd0;
    case (basesoc_steerer0)
        1'd0: begin
            self6 <= 1'd0;
        end
        1'd1: begin
            self6 <= ((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & basesoc_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            self6 <= ((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & basesoc_choose_req_cmd_payload_is_write);
        end
        default: begin
            self6 <= ((basesoc_cmd_valid & basesoc_cmd_ready) & basesoc_cmd_payload_is_write);
        end
    endcase
end
always @(*) begin
    self7 <= 3'd0;
    case (basesoc_steerer1)
        1'd0: begin
            self7 <= basesoc_nop_ba[2:0];
        end
        1'd1: begin
            self7 <= basesoc_choose_cmd_cmd_payload_ba[2:0];
        end
        2'd2: begin
            self7 <= basesoc_choose_req_cmd_payload_ba[2:0];
        end
        default: begin
            self7 <= basesoc_cmd_payload_ba[2:0];
        end
    endcase
end
always @(*) begin
    self8 <= 14'd0;
    case (basesoc_steerer1)
        1'd0: begin
            self8 <= basesoc_nop_a;
        end
        1'd1: begin
            self8 <= basesoc_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            self8 <= basesoc_choose_req_cmd_payload_a;
        end
        default: begin
            self8 <= basesoc_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    self9 <= 1'd0;
    case (basesoc_steerer1)
        1'd0: begin
            self9 <= 1'd0;
        end
        1'd1: begin
            self9 <= ((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & basesoc_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            self9 <= ((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & basesoc_choose_req_cmd_payload_cas);
        end
        default: begin
            self9 <= ((basesoc_cmd_valid & basesoc_cmd_ready) & basesoc_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    self10 <= 1'd0;
    case (basesoc_steerer1)
        1'd0: begin
            self10 <= 1'd0;
        end
        1'd1: begin
            self10 <= ((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & basesoc_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            self10 <= ((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & basesoc_choose_req_cmd_payload_ras);
        end
        default: begin
            self10 <= ((basesoc_cmd_valid & basesoc_cmd_ready) & basesoc_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    self11 <= 1'd0;
    case (basesoc_steerer1)
        1'd0: begin
            self11 <= 1'd0;
        end
        1'd1: begin
            self11 <= ((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & basesoc_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            self11 <= ((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & basesoc_choose_req_cmd_payload_we);
        end
        default: begin
            self11 <= ((basesoc_cmd_valid & basesoc_cmd_ready) & basesoc_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    self12 <= 1'd0;
    case (basesoc_steerer1)
        1'd0: begin
            self12 <= 1'd0;
        end
        1'd1: begin
            self12 <= ((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & basesoc_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            self12 <= ((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & basesoc_choose_req_cmd_payload_is_read);
        end
        default: begin
            self12 <= ((basesoc_cmd_valid & basesoc_cmd_ready) & basesoc_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    self13 <= 1'd0;
    case (basesoc_steerer1)
        1'd0: begin
            self13 <= 1'd0;
        end
        1'd1: begin
            self13 <= ((basesoc_choose_cmd_cmd_valid & basesoc_choose_cmd_cmd_ready) & basesoc_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            self13 <= ((basesoc_choose_req_cmd_valid & basesoc_choose_req_cmd_ready) & basesoc_choose_req_cmd_payload_is_write);
        end
        default: begin
            self13 <= ((basesoc_cmd_valid & basesoc_cmd_ready) & basesoc_cmd_payload_is_write);
        end
    endcase
end
assign basesoc_rx_rx = multiregimpl01;
assign gw5ddrphy_lock1 = multiregimpl11;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge init_clk) begin
    gw5ddrphy_lock_d <= gw5ddrphy_lock1;
    if ((gw5ddrphy_trigger == 4'd8)) begin
        gw5ddrphy_freeze <= 1'd1;
    end
    if ((gw5ddrphy_trigger == 5'd16)) begin
        gw5ddrphy_stop1 <= 1'd1;
    end
    if ((gw5ddrphy_trigger == 5'd24)) begin
        gw5ddrphy_reset1 <= 1'd1;
    end
    if ((gw5ddrphy_trigger == 6'd32)) begin
        gw5ddrphy_reset1 <= 1'd0;
    end
    if ((gw5ddrphy_trigger == 6'd40)) begin
        gw5ddrphy_stop1 <= 1'd0;
    end
    if ((gw5ddrphy_trigger == 6'd48)) begin
        gw5ddrphy_freeze <= 1'd0;
    end
    if ((gw5ddrphy_trigger == 6'd56)) begin
        gw5ddrphy_pause1 <= 1'd1;
    end
    if ((gw5ddrphy_trigger == 7'd64)) begin
        gw5ddrphy_update <= 1'd1;
    end
    if ((gw5ddrphy_trigger == 7'd72)) begin
        gw5ddrphy_update <= 1'd0;
    end
    if ((gw5ddrphy_trigger == 7'd80)) begin
        gw5ddrphy_pause1 <= 1'd0;
    end
    if ((gw5ddrphy_trigger == 7'd80)) begin
        gw5ddrphy_trigger <= 1'd0;
    end else begin
        if ((gw5ddrphy_trigger != 1'd0)) begin
            gw5ddrphy_trigger <= (gw5ddrphy_trigger + 1'd1);
        end else begin
            if (gw5ddrphy_new_lock) begin
                gw5ddrphy_trigger <= 1'd1;
            end
        end
    end
    if (init_rst) begin
        gw5ddrphy_update <= 1'd0;
        gw5ddrphy_stop1 <= 1'd0;
        gw5ddrphy_freeze <= 1'd0;
        gw5ddrphy_pause1 <= 1'd0;
        gw5ddrphy_reset1 <= 1'd0;
        gw5ddrphy_lock_d <= 1'd0;
        gw5ddrphy_trigger <= 7'd0;
    end
    multiregimpl10 <= gw5ddrphy_lock0;
    multiregimpl11 <= multiregimpl10;
end

always @(posedge por_clk) begin
    if ((~crg_por_done)) begin
        crg_por_count <= (crg_por_count - 1'd1);
    end
    if (por_rst) begin
        crg_por_count <= 16'd65535;
    end
end

always @(posedge sys_clk) begin
    slave_sel_r <= slave_sel;
    if (wait_1) begin
        if ((~done)) begin
            count <= (count - 1'd1);
        end
    end else begin
        count <= 20'd1000000;
    end
    if ((basesoc_bus_errors != 32'd4294967295)) begin
        if (basesoc_bus_error) begin
            basesoc_bus_errors <= (basesoc_bus_errors + 1'd1);
        end
    end
    basesoc_basesoc_ram_bus_ack <= 1'd0;
    if (((basesoc_basesoc_ram_bus_cyc & basesoc_basesoc_ram_bus_stb) & ((~basesoc_basesoc_ram_bus_ack) | basesoc_basesoc_adr_burst))) begin
        basesoc_basesoc_ram_bus_ack <= 1'd1;
    end
    basesoc_ram_bus_ram_bus_ack <= 1'd0;
    if (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & ((~basesoc_ram_bus_ram_bus_ack) | basesoc_ram_adr_burst))) begin
        basesoc_ram_bus_ram_bus_ack <= 1'd1;
    end
    {basesoc_tx_tick, basesoc_tx_phase} <= 24'd9895604;
    if (basesoc_tx_enable) begin
        {basesoc_tx_tick, basesoc_tx_phase} <= (basesoc_tx_phase + 24'd9895604);
    end
    rs232phytx_state <= rs232phytx_next_state;
    if (basesoc_tx_count_rs232phytx_next_value_ce0) begin
        basesoc_tx_count <= basesoc_tx_count_rs232phytx_next_value0;
    end
    if (basesoc_serial_tx_rs232phytx_next_value_ce1) begin
        serial_tx <= basesoc_serial_tx_rs232phytx_next_value1;
    end
    if (basesoc_tx_data_rs232phytx_next_value_ce2) begin
        basesoc_tx_data <= basesoc_tx_data_rs232phytx_next_value2;
    end
    basesoc_rx_rx_d <= basesoc_rx_rx;
    {basesoc_rx_tick, basesoc_rx_phase} <= 32'd2147483648;
    if (basesoc_rx_enable) begin
        {basesoc_rx_tick, basesoc_rx_phase} <= (basesoc_rx_phase + 24'd9895604);
    end
    rs232phyrx_state <= rs232phyrx_next_state;
    if (basesoc_rx_count_rs232phyrx_next_value_ce0) begin
        basesoc_rx_count <= basesoc_rx_count_rs232phyrx_next_value0;
    end
    if (basesoc_rx_data_rs232phyrx_next_value_ce1) begin
        basesoc_rx_data <= basesoc_rx_data_rs232phyrx_next_value1;
    end
    if (basesoc_uart_tx_clear) begin
        basesoc_uart_tx_pending <= 1'd0;
    end
    basesoc_uart_tx_trigger_d <= basesoc_uart_tx_trigger;
    if ((basesoc_uart_tx_trigger & (~basesoc_uart_tx_trigger_d))) begin
        basesoc_uart_tx_pending <= 1'd1;
    end
    if (basesoc_uart_rx_clear) begin
        basesoc_uart_rx_pending <= 1'd0;
    end
    basesoc_uart_rx_trigger_d <= basesoc_uart_rx_trigger;
    if ((basesoc_uart_rx_trigger & (~basesoc_uart_rx_trigger_d))) begin
        basesoc_uart_rx_pending <= 1'd1;
    end
    if (basesoc_uart_tx_fifo_syncfifo_re) begin
        basesoc_uart_tx_fifo_readable <= 1'd1;
    end else begin
        if (basesoc_uart_tx_fifo_re) begin
            basesoc_uart_tx_fifo_readable <= 1'd0;
        end
    end
    if (((basesoc_uart_tx_fifo_syncfifo_we & basesoc_uart_tx_fifo_syncfifo_writable) & (~basesoc_uart_tx_fifo_replace))) begin
        basesoc_uart_tx_fifo_produce <= (basesoc_uart_tx_fifo_produce + 1'd1);
    end
    if (basesoc_uart_tx_fifo_do_read) begin
        basesoc_uart_tx_fifo_consume <= (basesoc_uart_tx_fifo_consume + 1'd1);
    end
    if (((basesoc_uart_tx_fifo_syncfifo_we & basesoc_uart_tx_fifo_syncfifo_writable) & (~basesoc_uart_tx_fifo_replace))) begin
        if ((~basesoc_uart_tx_fifo_do_read)) begin
            basesoc_uart_tx_fifo_level0 <= (basesoc_uart_tx_fifo_level0 + 1'd1);
        end
    end else begin
        if (basesoc_uart_tx_fifo_do_read) begin
            basesoc_uart_tx_fifo_level0 <= (basesoc_uart_tx_fifo_level0 - 1'd1);
        end
    end
    if (basesoc_uart_rx_fifo_syncfifo_re) begin
        basesoc_uart_rx_fifo_readable <= 1'd1;
    end else begin
        if (basesoc_uart_rx_fifo_re) begin
            basesoc_uart_rx_fifo_readable <= 1'd0;
        end
    end
    if (((basesoc_uart_rx_fifo_syncfifo_we & basesoc_uart_rx_fifo_syncfifo_writable) & (~basesoc_uart_rx_fifo_replace))) begin
        basesoc_uart_rx_fifo_produce <= (basesoc_uart_rx_fifo_produce + 1'd1);
    end
    if (basesoc_uart_rx_fifo_do_read) begin
        basesoc_uart_rx_fifo_consume <= (basesoc_uart_rx_fifo_consume + 1'd1);
    end
    if (((basesoc_uart_rx_fifo_syncfifo_we & basesoc_uart_rx_fifo_syncfifo_writable) & (~basesoc_uart_rx_fifo_replace))) begin
        if ((~basesoc_uart_rx_fifo_do_read)) begin
            basesoc_uart_rx_fifo_level0 <= (basesoc_uart_rx_fifo_level0 + 1'd1);
        end
    end else begin
        if (basesoc_uart_rx_fifo_do_read) begin
            basesoc_uart_rx_fifo_level0 <= (basesoc_uart_rx_fifo_level0 - 1'd1);
        end
    end
    if (basesoc_timer_en_storage) begin
        if ((basesoc_timer_value == 1'd0)) begin
            basesoc_timer_value <= basesoc_timer_reload_storage;
        end else begin
            basesoc_timer_value <= (basesoc_timer_value - 1'd1);
        end
    end else begin
        basesoc_timer_value <= basesoc_timer_load_storage;
    end
    if (basesoc_timer_update_value_re) begin
        basesoc_timer_value_status <= basesoc_timer_value;
    end
    if (basesoc_timer_zero_clear) begin
        basesoc_timer_zero_pending <= 1'd0;
    end
    basesoc_timer_zero_trigger_d <= basesoc_timer_zero_trigger;
    if ((basesoc_timer_zero_trigger & (~basesoc_timer_zero_trigger_d))) begin
        basesoc_timer_zero_pending <= 1'd1;
    end
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_rst_re)) begin
        gw5ddrphy_rdly0 <= 1'd0;
    end
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_inc_re)) begin
        gw5ddrphy_rdly0 <= (gw5ddrphy_rdly0 + 1'd1);
    end
    gw5ddrphy_burstdet_d0 <= gw5ddrphy_burstdet0;
    if (gw5ddrphy_burstdet_clr_re) begin
        gw5ddrphy_burstdet_seen_status[0] <= 1'd0;
    end
    if ((gw5ddrphy_burstdet0 & (~gw5ddrphy_burstdet_d0))) begin
        gw5ddrphy_burstdet_seen_status[0] <= 1'd1;
    end
    gw5ddrphy_dm_o_data_d0 <= gw5ddrphy_dm_o_data0;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dm_o_data_muxed0 <= gw5ddrphy_dm_o_data0[3:0];
        end
        1'd1: begin
            gw5ddrphy_dm_o_data_muxed0 <= gw5ddrphy_dm_o_data_d0[7:4];
        end
    endcase
    gw5ddrphy_dq_o_data_d0 <= gw5ddrphy_dq_o_data0;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed0 <= gw5ddrphy_dq_o_data0[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed0 <= gw5ddrphy_dq_o_data_d0[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d0 <= gw5ddrphy_bitslip0_o;
    gw5ddrphy_dq_o_data_d1 <= gw5ddrphy_dq_o_data1;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed1 <= gw5ddrphy_dq_o_data1[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed1 <= gw5ddrphy_dq_o_data_d1[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d1 <= gw5ddrphy_bitslip1_o;
    gw5ddrphy_dq_o_data_d2 <= gw5ddrphy_dq_o_data2;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed2 <= gw5ddrphy_dq_o_data2[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed2 <= gw5ddrphy_dq_o_data_d2[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d2 <= gw5ddrphy_bitslip2_o;
    gw5ddrphy_dq_o_data_d3 <= gw5ddrphy_dq_o_data3;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed3 <= gw5ddrphy_dq_o_data3[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed3 <= gw5ddrphy_dq_o_data_d3[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d3 <= gw5ddrphy_bitslip3_o;
    gw5ddrphy_dq_o_data_d4 <= gw5ddrphy_dq_o_data4;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed4 <= gw5ddrphy_dq_o_data4[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed4 <= gw5ddrphy_dq_o_data_d4[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d4 <= gw5ddrphy_bitslip4_o;
    gw5ddrphy_dq_o_data_d5 <= gw5ddrphy_dq_o_data5;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed5 <= gw5ddrphy_dq_o_data5[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed5 <= gw5ddrphy_dq_o_data_d5[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d5 <= gw5ddrphy_bitslip5_o;
    gw5ddrphy_dq_o_data_d6 <= gw5ddrphy_dq_o_data6;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed6 <= gw5ddrphy_dq_o_data6[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed6 <= gw5ddrphy_dq_o_data_d6[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d6 <= gw5ddrphy_bitslip6_o;
    gw5ddrphy_dq_o_data_d7 <= gw5ddrphy_dq_o_data7;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed7 <= gw5ddrphy_dq_o_data7[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed7 <= gw5ddrphy_dq_o_data_d7[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d7 <= gw5ddrphy_bitslip7_o;
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_rst_re)) begin
        gw5ddrphy_rdly1 <= 1'd0;
    end
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_inc_re)) begin
        gw5ddrphy_rdly1 <= (gw5ddrphy_rdly1 + 1'd1);
    end
    gw5ddrphy_burstdet_d1 <= gw5ddrphy_burstdet1;
    if (gw5ddrphy_burstdet_clr_re) begin
        gw5ddrphy_burstdet_seen_status[1] <= 1'd0;
    end
    if ((gw5ddrphy_burstdet1 & (~gw5ddrphy_burstdet_d1))) begin
        gw5ddrphy_burstdet_seen_status[1] <= 1'd1;
    end
    gw5ddrphy_dm_o_data_d1 <= gw5ddrphy_dm_o_data1;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dm_o_data_muxed1 <= gw5ddrphy_dm_o_data1[3:0];
        end
        1'd1: begin
            gw5ddrphy_dm_o_data_muxed1 <= gw5ddrphy_dm_o_data_d1[7:4];
        end
    endcase
    gw5ddrphy_dq_o_data_d8 <= gw5ddrphy_dq_o_data8;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed8 <= gw5ddrphy_dq_o_data8[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed8 <= gw5ddrphy_dq_o_data_d8[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d8 <= gw5ddrphy_bitslip8_o;
    gw5ddrphy_dq_o_data_d9 <= gw5ddrphy_dq_o_data9;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed9 <= gw5ddrphy_dq_o_data9[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed9 <= gw5ddrphy_dq_o_data_d9[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d9 <= gw5ddrphy_bitslip9_o;
    gw5ddrphy_dq_o_data_d10 <= gw5ddrphy_dq_o_data10;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed10 <= gw5ddrphy_dq_o_data10[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed10 <= gw5ddrphy_dq_o_data_d10[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d10 <= gw5ddrphy_bitslip10_o;
    gw5ddrphy_dq_o_data_d11 <= gw5ddrphy_dq_o_data11;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed11 <= gw5ddrphy_dq_o_data11[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed11 <= gw5ddrphy_dq_o_data_d11[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d11 <= gw5ddrphy_bitslip11_o;
    gw5ddrphy_dq_o_data_d12 <= gw5ddrphy_dq_o_data12;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed12 <= gw5ddrphy_dq_o_data12[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed12 <= gw5ddrphy_dq_o_data_d12[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d12 <= gw5ddrphy_bitslip12_o;
    gw5ddrphy_dq_o_data_d13 <= gw5ddrphy_dq_o_data13;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed13 <= gw5ddrphy_dq_o_data13[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed13 <= gw5ddrphy_dq_o_data_d13[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d13 <= gw5ddrphy_bitslip13_o;
    gw5ddrphy_dq_o_data_d14 <= gw5ddrphy_dq_o_data14;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed14 <= gw5ddrphy_dq_o_data14[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed14 <= gw5ddrphy_dq_o_data_d14[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d14 <= gw5ddrphy_bitslip14_o;
    gw5ddrphy_dq_o_data_d15 <= gw5ddrphy_dq_o_data15;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed15 <= gw5ddrphy_dq_o_data15[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed15 <= gw5ddrphy_dq_o_data_d15[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d15 <= gw5ddrphy_bitslip15_o;
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_rst_re)) begin
        gw5ddrphy_rdly2 <= 1'd0;
    end
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_inc_re)) begin
        gw5ddrphy_rdly2 <= (gw5ddrphy_rdly2 + 1'd1);
    end
    gw5ddrphy_burstdet_d2 <= gw5ddrphy_burstdet2;
    if (gw5ddrphy_burstdet_clr_re) begin
        gw5ddrphy_burstdet_seen_status[2] <= 1'd0;
    end
    if ((gw5ddrphy_burstdet2 & (~gw5ddrphy_burstdet_d2))) begin
        gw5ddrphy_burstdet_seen_status[2] <= 1'd1;
    end
    gw5ddrphy_dm_o_data_d2 <= gw5ddrphy_dm_o_data2;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dm_o_data_muxed2 <= gw5ddrphy_dm_o_data2[3:0];
        end
        1'd1: begin
            gw5ddrphy_dm_o_data_muxed2 <= gw5ddrphy_dm_o_data_d2[7:4];
        end
    endcase
    gw5ddrphy_dq_o_data_d16 <= gw5ddrphy_dq_o_data16;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed16 <= gw5ddrphy_dq_o_data16[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed16 <= gw5ddrphy_dq_o_data_d16[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d16 <= gw5ddrphy_bitslip16_o;
    gw5ddrphy_dq_o_data_d17 <= gw5ddrphy_dq_o_data17;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed17 <= gw5ddrphy_dq_o_data17[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed17 <= gw5ddrphy_dq_o_data_d17[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d17 <= gw5ddrphy_bitslip17_o;
    gw5ddrphy_dq_o_data_d18 <= gw5ddrphy_dq_o_data18;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed18 <= gw5ddrphy_dq_o_data18[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed18 <= gw5ddrphy_dq_o_data_d18[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d18 <= gw5ddrphy_bitslip18_o;
    gw5ddrphy_dq_o_data_d19 <= gw5ddrphy_dq_o_data19;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed19 <= gw5ddrphy_dq_o_data19[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed19 <= gw5ddrphy_dq_o_data_d19[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d19 <= gw5ddrphy_bitslip19_o;
    gw5ddrphy_dq_o_data_d20 <= gw5ddrphy_dq_o_data20;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed20 <= gw5ddrphy_dq_o_data20[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed20 <= gw5ddrphy_dq_o_data_d20[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d20 <= gw5ddrphy_bitslip20_o;
    gw5ddrphy_dq_o_data_d21 <= gw5ddrphy_dq_o_data21;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed21 <= gw5ddrphy_dq_o_data21[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed21 <= gw5ddrphy_dq_o_data_d21[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d21 <= gw5ddrphy_bitslip21_o;
    gw5ddrphy_dq_o_data_d22 <= gw5ddrphy_dq_o_data22;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed22 <= gw5ddrphy_dq_o_data22[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed22 <= gw5ddrphy_dq_o_data_d22[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d22 <= gw5ddrphy_bitslip22_o;
    gw5ddrphy_dq_o_data_d23 <= gw5ddrphy_dq_o_data23;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed23 <= gw5ddrphy_dq_o_data23[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed23 <= gw5ddrphy_dq_o_data_d23[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d23 <= gw5ddrphy_bitslip23_o;
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_rst_re)) begin
        gw5ddrphy_rdly3 <= 1'd0;
    end
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_inc_re)) begin
        gw5ddrphy_rdly3 <= (gw5ddrphy_rdly3 + 1'd1);
    end
    gw5ddrphy_burstdet_d3 <= gw5ddrphy_burstdet3;
    if (gw5ddrphy_burstdet_clr_re) begin
        gw5ddrphy_burstdet_seen_status[3] <= 1'd0;
    end
    if ((gw5ddrphy_burstdet3 & (~gw5ddrphy_burstdet_d3))) begin
        gw5ddrphy_burstdet_seen_status[3] <= 1'd1;
    end
    gw5ddrphy_dm_o_data_d3 <= gw5ddrphy_dm_o_data3;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dm_o_data_muxed3 <= gw5ddrphy_dm_o_data3[3:0];
        end
        1'd1: begin
            gw5ddrphy_dm_o_data_muxed3 <= gw5ddrphy_dm_o_data_d3[7:4];
        end
    endcase
    gw5ddrphy_dq_o_data_d24 <= gw5ddrphy_dq_o_data24;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed24 <= gw5ddrphy_dq_o_data24[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed24 <= gw5ddrphy_dq_o_data_d24[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d24 <= gw5ddrphy_bitslip24_o;
    gw5ddrphy_dq_o_data_d25 <= gw5ddrphy_dq_o_data25;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed25 <= gw5ddrphy_dq_o_data25[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed25 <= gw5ddrphy_dq_o_data_d25[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d25 <= gw5ddrphy_bitslip25_o;
    gw5ddrphy_dq_o_data_d26 <= gw5ddrphy_dq_o_data26;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed26 <= gw5ddrphy_dq_o_data26[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed26 <= gw5ddrphy_dq_o_data_d26[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d26 <= gw5ddrphy_bitslip26_o;
    gw5ddrphy_dq_o_data_d27 <= gw5ddrphy_dq_o_data27;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed27 <= gw5ddrphy_dq_o_data27[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed27 <= gw5ddrphy_dq_o_data_d27[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d27 <= gw5ddrphy_bitslip27_o;
    gw5ddrphy_dq_o_data_d28 <= gw5ddrphy_dq_o_data28;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed28 <= gw5ddrphy_dq_o_data28[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed28 <= gw5ddrphy_dq_o_data_d28[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d28 <= gw5ddrphy_bitslip28_o;
    gw5ddrphy_dq_o_data_d29 <= gw5ddrphy_dq_o_data29;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed29 <= gw5ddrphy_dq_o_data29[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed29 <= gw5ddrphy_dq_o_data_d29[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d29 <= gw5ddrphy_bitslip29_o;
    gw5ddrphy_dq_o_data_d30 <= gw5ddrphy_dq_o_data30;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed30 <= gw5ddrphy_dq_o_data30[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed30 <= gw5ddrphy_dq_o_data_d30[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d30 <= gw5ddrphy_bitslip30_o;
    gw5ddrphy_dq_o_data_d31 <= gw5ddrphy_dq_o_data31;
    case (gw5ddrphy_bl8_chunk)
        1'd0: begin
            gw5ddrphy_dq_o_data_muxed31 <= gw5ddrphy_dq_o_data31[3:0];
        end
        1'd1: begin
            gw5ddrphy_dq_o_data_muxed31 <= gw5ddrphy_dq_o_data_d31[7:4];
        end
    endcase
    gw5ddrphy_dq_i_bitslip_o_d31 <= gw5ddrphy_bitslip31_o;
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip0_value <= (gw5ddrphy_bitslip0_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip0_value <= 1'd0;
    end
    gw5ddrphy_bitslip0_r <= {gw5ddrphy_bitslip0_i, gw5ddrphy_bitslip0_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip1_value <= (gw5ddrphy_bitslip1_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip1_value <= 1'd0;
    end
    gw5ddrphy_bitslip1_r <= {gw5ddrphy_bitslip1_i, gw5ddrphy_bitslip1_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip2_value <= (gw5ddrphy_bitslip2_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip2_value <= 1'd0;
    end
    gw5ddrphy_bitslip2_r <= {gw5ddrphy_bitslip2_i, gw5ddrphy_bitslip2_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip3_value <= (gw5ddrphy_bitslip3_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip3_value <= 1'd0;
    end
    gw5ddrphy_bitslip3_r <= {gw5ddrphy_bitslip3_i, gw5ddrphy_bitslip3_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip4_value <= (gw5ddrphy_bitslip4_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip4_value <= 1'd0;
    end
    gw5ddrphy_bitslip4_r <= {gw5ddrphy_bitslip4_i, gw5ddrphy_bitslip4_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip5_value <= (gw5ddrphy_bitslip5_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip5_value <= 1'd0;
    end
    gw5ddrphy_bitslip5_r <= {gw5ddrphy_bitslip5_i, gw5ddrphy_bitslip5_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip6_value <= (gw5ddrphy_bitslip6_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip6_value <= 1'd0;
    end
    gw5ddrphy_bitslip6_r <= {gw5ddrphy_bitslip6_i, gw5ddrphy_bitslip6_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip7_value <= (gw5ddrphy_bitslip7_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[0] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip7_value <= 1'd0;
    end
    gw5ddrphy_bitslip7_r <= {gw5ddrphy_bitslip7_i, gw5ddrphy_bitslip7_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip8_value <= (gw5ddrphy_bitslip8_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip8_value <= 1'd0;
    end
    gw5ddrphy_bitslip8_r <= {gw5ddrphy_bitslip8_i, gw5ddrphy_bitslip8_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip9_value <= (gw5ddrphy_bitslip9_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip9_value <= 1'd0;
    end
    gw5ddrphy_bitslip9_r <= {gw5ddrphy_bitslip9_i, gw5ddrphy_bitslip9_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip10_value <= (gw5ddrphy_bitslip10_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip10_value <= 1'd0;
    end
    gw5ddrphy_bitslip10_r <= {gw5ddrphy_bitslip10_i, gw5ddrphy_bitslip10_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip11_value <= (gw5ddrphy_bitslip11_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip11_value <= 1'd0;
    end
    gw5ddrphy_bitslip11_r <= {gw5ddrphy_bitslip11_i, gw5ddrphy_bitslip11_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip12_value <= (gw5ddrphy_bitslip12_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip12_value <= 1'd0;
    end
    gw5ddrphy_bitslip12_r <= {gw5ddrphy_bitslip12_i, gw5ddrphy_bitslip12_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip13_value <= (gw5ddrphy_bitslip13_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip13_value <= 1'd0;
    end
    gw5ddrphy_bitslip13_r <= {gw5ddrphy_bitslip13_i, gw5ddrphy_bitslip13_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip14_value <= (gw5ddrphy_bitslip14_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip14_value <= 1'd0;
    end
    gw5ddrphy_bitslip14_r <= {gw5ddrphy_bitslip14_i, gw5ddrphy_bitslip14_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip15_value <= (gw5ddrphy_bitslip15_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[1] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip15_value <= 1'd0;
    end
    gw5ddrphy_bitslip15_r <= {gw5ddrphy_bitslip15_i, gw5ddrphy_bitslip15_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip16_value <= (gw5ddrphy_bitslip16_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip16_value <= 1'd0;
    end
    gw5ddrphy_bitslip16_r <= {gw5ddrphy_bitslip16_i, gw5ddrphy_bitslip16_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip17_value <= (gw5ddrphy_bitslip17_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip17_value <= 1'd0;
    end
    gw5ddrphy_bitslip17_r <= {gw5ddrphy_bitslip17_i, gw5ddrphy_bitslip17_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip18_value <= (gw5ddrphy_bitslip18_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip18_value <= 1'd0;
    end
    gw5ddrphy_bitslip18_r <= {gw5ddrphy_bitslip18_i, gw5ddrphy_bitslip18_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip19_value <= (gw5ddrphy_bitslip19_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip19_value <= 1'd0;
    end
    gw5ddrphy_bitslip19_r <= {gw5ddrphy_bitslip19_i, gw5ddrphy_bitslip19_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip20_value <= (gw5ddrphy_bitslip20_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip20_value <= 1'd0;
    end
    gw5ddrphy_bitslip20_r <= {gw5ddrphy_bitslip20_i, gw5ddrphy_bitslip20_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip21_value <= (gw5ddrphy_bitslip21_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip21_value <= 1'd0;
    end
    gw5ddrphy_bitslip21_r <= {gw5ddrphy_bitslip21_i, gw5ddrphy_bitslip21_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip22_value <= (gw5ddrphy_bitslip22_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip22_value <= 1'd0;
    end
    gw5ddrphy_bitslip22_r <= {gw5ddrphy_bitslip22_i, gw5ddrphy_bitslip22_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip23_value <= (gw5ddrphy_bitslip23_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[2] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip23_value <= 1'd0;
    end
    gw5ddrphy_bitslip23_r <= {gw5ddrphy_bitslip23_i, gw5ddrphy_bitslip23_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip24_value <= (gw5ddrphy_bitslip24_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip24_value <= 1'd0;
    end
    gw5ddrphy_bitslip24_r <= {gw5ddrphy_bitslip24_i, gw5ddrphy_bitslip24_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip25_value <= (gw5ddrphy_bitslip25_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip25_value <= 1'd0;
    end
    gw5ddrphy_bitslip25_r <= {gw5ddrphy_bitslip25_i, gw5ddrphy_bitslip25_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip26_value <= (gw5ddrphy_bitslip26_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip26_value <= 1'd0;
    end
    gw5ddrphy_bitslip26_r <= {gw5ddrphy_bitslip26_i, gw5ddrphy_bitslip26_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip27_value <= (gw5ddrphy_bitslip27_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip27_value <= 1'd0;
    end
    gw5ddrphy_bitslip27_r <= {gw5ddrphy_bitslip27_i, gw5ddrphy_bitslip27_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip28_value <= (gw5ddrphy_bitslip28_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip28_value <= 1'd0;
    end
    gw5ddrphy_bitslip28_r <= {gw5ddrphy_bitslip28_i, gw5ddrphy_bitslip28_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip29_value <= (gw5ddrphy_bitslip29_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip29_value <= 1'd0;
    end
    gw5ddrphy_bitslip29_r <= {gw5ddrphy_bitslip29_i, gw5ddrphy_bitslip29_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip30_value <= (gw5ddrphy_bitslip30_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip30_value <= 1'd0;
    end
    gw5ddrphy_bitslip30_r <= {gw5ddrphy_bitslip30_i, gw5ddrphy_bitslip30_r[7:4]};
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_re)) begin
        gw5ddrphy_bitslip31_value <= (gw5ddrphy_bitslip31_value + 1'd1);
    end
    if ((gw5ddrphy_dly_sel_storage[3] & gw5ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw5ddrphy_bitslip31_value <= 1'd0;
    end
    gw5ddrphy_bitslip31_r <= {gw5ddrphy_bitslip31_i, gw5ddrphy_bitslip31_r[7:4]};
    gw5ddrphy_rddata_en_tappeddelayline0 <= (gw5ddrphy_dfi_p0_rddata_en | gw5ddrphy_dfi_p1_rddata_en);
    gw5ddrphy_rddata_en_tappeddelayline1 <= gw5ddrphy_rddata_en_tappeddelayline0;
    gw5ddrphy_rddata_en_tappeddelayline2 <= gw5ddrphy_rddata_en_tappeddelayline1;
    gw5ddrphy_rddata_en_tappeddelayline3 <= gw5ddrphy_rddata_en_tappeddelayline2;
    gw5ddrphy_rddata_en_tappeddelayline4 <= gw5ddrphy_rddata_en_tappeddelayline3;
    gw5ddrphy_rddata_en_tappeddelayline5 <= gw5ddrphy_rddata_en_tappeddelayline4;
    gw5ddrphy_rddata_en_tappeddelayline6 <= gw5ddrphy_rddata_en_tappeddelayline5;
    gw5ddrphy_rddata_en_tappeddelayline7 <= gw5ddrphy_rddata_en_tappeddelayline6;
    gw5ddrphy_rddata_en_tappeddelayline8 <= gw5ddrphy_rddata_en_tappeddelayline7;
    gw5ddrphy_rddata_en_tappeddelayline9 <= gw5ddrphy_rddata_en_tappeddelayline8;
    gw5ddrphy_rddata_en_tappeddelayline10 <= gw5ddrphy_rddata_en_tappeddelayline9;
    gw5ddrphy_rddata_en_tappeddelayline11 <= gw5ddrphy_rddata_en_tappeddelayline10;
    gw5ddrphy_rddata_en_tappeddelayline12 <= gw5ddrphy_rddata_en_tappeddelayline11;
    gw5ddrphy_wrdata_en_tappeddelayline0 <= (gw5ddrphy_dfi_p0_wrdata_en | gw5ddrphy_dfi_p1_wrdata_en);
    gw5ddrphy_wrdata_en_tappeddelayline1 <= gw5ddrphy_wrdata_en_tappeddelayline0;
    gw5ddrphy_wrdata_en_tappeddelayline2 <= gw5ddrphy_wrdata_en_tappeddelayline1;
    gw5ddrphy_wrdata_en_tappeddelayline3 <= gw5ddrphy_wrdata_en_tappeddelayline2;
    gw5ddrphy_wrdata_en_tappeddelayline4 <= gw5ddrphy_wrdata_en_tappeddelayline3;
    gw5ddrphy_wrdata_en_tappeddelayline5 <= gw5ddrphy_wrdata_en_tappeddelayline4;
    gw5ddrphy_wrdata_en_tappeddelayline6 <= gw5ddrphy_wrdata_en_tappeddelayline5;
    if (basesoc_csr_dfi_p0_rddata_valid) begin
        basesoc_phaseinjector0_rddata_status <= basesoc_csr_dfi_p0_rddata;
    end
    if (basesoc_csr_dfi_p1_rddata_valid) begin
        basesoc_phaseinjector1_rddata_status <= basesoc_csr_dfi_p1_rddata;
    end
    if ((basesoc_timer_wait & (~basesoc_timer_done0))) begin
        basesoc_timer_count1 <= (basesoc_timer_count1 - 1'd1);
    end else begin
        basesoc_timer_count1 <= 9'd390;
    end
    basesoc_postponer_req_o <= 1'd0;
    if (basesoc_postponer_req_i) begin
        basesoc_postponer_count <= (basesoc_postponer_count - 1'd1);
        if ((basesoc_postponer_count == 1'd0)) begin
            basesoc_postponer_count <= 1'd0;
            basesoc_postponer_req_o <= 1'd1;
        end
    end
    if (basesoc_sequencer_start0) begin
        basesoc_sequencer_count <= 1'd0;
    end else begin
        if (basesoc_sequencer_done1) begin
            if ((basesoc_sequencer_count != 1'd0)) begin
                basesoc_sequencer_count <= (basesoc_sequencer_count - 1'd1);
            end
        end
    end
    basesoc_cmd_payload_a <= 1'd0;
    basesoc_cmd_payload_ba <= 1'd0;
    basesoc_cmd_payload_cas <= 1'd0;
    basesoc_cmd_payload_ras <= 1'd0;
    basesoc_cmd_payload_we <= 1'd0;
    basesoc_sequencer_done1 <= 1'd0;
    if ((basesoc_sequencer_start1 & (basesoc_sequencer_trigger == 1'd0))) begin
        basesoc_cmd_payload_a <= 11'd1024;
        basesoc_cmd_payload_ba <= 1'd0;
        basesoc_cmd_payload_cas <= 1'd0;
        basesoc_cmd_payload_ras <= 1'd1;
        basesoc_cmd_payload_we <= 1'd1;
    end
    if ((basesoc_sequencer_trigger == 2'd2)) begin
        basesoc_cmd_payload_a <= 11'd1024;
        basesoc_cmd_payload_ba <= 1'd0;
        basesoc_cmd_payload_cas <= 1'd1;
        basesoc_cmd_payload_ras <= 1'd1;
        basesoc_cmd_payload_we <= 1'd0;
    end
    if ((basesoc_sequencer_trigger == 6'd34)) begin
        basesoc_cmd_payload_a <= 1'd0;
        basesoc_cmd_payload_ba <= 1'd0;
        basesoc_cmd_payload_cas <= 1'd0;
        basesoc_cmd_payload_ras <= 1'd0;
        basesoc_cmd_payload_we <= 1'd0;
        basesoc_sequencer_done1 <= 1'd1;
    end
    if ((basesoc_sequencer_trigger == 6'd34)) begin
        basesoc_sequencer_trigger <= 1'd0;
    end else begin
        if ((basesoc_sequencer_trigger != 1'd0)) begin
            basesoc_sequencer_trigger <= (basesoc_sequencer_trigger + 1'd1);
        end else begin
            if (basesoc_sequencer_start1) begin
                basesoc_sequencer_trigger <= 1'd1;
            end
        end
    end
    if ((basesoc_zqcs_timer_wait & (~basesoc_zqcs_timer_done0))) begin
        basesoc_zqcs_timer_count1 <= (basesoc_zqcs_timer_count1 - 1'd1);
    end else begin
        basesoc_zqcs_timer_count1 <= 26'd49999999;
    end
    basesoc_zqcs_executer_done <= 1'd0;
    if ((basesoc_zqcs_executer_start & (basesoc_zqcs_executer_trigger == 1'd0))) begin
        basesoc_cmd_payload_a <= 11'd1024;
        basesoc_cmd_payload_ba <= 1'd0;
        basesoc_cmd_payload_cas <= 1'd0;
        basesoc_cmd_payload_ras <= 1'd1;
        basesoc_cmd_payload_we <= 1'd1;
    end
    if ((basesoc_zqcs_executer_trigger == 2'd2)) begin
        basesoc_cmd_payload_a <= 1'd0;
        basesoc_cmd_payload_ba <= 1'd0;
        basesoc_cmd_payload_cas <= 1'd0;
        basesoc_cmd_payload_ras <= 1'd0;
        basesoc_cmd_payload_we <= 1'd1;
    end
    if ((basesoc_zqcs_executer_trigger == 5'd18)) begin
        basesoc_cmd_payload_a <= 1'd0;
        basesoc_cmd_payload_ba <= 1'd0;
        basesoc_cmd_payload_cas <= 1'd0;
        basesoc_cmd_payload_ras <= 1'd0;
        basesoc_cmd_payload_we <= 1'd0;
        basesoc_zqcs_executer_done <= 1'd1;
    end
    if ((basesoc_zqcs_executer_trigger == 5'd18)) begin
        basesoc_zqcs_executer_trigger <= 1'd0;
    end else begin
        if ((basesoc_zqcs_executer_trigger != 1'd0)) begin
            basesoc_zqcs_executer_trigger <= (basesoc_zqcs_executer_trigger + 1'd1);
        end else begin
            if (basesoc_zqcs_executer_start) begin
                basesoc_zqcs_executer_trigger <= 1'd1;
            end
        end
    end
    refresher_state <= refresher_next_state;
    if (basesoc_bankmachine0_row_close) begin
        basesoc_bankmachine0_row_opened <= 1'd0;
    end else begin
        if (basesoc_bankmachine0_row_open) begin
            basesoc_bankmachine0_row_opened <= 1'd1;
            basesoc_bankmachine0_row <= basesoc_bankmachine0_source_source_payload_addr[20:7];
        end
    end
    if (((basesoc_bankmachine0_syncfifo0_we & basesoc_bankmachine0_syncfifo0_writable) & (~basesoc_bankmachine0_replace))) begin
        basesoc_bankmachine0_produce <= (basesoc_bankmachine0_produce + 1'd1);
    end
    if (basesoc_bankmachine0_do_read) begin
        basesoc_bankmachine0_consume <= (basesoc_bankmachine0_consume + 1'd1);
    end
    if (((basesoc_bankmachine0_syncfifo0_we & basesoc_bankmachine0_syncfifo0_writable) & (~basesoc_bankmachine0_replace))) begin
        if ((~basesoc_bankmachine0_do_read)) begin
            basesoc_bankmachine0_level <= (basesoc_bankmachine0_level + 1'd1);
        end
    end else begin
        if (basesoc_bankmachine0_do_read) begin
            basesoc_bankmachine0_level <= (basesoc_bankmachine0_level - 1'd1);
        end
    end
    if (((~basesoc_bankmachine0_pipe_valid_source_valid) | basesoc_bankmachine0_pipe_valid_source_ready)) begin
        basesoc_bankmachine0_pipe_valid_source_valid <= basesoc_bankmachine0_pipe_valid_sink_valid;
        basesoc_bankmachine0_pipe_valid_source_first <= basesoc_bankmachine0_pipe_valid_sink_first;
        basesoc_bankmachine0_pipe_valid_source_last <= basesoc_bankmachine0_pipe_valid_sink_last;
        basesoc_bankmachine0_pipe_valid_source_payload_we <= basesoc_bankmachine0_pipe_valid_sink_payload_we;
        basesoc_bankmachine0_pipe_valid_source_payload_addr <= basesoc_bankmachine0_pipe_valid_sink_payload_addr;
    end
    if (basesoc_bankmachine0_twtpcon_valid) begin
        basesoc_bankmachine0_twtpcon_count <= 3'd5;
        if (1'd0) begin
            basesoc_bankmachine0_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine0_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine0_twtpcon_ready)) begin
            basesoc_bankmachine0_twtpcon_count <= (basesoc_bankmachine0_twtpcon_count - 1'd1);
            if ((basesoc_bankmachine0_twtpcon_count == 1'd1)) begin
                basesoc_bankmachine0_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine0_trccon_valid) begin
        basesoc_bankmachine0_trccon_count <= 2'd3;
        if (1'd0) begin
            basesoc_bankmachine0_trccon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine0_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine0_trccon_ready)) begin
            basesoc_bankmachine0_trccon_count <= (basesoc_bankmachine0_trccon_count - 1'd1);
            if ((basesoc_bankmachine0_trccon_count == 1'd1)) begin
                basesoc_bankmachine0_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine0_trascon_valid) begin
        basesoc_bankmachine0_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_bankmachine0_trascon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine0_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine0_trascon_ready)) begin
            basesoc_bankmachine0_trascon_count <= (basesoc_bankmachine0_trascon_count - 1'd1);
            if ((basesoc_bankmachine0_trascon_count == 1'd1)) begin
                basesoc_bankmachine0_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine0_state <= bankmachine0_next_state;
    if (basesoc_bankmachine1_row_close) begin
        basesoc_bankmachine1_row_opened <= 1'd0;
    end else begin
        if (basesoc_bankmachine1_row_open) begin
            basesoc_bankmachine1_row_opened <= 1'd1;
            basesoc_bankmachine1_row <= basesoc_bankmachine1_source_source_payload_addr[20:7];
        end
    end
    if (((basesoc_bankmachine1_syncfifo1_we & basesoc_bankmachine1_syncfifo1_writable) & (~basesoc_bankmachine1_replace))) begin
        basesoc_bankmachine1_produce <= (basesoc_bankmachine1_produce + 1'd1);
    end
    if (basesoc_bankmachine1_do_read) begin
        basesoc_bankmachine1_consume <= (basesoc_bankmachine1_consume + 1'd1);
    end
    if (((basesoc_bankmachine1_syncfifo1_we & basesoc_bankmachine1_syncfifo1_writable) & (~basesoc_bankmachine1_replace))) begin
        if ((~basesoc_bankmachine1_do_read)) begin
            basesoc_bankmachine1_level <= (basesoc_bankmachine1_level + 1'd1);
        end
    end else begin
        if (basesoc_bankmachine1_do_read) begin
            basesoc_bankmachine1_level <= (basesoc_bankmachine1_level - 1'd1);
        end
    end
    if (((~basesoc_bankmachine1_pipe_valid_source_valid) | basesoc_bankmachine1_pipe_valid_source_ready)) begin
        basesoc_bankmachine1_pipe_valid_source_valid <= basesoc_bankmachine1_pipe_valid_sink_valid;
        basesoc_bankmachine1_pipe_valid_source_first <= basesoc_bankmachine1_pipe_valid_sink_first;
        basesoc_bankmachine1_pipe_valid_source_last <= basesoc_bankmachine1_pipe_valid_sink_last;
        basesoc_bankmachine1_pipe_valid_source_payload_we <= basesoc_bankmachine1_pipe_valid_sink_payload_we;
        basesoc_bankmachine1_pipe_valid_source_payload_addr <= basesoc_bankmachine1_pipe_valid_sink_payload_addr;
    end
    if (basesoc_bankmachine1_twtpcon_valid) begin
        basesoc_bankmachine1_twtpcon_count <= 3'd5;
        if (1'd0) begin
            basesoc_bankmachine1_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine1_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine1_twtpcon_ready)) begin
            basesoc_bankmachine1_twtpcon_count <= (basesoc_bankmachine1_twtpcon_count - 1'd1);
            if ((basesoc_bankmachine1_twtpcon_count == 1'd1)) begin
                basesoc_bankmachine1_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine1_trccon_valid) begin
        basesoc_bankmachine1_trccon_count <= 2'd3;
        if (1'd0) begin
            basesoc_bankmachine1_trccon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine1_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine1_trccon_ready)) begin
            basesoc_bankmachine1_trccon_count <= (basesoc_bankmachine1_trccon_count - 1'd1);
            if ((basesoc_bankmachine1_trccon_count == 1'd1)) begin
                basesoc_bankmachine1_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine1_trascon_valid) begin
        basesoc_bankmachine1_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_bankmachine1_trascon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine1_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine1_trascon_ready)) begin
            basesoc_bankmachine1_trascon_count <= (basesoc_bankmachine1_trascon_count - 1'd1);
            if ((basesoc_bankmachine1_trascon_count == 1'd1)) begin
                basesoc_bankmachine1_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine1_state <= bankmachine1_next_state;
    if (basesoc_bankmachine2_row_close) begin
        basesoc_bankmachine2_row_opened <= 1'd0;
    end else begin
        if (basesoc_bankmachine2_row_open) begin
            basesoc_bankmachine2_row_opened <= 1'd1;
            basesoc_bankmachine2_row <= basesoc_bankmachine2_source_source_payload_addr[20:7];
        end
    end
    if (((basesoc_bankmachine2_syncfifo2_we & basesoc_bankmachine2_syncfifo2_writable) & (~basesoc_bankmachine2_replace))) begin
        basesoc_bankmachine2_produce <= (basesoc_bankmachine2_produce + 1'd1);
    end
    if (basesoc_bankmachine2_do_read) begin
        basesoc_bankmachine2_consume <= (basesoc_bankmachine2_consume + 1'd1);
    end
    if (((basesoc_bankmachine2_syncfifo2_we & basesoc_bankmachine2_syncfifo2_writable) & (~basesoc_bankmachine2_replace))) begin
        if ((~basesoc_bankmachine2_do_read)) begin
            basesoc_bankmachine2_level <= (basesoc_bankmachine2_level + 1'd1);
        end
    end else begin
        if (basesoc_bankmachine2_do_read) begin
            basesoc_bankmachine2_level <= (basesoc_bankmachine2_level - 1'd1);
        end
    end
    if (((~basesoc_bankmachine2_pipe_valid_source_valid) | basesoc_bankmachine2_pipe_valid_source_ready)) begin
        basesoc_bankmachine2_pipe_valid_source_valid <= basesoc_bankmachine2_pipe_valid_sink_valid;
        basesoc_bankmachine2_pipe_valid_source_first <= basesoc_bankmachine2_pipe_valid_sink_first;
        basesoc_bankmachine2_pipe_valid_source_last <= basesoc_bankmachine2_pipe_valid_sink_last;
        basesoc_bankmachine2_pipe_valid_source_payload_we <= basesoc_bankmachine2_pipe_valid_sink_payload_we;
        basesoc_bankmachine2_pipe_valid_source_payload_addr <= basesoc_bankmachine2_pipe_valid_sink_payload_addr;
    end
    if (basesoc_bankmachine2_twtpcon_valid) begin
        basesoc_bankmachine2_twtpcon_count <= 3'd5;
        if (1'd0) begin
            basesoc_bankmachine2_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine2_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine2_twtpcon_ready)) begin
            basesoc_bankmachine2_twtpcon_count <= (basesoc_bankmachine2_twtpcon_count - 1'd1);
            if ((basesoc_bankmachine2_twtpcon_count == 1'd1)) begin
                basesoc_bankmachine2_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine2_trccon_valid) begin
        basesoc_bankmachine2_trccon_count <= 2'd3;
        if (1'd0) begin
            basesoc_bankmachine2_trccon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine2_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine2_trccon_ready)) begin
            basesoc_bankmachine2_trccon_count <= (basesoc_bankmachine2_trccon_count - 1'd1);
            if ((basesoc_bankmachine2_trccon_count == 1'd1)) begin
                basesoc_bankmachine2_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine2_trascon_valid) begin
        basesoc_bankmachine2_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_bankmachine2_trascon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine2_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine2_trascon_ready)) begin
            basesoc_bankmachine2_trascon_count <= (basesoc_bankmachine2_trascon_count - 1'd1);
            if ((basesoc_bankmachine2_trascon_count == 1'd1)) begin
                basesoc_bankmachine2_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine2_state <= bankmachine2_next_state;
    if (basesoc_bankmachine3_row_close) begin
        basesoc_bankmachine3_row_opened <= 1'd0;
    end else begin
        if (basesoc_bankmachine3_row_open) begin
            basesoc_bankmachine3_row_opened <= 1'd1;
            basesoc_bankmachine3_row <= basesoc_bankmachine3_source_source_payload_addr[20:7];
        end
    end
    if (((basesoc_bankmachine3_syncfifo3_we & basesoc_bankmachine3_syncfifo3_writable) & (~basesoc_bankmachine3_replace))) begin
        basesoc_bankmachine3_produce <= (basesoc_bankmachine3_produce + 1'd1);
    end
    if (basesoc_bankmachine3_do_read) begin
        basesoc_bankmachine3_consume <= (basesoc_bankmachine3_consume + 1'd1);
    end
    if (((basesoc_bankmachine3_syncfifo3_we & basesoc_bankmachine3_syncfifo3_writable) & (~basesoc_bankmachine3_replace))) begin
        if ((~basesoc_bankmachine3_do_read)) begin
            basesoc_bankmachine3_level <= (basesoc_bankmachine3_level + 1'd1);
        end
    end else begin
        if (basesoc_bankmachine3_do_read) begin
            basesoc_bankmachine3_level <= (basesoc_bankmachine3_level - 1'd1);
        end
    end
    if (((~basesoc_bankmachine3_pipe_valid_source_valid) | basesoc_bankmachine3_pipe_valid_source_ready)) begin
        basesoc_bankmachine3_pipe_valid_source_valid <= basesoc_bankmachine3_pipe_valid_sink_valid;
        basesoc_bankmachine3_pipe_valid_source_first <= basesoc_bankmachine3_pipe_valid_sink_first;
        basesoc_bankmachine3_pipe_valid_source_last <= basesoc_bankmachine3_pipe_valid_sink_last;
        basesoc_bankmachine3_pipe_valid_source_payload_we <= basesoc_bankmachine3_pipe_valid_sink_payload_we;
        basesoc_bankmachine3_pipe_valid_source_payload_addr <= basesoc_bankmachine3_pipe_valid_sink_payload_addr;
    end
    if (basesoc_bankmachine3_twtpcon_valid) begin
        basesoc_bankmachine3_twtpcon_count <= 3'd5;
        if (1'd0) begin
            basesoc_bankmachine3_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine3_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine3_twtpcon_ready)) begin
            basesoc_bankmachine3_twtpcon_count <= (basesoc_bankmachine3_twtpcon_count - 1'd1);
            if ((basesoc_bankmachine3_twtpcon_count == 1'd1)) begin
                basesoc_bankmachine3_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine3_trccon_valid) begin
        basesoc_bankmachine3_trccon_count <= 2'd3;
        if (1'd0) begin
            basesoc_bankmachine3_trccon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine3_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine3_trccon_ready)) begin
            basesoc_bankmachine3_trccon_count <= (basesoc_bankmachine3_trccon_count - 1'd1);
            if ((basesoc_bankmachine3_trccon_count == 1'd1)) begin
                basesoc_bankmachine3_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine3_trascon_valid) begin
        basesoc_bankmachine3_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_bankmachine3_trascon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine3_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine3_trascon_ready)) begin
            basesoc_bankmachine3_trascon_count <= (basesoc_bankmachine3_trascon_count - 1'd1);
            if ((basesoc_bankmachine3_trascon_count == 1'd1)) begin
                basesoc_bankmachine3_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine3_state <= bankmachine3_next_state;
    if (basesoc_bankmachine4_row_close) begin
        basesoc_bankmachine4_row_opened <= 1'd0;
    end else begin
        if (basesoc_bankmachine4_row_open) begin
            basesoc_bankmachine4_row_opened <= 1'd1;
            basesoc_bankmachine4_row <= basesoc_bankmachine4_source_source_payload_addr[20:7];
        end
    end
    if (((basesoc_bankmachine4_syncfifo4_we & basesoc_bankmachine4_syncfifo4_writable) & (~basesoc_bankmachine4_replace))) begin
        basesoc_bankmachine4_produce <= (basesoc_bankmachine4_produce + 1'd1);
    end
    if (basesoc_bankmachine4_do_read) begin
        basesoc_bankmachine4_consume <= (basesoc_bankmachine4_consume + 1'd1);
    end
    if (((basesoc_bankmachine4_syncfifo4_we & basesoc_bankmachine4_syncfifo4_writable) & (~basesoc_bankmachine4_replace))) begin
        if ((~basesoc_bankmachine4_do_read)) begin
            basesoc_bankmachine4_level <= (basesoc_bankmachine4_level + 1'd1);
        end
    end else begin
        if (basesoc_bankmachine4_do_read) begin
            basesoc_bankmachine4_level <= (basesoc_bankmachine4_level - 1'd1);
        end
    end
    if (((~basesoc_bankmachine4_pipe_valid_source_valid) | basesoc_bankmachine4_pipe_valid_source_ready)) begin
        basesoc_bankmachine4_pipe_valid_source_valid <= basesoc_bankmachine4_pipe_valid_sink_valid;
        basesoc_bankmachine4_pipe_valid_source_first <= basesoc_bankmachine4_pipe_valid_sink_first;
        basesoc_bankmachine4_pipe_valid_source_last <= basesoc_bankmachine4_pipe_valid_sink_last;
        basesoc_bankmachine4_pipe_valid_source_payload_we <= basesoc_bankmachine4_pipe_valid_sink_payload_we;
        basesoc_bankmachine4_pipe_valid_source_payload_addr <= basesoc_bankmachine4_pipe_valid_sink_payload_addr;
    end
    if (basesoc_bankmachine4_twtpcon_valid) begin
        basesoc_bankmachine4_twtpcon_count <= 3'd5;
        if (1'd0) begin
            basesoc_bankmachine4_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine4_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine4_twtpcon_ready)) begin
            basesoc_bankmachine4_twtpcon_count <= (basesoc_bankmachine4_twtpcon_count - 1'd1);
            if ((basesoc_bankmachine4_twtpcon_count == 1'd1)) begin
                basesoc_bankmachine4_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine4_trccon_valid) begin
        basesoc_bankmachine4_trccon_count <= 2'd3;
        if (1'd0) begin
            basesoc_bankmachine4_trccon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine4_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine4_trccon_ready)) begin
            basesoc_bankmachine4_trccon_count <= (basesoc_bankmachine4_trccon_count - 1'd1);
            if ((basesoc_bankmachine4_trccon_count == 1'd1)) begin
                basesoc_bankmachine4_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine4_trascon_valid) begin
        basesoc_bankmachine4_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_bankmachine4_trascon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine4_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine4_trascon_ready)) begin
            basesoc_bankmachine4_trascon_count <= (basesoc_bankmachine4_trascon_count - 1'd1);
            if ((basesoc_bankmachine4_trascon_count == 1'd1)) begin
                basesoc_bankmachine4_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine4_state <= bankmachine4_next_state;
    if (basesoc_bankmachine5_row_close) begin
        basesoc_bankmachine5_row_opened <= 1'd0;
    end else begin
        if (basesoc_bankmachine5_row_open) begin
            basesoc_bankmachine5_row_opened <= 1'd1;
            basesoc_bankmachine5_row <= basesoc_bankmachine5_source_source_payload_addr[20:7];
        end
    end
    if (((basesoc_bankmachine5_syncfifo5_we & basesoc_bankmachine5_syncfifo5_writable) & (~basesoc_bankmachine5_replace))) begin
        basesoc_bankmachine5_produce <= (basesoc_bankmachine5_produce + 1'd1);
    end
    if (basesoc_bankmachine5_do_read) begin
        basesoc_bankmachine5_consume <= (basesoc_bankmachine5_consume + 1'd1);
    end
    if (((basesoc_bankmachine5_syncfifo5_we & basesoc_bankmachine5_syncfifo5_writable) & (~basesoc_bankmachine5_replace))) begin
        if ((~basesoc_bankmachine5_do_read)) begin
            basesoc_bankmachine5_level <= (basesoc_bankmachine5_level + 1'd1);
        end
    end else begin
        if (basesoc_bankmachine5_do_read) begin
            basesoc_bankmachine5_level <= (basesoc_bankmachine5_level - 1'd1);
        end
    end
    if (((~basesoc_bankmachine5_pipe_valid_source_valid) | basesoc_bankmachine5_pipe_valid_source_ready)) begin
        basesoc_bankmachine5_pipe_valid_source_valid <= basesoc_bankmachine5_pipe_valid_sink_valid;
        basesoc_bankmachine5_pipe_valid_source_first <= basesoc_bankmachine5_pipe_valid_sink_first;
        basesoc_bankmachine5_pipe_valid_source_last <= basesoc_bankmachine5_pipe_valid_sink_last;
        basesoc_bankmachine5_pipe_valid_source_payload_we <= basesoc_bankmachine5_pipe_valid_sink_payload_we;
        basesoc_bankmachine5_pipe_valid_source_payload_addr <= basesoc_bankmachine5_pipe_valid_sink_payload_addr;
    end
    if (basesoc_bankmachine5_twtpcon_valid) begin
        basesoc_bankmachine5_twtpcon_count <= 3'd5;
        if (1'd0) begin
            basesoc_bankmachine5_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine5_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine5_twtpcon_ready)) begin
            basesoc_bankmachine5_twtpcon_count <= (basesoc_bankmachine5_twtpcon_count - 1'd1);
            if ((basesoc_bankmachine5_twtpcon_count == 1'd1)) begin
                basesoc_bankmachine5_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine5_trccon_valid) begin
        basesoc_bankmachine5_trccon_count <= 2'd3;
        if (1'd0) begin
            basesoc_bankmachine5_trccon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine5_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine5_trccon_ready)) begin
            basesoc_bankmachine5_trccon_count <= (basesoc_bankmachine5_trccon_count - 1'd1);
            if ((basesoc_bankmachine5_trccon_count == 1'd1)) begin
                basesoc_bankmachine5_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine5_trascon_valid) begin
        basesoc_bankmachine5_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_bankmachine5_trascon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine5_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine5_trascon_ready)) begin
            basesoc_bankmachine5_trascon_count <= (basesoc_bankmachine5_trascon_count - 1'd1);
            if ((basesoc_bankmachine5_trascon_count == 1'd1)) begin
                basesoc_bankmachine5_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine5_state <= bankmachine5_next_state;
    if (basesoc_bankmachine6_row_close) begin
        basesoc_bankmachine6_row_opened <= 1'd0;
    end else begin
        if (basesoc_bankmachine6_row_open) begin
            basesoc_bankmachine6_row_opened <= 1'd1;
            basesoc_bankmachine6_row <= basesoc_bankmachine6_source_source_payload_addr[20:7];
        end
    end
    if (((basesoc_bankmachine6_syncfifo6_we & basesoc_bankmachine6_syncfifo6_writable) & (~basesoc_bankmachine6_replace))) begin
        basesoc_bankmachine6_produce <= (basesoc_bankmachine6_produce + 1'd1);
    end
    if (basesoc_bankmachine6_do_read) begin
        basesoc_bankmachine6_consume <= (basesoc_bankmachine6_consume + 1'd1);
    end
    if (((basesoc_bankmachine6_syncfifo6_we & basesoc_bankmachine6_syncfifo6_writable) & (~basesoc_bankmachine6_replace))) begin
        if ((~basesoc_bankmachine6_do_read)) begin
            basesoc_bankmachine6_level <= (basesoc_bankmachine6_level + 1'd1);
        end
    end else begin
        if (basesoc_bankmachine6_do_read) begin
            basesoc_bankmachine6_level <= (basesoc_bankmachine6_level - 1'd1);
        end
    end
    if (((~basesoc_bankmachine6_pipe_valid_source_valid) | basesoc_bankmachine6_pipe_valid_source_ready)) begin
        basesoc_bankmachine6_pipe_valid_source_valid <= basesoc_bankmachine6_pipe_valid_sink_valid;
        basesoc_bankmachine6_pipe_valid_source_first <= basesoc_bankmachine6_pipe_valid_sink_first;
        basesoc_bankmachine6_pipe_valid_source_last <= basesoc_bankmachine6_pipe_valid_sink_last;
        basesoc_bankmachine6_pipe_valid_source_payload_we <= basesoc_bankmachine6_pipe_valid_sink_payload_we;
        basesoc_bankmachine6_pipe_valid_source_payload_addr <= basesoc_bankmachine6_pipe_valid_sink_payload_addr;
    end
    if (basesoc_bankmachine6_twtpcon_valid) begin
        basesoc_bankmachine6_twtpcon_count <= 3'd5;
        if (1'd0) begin
            basesoc_bankmachine6_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine6_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine6_twtpcon_ready)) begin
            basesoc_bankmachine6_twtpcon_count <= (basesoc_bankmachine6_twtpcon_count - 1'd1);
            if ((basesoc_bankmachine6_twtpcon_count == 1'd1)) begin
                basesoc_bankmachine6_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine6_trccon_valid) begin
        basesoc_bankmachine6_trccon_count <= 2'd3;
        if (1'd0) begin
            basesoc_bankmachine6_trccon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine6_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine6_trccon_ready)) begin
            basesoc_bankmachine6_trccon_count <= (basesoc_bankmachine6_trccon_count - 1'd1);
            if ((basesoc_bankmachine6_trccon_count == 1'd1)) begin
                basesoc_bankmachine6_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine6_trascon_valid) begin
        basesoc_bankmachine6_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_bankmachine6_trascon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine6_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine6_trascon_ready)) begin
            basesoc_bankmachine6_trascon_count <= (basesoc_bankmachine6_trascon_count - 1'd1);
            if ((basesoc_bankmachine6_trascon_count == 1'd1)) begin
                basesoc_bankmachine6_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine6_state <= bankmachine6_next_state;
    if (basesoc_bankmachine7_row_close) begin
        basesoc_bankmachine7_row_opened <= 1'd0;
    end else begin
        if (basesoc_bankmachine7_row_open) begin
            basesoc_bankmachine7_row_opened <= 1'd1;
            basesoc_bankmachine7_row <= basesoc_bankmachine7_source_source_payload_addr[20:7];
        end
    end
    if (((basesoc_bankmachine7_syncfifo7_we & basesoc_bankmachine7_syncfifo7_writable) & (~basesoc_bankmachine7_replace))) begin
        basesoc_bankmachine7_produce <= (basesoc_bankmachine7_produce + 1'd1);
    end
    if (basesoc_bankmachine7_do_read) begin
        basesoc_bankmachine7_consume <= (basesoc_bankmachine7_consume + 1'd1);
    end
    if (((basesoc_bankmachine7_syncfifo7_we & basesoc_bankmachine7_syncfifo7_writable) & (~basesoc_bankmachine7_replace))) begin
        if ((~basesoc_bankmachine7_do_read)) begin
            basesoc_bankmachine7_level <= (basesoc_bankmachine7_level + 1'd1);
        end
    end else begin
        if (basesoc_bankmachine7_do_read) begin
            basesoc_bankmachine7_level <= (basesoc_bankmachine7_level - 1'd1);
        end
    end
    if (((~basesoc_bankmachine7_pipe_valid_source_valid) | basesoc_bankmachine7_pipe_valid_source_ready)) begin
        basesoc_bankmachine7_pipe_valid_source_valid <= basesoc_bankmachine7_pipe_valid_sink_valid;
        basesoc_bankmachine7_pipe_valid_source_first <= basesoc_bankmachine7_pipe_valid_sink_first;
        basesoc_bankmachine7_pipe_valid_source_last <= basesoc_bankmachine7_pipe_valid_sink_last;
        basesoc_bankmachine7_pipe_valid_source_payload_we <= basesoc_bankmachine7_pipe_valid_sink_payload_we;
        basesoc_bankmachine7_pipe_valid_source_payload_addr <= basesoc_bankmachine7_pipe_valid_sink_payload_addr;
    end
    if (basesoc_bankmachine7_twtpcon_valid) begin
        basesoc_bankmachine7_twtpcon_count <= 3'd5;
        if (1'd0) begin
            basesoc_bankmachine7_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine7_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine7_twtpcon_ready)) begin
            basesoc_bankmachine7_twtpcon_count <= (basesoc_bankmachine7_twtpcon_count - 1'd1);
            if ((basesoc_bankmachine7_twtpcon_count == 1'd1)) begin
                basesoc_bankmachine7_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine7_trccon_valid) begin
        basesoc_bankmachine7_trccon_count <= 2'd3;
        if (1'd0) begin
            basesoc_bankmachine7_trccon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine7_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine7_trccon_ready)) begin
            basesoc_bankmachine7_trccon_count <= (basesoc_bankmachine7_trccon_count - 1'd1);
            if ((basesoc_bankmachine7_trccon_count == 1'd1)) begin
                basesoc_bankmachine7_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_bankmachine7_trascon_valid) begin
        basesoc_bankmachine7_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_bankmachine7_trascon_ready <= 1'd1;
        end else begin
            basesoc_bankmachine7_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_bankmachine7_trascon_ready)) begin
            basesoc_bankmachine7_trascon_count <= (basesoc_bankmachine7_trascon_count - 1'd1);
            if ((basesoc_bankmachine7_trascon_count == 1'd1)) begin
                basesoc_bankmachine7_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine7_state <= bankmachine7_next_state;
    if ((~basesoc_en0)) begin
        basesoc_time0 <= 5'd31;
    end else begin
        if ((~basesoc_max_time0)) begin
            basesoc_time0 <= (basesoc_time0 - 1'd1);
        end
    end
    if ((~basesoc_en1)) begin
        basesoc_time1 <= 4'd15;
    end else begin
        if ((~basesoc_max_time1)) begin
            basesoc_time1 <= (basesoc_time1 - 1'd1);
        end
    end
    if (basesoc_choose_cmd_ce) begin
        case (basesoc_choose_cmd_grant)
            1'd0: begin
                if (basesoc_choose_cmd_request[1]) begin
                    basesoc_choose_cmd_grant <= 1'd1;
                end else begin
                    if (basesoc_choose_cmd_request[2]) begin
                        basesoc_choose_cmd_grant <= 2'd2;
                    end else begin
                        if (basesoc_choose_cmd_request[3]) begin
                            basesoc_choose_cmd_grant <= 2'd3;
                        end else begin
                            if (basesoc_choose_cmd_request[4]) begin
                                basesoc_choose_cmd_grant <= 3'd4;
                            end else begin
                                if (basesoc_choose_cmd_request[5]) begin
                                    basesoc_choose_cmd_grant <= 3'd5;
                                end else begin
                                    if (basesoc_choose_cmd_request[6]) begin
                                        basesoc_choose_cmd_grant <= 3'd6;
                                    end else begin
                                        if (basesoc_choose_cmd_request[7]) begin
                                            basesoc_choose_cmd_grant <= 3'd7;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            1'd1: begin
                if (basesoc_choose_cmd_request[2]) begin
                    basesoc_choose_cmd_grant <= 2'd2;
                end else begin
                    if (basesoc_choose_cmd_request[3]) begin
                        basesoc_choose_cmd_grant <= 2'd3;
                    end else begin
                        if (basesoc_choose_cmd_request[4]) begin
                            basesoc_choose_cmd_grant <= 3'd4;
                        end else begin
                            if (basesoc_choose_cmd_request[5]) begin
                                basesoc_choose_cmd_grant <= 3'd5;
                            end else begin
                                if (basesoc_choose_cmd_request[6]) begin
                                    basesoc_choose_cmd_grant <= 3'd6;
                                end else begin
                                    if (basesoc_choose_cmd_request[7]) begin
                                        basesoc_choose_cmd_grant <= 3'd7;
                                    end else begin
                                        if (basesoc_choose_cmd_request[0]) begin
                                            basesoc_choose_cmd_grant <= 1'd0;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd2: begin
                if (basesoc_choose_cmd_request[3]) begin
                    basesoc_choose_cmd_grant <= 2'd3;
                end else begin
                    if (basesoc_choose_cmd_request[4]) begin
                        basesoc_choose_cmd_grant <= 3'd4;
                    end else begin
                        if (basesoc_choose_cmd_request[5]) begin
                            basesoc_choose_cmd_grant <= 3'd5;
                        end else begin
                            if (basesoc_choose_cmd_request[6]) begin
                                basesoc_choose_cmd_grant <= 3'd6;
                            end else begin
                                if (basesoc_choose_cmd_request[7]) begin
                                    basesoc_choose_cmd_grant <= 3'd7;
                                end else begin
                                    if (basesoc_choose_cmd_request[0]) begin
                                        basesoc_choose_cmd_grant <= 1'd0;
                                    end else begin
                                        if (basesoc_choose_cmd_request[1]) begin
                                            basesoc_choose_cmd_grant <= 1'd1;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd3: begin
                if (basesoc_choose_cmd_request[4]) begin
                    basesoc_choose_cmd_grant <= 3'd4;
                end else begin
                    if (basesoc_choose_cmd_request[5]) begin
                        basesoc_choose_cmd_grant <= 3'd5;
                    end else begin
                        if (basesoc_choose_cmd_request[6]) begin
                            basesoc_choose_cmd_grant <= 3'd6;
                        end else begin
                            if (basesoc_choose_cmd_request[7]) begin
                                basesoc_choose_cmd_grant <= 3'd7;
                            end else begin
                                if (basesoc_choose_cmd_request[0]) begin
                                    basesoc_choose_cmd_grant <= 1'd0;
                                end else begin
                                    if (basesoc_choose_cmd_request[1]) begin
                                        basesoc_choose_cmd_grant <= 1'd1;
                                    end else begin
                                        if (basesoc_choose_cmd_request[2]) begin
                                            basesoc_choose_cmd_grant <= 2'd2;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd4: begin
                if (basesoc_choose_cmd_request[5]) begin
                    basesoc_choose_cmd_grant <= 3'd5;
                end else begin
                    if (basesoc_choose_cmd_request[6]) begin
                        basesoc_choose_cmd_grant <= 3'd6;
                    end else begin
                        if (basesoc_choose_cmd_request[7]) begin
                            basesoc_choose_cmd_grant <= 3'd7;
                        end else begin
                            if (basesoc_choose_cmd_request[0]) begin
                                basesoc_choose_cmd_grant <= 1'd0;
                            end else begin
                                if (basesoc_choose_cmd_request[1]) begin
                                    basesoc_choose_cmd_grant <= 1'd1;
                                end else begin
                                    if (basesoc_choose_cmd_request[2]) begin
                                        basesoc_choose_cmd_grant <= 2'd2;
                                    end else begin
                                        if (basesoc_choose_cmd_request[3]) begin
                                            basesoc_choose_cmd_grant <= 2'd3;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd5: begin
                if (basesoc_choose_cmd_request[6]) begin
                    basesoc_choose_cmd_grant <= 3'd6;
                end else begin
                    if (basesoc_choose_cmd_request[7]) begin
                        basesoc_choose_cmd_grant <= 3'd7;
                    end else begin
                        if (basesoc_choose_cmd_request[0]) begin
                            basesoc_choose_cmd_grant <= 1'd0;
                        end else begin
                            if (basesoc_choose_cmd_request[1]) begin
                                basesoc_choose_cmd_grant <= 1'd1;
                            end else begin
                                if (basesoc_choose_cmd_request[2]) begin
                                    basesoc_choose_cmd_grant <= 2'd2;
                                end else begin
                                    if (basesoc_choose_cmd_request[3]) begin
                                        basesoc_choose_cmd_grant <= 2'd3;
                                    end else begin
                                        if (basesoc_choose_cmd_request[4]) begin
                                            basesoc_choose_cmd_grant <= 3'd4;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd6: begin
                if (basesoc_choose_cmd_request[7]) begin
                    basesoc_choose_cmd_grant <= 3'd7;
                end else begin
                    if (basesoc_choose_cmd_request[0]) begin
                        basesoc_choose_cmd_grant <= 1'd0;
                    end else begin
                        if (basesoc_choose_cmd_request[1]) begin
                            basesoc_choose_cmd_grant <= 1'd1;
                        end else begin
                            if (basesoc_choose_cmd_request[2]) begin
                                basesoc_choose_cmd_grant <= 2'd2;
                            end else begin
                                if (basesoc_choose_cmd_request[3]) begin
                                    basesoc_choose_cmd_grant <= 2'd3;
                                end else begin
                                    if (basesoc_choose_cmd_request[4]) begin
                                        basesoc_choose_cmd_grant <= 3'd4;
                                    end else begin
                                        if (basesoc_choose_cmd_request[5]) begin
                                            basesoc_choose_cmd_grant <= 3'd5;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd7: begin
                if (basesoc_choose_cmd_request[0]) begin
                    basesoc_choose_cmd_grant <= 1'd0;
                end else begin
                    if (basesoc_choose_cmd_request[1]) begin
                        basesoc_choose_cmd_grant <= 1'd1;
                    end else begin
                        if (basesoc_choose_cmd_request[2]) begin
                            basesoc_choose_cmd_grant <= 2'd2;
                        end else begin
                            if (basesoc_choose_cmd_request[3]) begin
                                basesoc_choose_cmd_grant <= 2'd3;
                            end else begin
                                if (basesoc_choose_cmd_request[4]) begin
                                    basesoc_choose_cmd_grant <= 3'd4;
                                end else begin
                                    if (basesoc_choose_cmd_request[5]) begin
                                        basesoc_choose_cmd_grant <= 3'd5;
                                    end else begin
                                        if (basesoc_choose_cmd_request[6]) begin
                                            basesoc_choose_cmd_grant <= 3'd6;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        endcase
    end
    if (basesoc_choose_req_ce) begin
        case (basesoc_choose_req_grant)
            1'd0: begin
                if (basesoc_choose_req_request[1]) begin
                    basesoc_choose_req_grant <= 1'd1;
                end else begin
                    if (basesoc_choose_req_request[2]) begin
                        basesoc_choose_req_grant <= 2'd2;
                    end else begin
                        if (basesoc_choose_req_request[3]) begin
                            basesoc_choose_req_grant <= 2'd3;
                        end else begin
                            if (basesoc_choose_req_request[4]) begin
                                basesoc_choose_req_grant <= 3'd4;
                            end else begin
                                if (basesoc_choose_req_request[5]) begin
                                    basesoc_choose_req_grant <= 3'd5;
                                end else begin
                                    if (basesoc_choose_req_request[6]) begin
                                        basesoc_choose_req_grant <= 3'd6;
                                    end else begin
                                        if (basesoc_choose_req_request[7]) begin
                                            basesoc_choose_req_grant <= 3'd7;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            1'd1: begin
                if (basesoc_choose_req_request[2]) begin
                    basesoc_choose_req_grant <= 2'd2;
                end else begin
                    if (basesoc_choose_req_request[3]) begin
                        basesoc_choose_req_grant <= 2'd3;
                    end else begin
                        if (basesoc_choose_req_request[4]) begin
                            basesoc_choose_req_grant <= 3'd4;
                        end else begin
                            if (basesoc_choose_req_request[5]) begin
                                basesoc_choose_req_grant <= 3'd5;
                            end else begin
                                if (basesoc_choose_req_request[6]) begin
                                    basesoc_choose_req_grant <= 3'd6;
                                end else begin
                                    if (basesoc_choose_req_request[7]) begin
                                        basesoc_choose_req_grant <= 3'd7;
                                    end else begin
                                        if (basesoc_choose_req_request[0]) begin
                                            basesoc_choose_req_grant <= 1'd0;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd2: begin
                if (basesoc_choose_req_request[3]) begin
                    basesoc_choose_req_grant <= 2'd3;
                end else begin
                    if (basesoc_choose_req_request[4]) begin
                        basesoc_choose_req_grant <= 3'd4;
                    end else begin
                        if (basesoc_choose_req_request[5]) begin
                            basesoc_choose_req_grant <= 3'd5;
                        end else begin
                            if (basesoc_choose_req_request[6]) begin
                                basesoc_choose_req_grant <= 3'd6;
                            end else begin
                                if (basesoc_choose_req_request[7]) begin
                                    basesoc_choose_req_grant <= 3'd7;
                                end else begin
                                    if (basesoc_choose_req_request[0]) begin
                                        basesoc_choose_req_grant <= 1'd0;
                                    end else begin
                                        if (basesoc_choose_req_request[1]) begin
                                            basesoc_choose_req_grant <= 1'd1;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd3: begin
                if (basesoc_choose_req_request[4]) begin
                    basesoc_choose_req_grant <= 3'd4;
                end else begin
                    if (basesoc_choose_req_request[5]) begin
                        basesoc_choose_req_grant <= 3'd5;
                    end else begin
                        if (basesoc_choose_req_request[6]) begin
                            basesoc_choose_req_grant <= 3'd6;
                        end else begin
                            if (basesoc_choose_req_request[7]) begin
                                basesoc_choose_req_grant <= 3'd7;
                            end else begin
                                if (basesoc_choose_req_request[0]) begin
                                    basesoc_choose_req_grant <= 1'd0;
                                end else begin
                                    if (basesoc_choose_req_request[1]) begin
                                        basesoc_choose_req_grant <= 1'd1;
                                    end else begin
                                        if (basesoc_choose_req_request[2]) begin
                                            basesoc_choose_req_grant <= 2'd2;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd4: begin
                if (basesoc_choose_req_request[5]) begin
                    basesoc_choose_req_grant <= 3'd5;
                end else begin
                    if (basesoc_choose_req_request[6]) begin
                        basesoc_choose_req_grant <= 3'd6;
                    end else begin
                        if (basesoc_choose_req_request[7]) begin
                            basesoc_choose_req_grant <= 3'd7;
                        end else begin
                            if (basesoc_choose_req_request[0]) begin
                                basesoc_choose_req_grant <= 1'd0;
                            end else begin
                                if (basesoc_choose_req_request[1]) begin
                                    basesoc_choose_req_grant <= 1'd1;
                                end else begin
                                    if (basesoc_choose_req_request[2]) begin
                                        basesoc_choose_req_grant <= 2'd2;
                                    end else begin
                                        if (basesoc_choose_req_request[3]) begin
                                            basesoc_choose_req_grant <= 2'd3;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd5: begin
                if (basesoc_choose_req_request[6]) begin
                    basesoc_choose_req_grant <= 3'd6;
                end else begin
                    if (basesoc_choose_req_request[7]) begin
                        basesoc_choose_req_grant <= 3'd7;
                    end else begin
                        if (basesoc_choose_req_request[0]) begin
                            basesoc_choose_req_grant <= 1'd0;
                        end else begin
                            if (basesoc_choose_req_request[1]) begin
                                basesoc_choose_req_grant <= 1'd1;
                            end else begin
                                if (basesoc_choose_req_request[2]) begin
                                    basesoc_choose_req_grant <= 2'd2;
                                end else begin
                                    if (basesoc_choose_req_request[3]) begin
                                        basesoc_choose_req_grant <= 2'd3;
                                    end else begin
                                        if (basesoc_choose_req_request[4]) begin
                                            basesoc_choose_req_grant <= 3'd4;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd6: begin
                if (basesoc_choose_req_request[7]) begin
                    basesoc_choose_req_grant <= 3'd7;
                end else begin
                    if (basesoc_choose_req_request[0]) begin
                        basesoc_choose_req_grant <= 1'd0;
                    end else begin
                        if (basesoc_choose_req_request[1]) begin
                            basesoc_choose_req_grant <= 1'd1;
                        end else begin
                            if (basesoc_choose_req_request[2]) begin
                                basesoc_choose_req_grant <= 2'd2;
                            end else begin
                                if (basesoc_choose_req_request[3]) begin
                                    basesoc_choose_req_grant <= 2'd3;
                                end else begin
                                    if (basesoc_choose_req_request[4]) begin
                                        basesoc_choose_req_grant <= 3'd4;
                                    end else begin
                                        if (basesoc_choose_req_request[5]) begin
                                            basesoc_choose_req_grant <= 3'd5;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd7: begin
                if (basesoc_choose_req_request[0]) begin
                    basesoc_choose_req_grant <= 1'd0;
                end else begin
                    if (basesoc_choose_req_request[1]) begin
                        basesoc_choose_req_grant <= 1'd1;
                    end else begin
                        if (basesoc_choose_req_request[2]) begin
                            basesoc_choose_req_grant <= 2'd2;
                        end else begin
                            if (basesoc_choose_req_request[3]) begin
                                basesoc_choose_req_grant <= 2'd3;
                            end else begin
                                if (basesoc_choose_req_request[4]) begin
                                    basesoc_choose_req_grant <= 3'd4;
                                end else begin
                                    if (basesoc_choose_req_request[5]) begin
                                        basesoc_choose_req_grant <= 3'd5;
                                    end else begin
                                        if (basesoc_choose_req_request[6]) begin
                                            basesoc_choose_req_grant <= 3'd6;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        endcase
    end
    basesoc_dfi_p0_cs_n <= 1'd0;
    basesoc_dfi_p0_bank <= self0;
    basesoc_dfi_p0_address <= self1;
    basesoc_dfi_p0_cas_n <= (~self2);
    basesoc_dfi_p0_ras_n <= (~self3);
    basesoc_dfi_p0_we_n <= (~self4);
    basesoc_dfi_p0_rddata_en <= self5;
    basesoc_dfi_p0_wrdata_en <= self6;
    basesoc_dfi_p1_cs_n <= 1'd0;
    basesoc_dfi_p1_bank <= self7;
    basesoc_dfi_p1_address <= self8;
    basesoc_dfi_p1_cas_n <= (~self9);
    basesoc_dfi_p1_ras_n <= (~self10);
    basesoc_dfi_p1_we_n <= (~self11);
    basesoc_dfi_p1_rddata_en <= self12;
    basesoc_dfi_p1_wrdata_en <= self13;
    if (basesoc_trrdcon_valid) begin
        basesoc_trrdcon_count <= 1'd1;
        if (1'd0) begin
            basesoc_trrdcon_ready <= 1'd1;
        end else begin
            basesoc_trrdcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_trrdcon_ready)) begin
            basesoc_trrdcon_count <= (basesoc_trrdcon_count - 1'd1);
            if ((basesoc_trrdcon_count == 1'd1)) begin
                basesoc_trrdcon_ready <= 1'd1;
            end
        end
    end
    basesoc_tfawcon_window <= {basesoc_tfawcon_window, basesoc_tfawcon_valid};
    if ((basesoc_tfawcon_count < 3'd4)) begin
        if ((basesoc_tfawcon_count == 2'd3)) begin
            basesoc_tfawcon_ready <= (~basesoc_tfawcon_valid);
        end else begin
            basesoc_tfawcon_ready <= 1'd1;
        end
    end
    if (basesoc_tccdcon_valid) begin
        basesoc_tccdcon_count <= 1'd0;
        if (1'd1) begin
            basesoc_tccdcon_ready <= 1'd1;
        end else begin
            basesoc_tccdcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_tccdcon_ready)) begin
            basesoc_tccdcon_count <= (basesoc_tccdcon_count - 1'd1);
            if ((basesoc_tccdcon_count == 1'd1)) begin
                basesoc_tccdcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_twtrcon_valid) begin
        basesoc_twtrcon_count <= 3'd5;
        if (1'd0) begin
            basesoc_twtrcon_ready <= 1'd1;
        end else begin
            basesoc_twtrcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_twtrcon_ready)) begin
            basesoc_twtrcon_count <= (basesoc_twtrcon_count - 1'd1);
            if ((basesoc_twtrcon_count == 1'd1)) begin
                basesoc_twtrcon_ready <= 1'd1;
            end
        end
    end
    multiplexer_state <= multiplexer_next_state;
    new_master_wdata_ready0 <= ((((((((1'd0 | ((roundrobin0_grant == 1'd0) & basesoc_interface_bank0_wdata_ready)) | ((roundrobin1_grant == 1'd0) & basesoc_interface_bank1_wdata_ready)) | ((roundrobin2_grant == 1'd0) & basesoc_interface_bank2_wdata_ready)) | ((roundrobin3_grant == 1'd0) & basesoc_interface_bank3_wdata_ready)) | ((roundrobin4_grant == 1'd0) & basesoc_interface_bank4_wdata_ready)) | ((roundrobin5_grant == 1'd0) & basesoc_interface_bank5_wdata_ready)) | ((roundrobin6_grant == 1'd0) & basesoc_interface_bank6_wdata_ready)) | ((roundrobin7_grant == 1'd0) & basesoc_interface_bank7_wdata_ready));
    new_master_wdata_ready1 <= new_master_wdata_ready0;
    new_master_wdata_ready2 <= new_master_wdata_ready1;
    new_master_wdata_ready3 <= new_master_wdata_ready2;
    new_master_wdata_ready4 <= ((((((((1'd0 | ((roundrobin0_grant == 1'd1) & basesoc_interface_bank0_wdata_ready)) | ((roundrobin1_grant == 1'd1) & basesoc_interface_bank1_wdata_ready)) | ((roundrobin2_grant == 1'd1) & basesoc_interface_bank2_wdata_ready)) | ((roundrobin3_grant == 1'd1) & basesoc_interface_bank3_wdata_ready)) | ((roundrobin4_grant == 1'd1) & basesoc_interface_bank4_wdata_ready)) | ((roundrobin5_grant == 1'd1) & basesoc_interface_bank5_wdata_ready)) | ((roundrobin6_grant == 1'd1) & basesoc_interface_bank6_wdata_ready)) | ((roundrobin7_grant == 1'd1) & basesoc_interface_bank7_wdata_ready));
    new_master_wdata_ready5 <= new_master_wdata_ready4;
    new_master_wdata_ready6 <= new_master_wdata_ready5;
    new_master_wdata_ready7 <= new_master_wdata_ready6;
    new_master_wdata_ready8 <= ((((((((1'd0 | ((roundrobin0_grant == 2'd2) & basesoc_interface_bank0_wdata_ready)) | ((roundrobin1_grant == 2'd2) & basesoc_interface_bank1_wdata_ready)) | ((roundrobin2_grant == 2'd2) & basesoc_interface_bank2_wdata_ready)) | ((roundrobin3_grant == 2'd2) & basesoc_interface_bank3_wdata_ready)) | ((roundrobin4_grant == 2'd2) & basesoc_interface_bank4_wdata_ready)) | ((roundrobin5_grant == 2'd2) & basesoc_interface_bank5_wdata_ready)) | ((roundrobin6_grant == 2'd2) & basesoc_interface_bank6_wdata_ready)) | ((roundrobin7_grant == 2'd2) & basesoc_interface_bank7_wdata_ready));
    new_master_wdata_ready9 <= new_master_wdata_ready8;
    new_master_wdata_ready10 <= new_master_wdata_ready9;
    new_master_wdata_ready11 <= new_master_wdata_ready10;
    new_master_rdata_valid0 <= ((((((((1'd0 | ((roundrobin0_grant == 1'd0) & basesoc_interface_bank0_rdata_valid)) | ((roundrobin1_grant == 1'd0) & basesoc_interface_bank1_rdata_valid)) | ((roundrobin2_grant == 1'd0) & basesoc_interface_bank2_rdata_valid)) | ((roundrobin3_grant == 1'd0) & basesoc_interface_bank3_rdata_valid)) | ((roundrobin4_grant == 1'd0) & basesoc_interface_bank4_rdata_valid)) | ((roundrobin5_grant == 1'd0) & basesoc_interface_bank5_rdata_valid)) | ((roundrobin6_grant == 1'd0) & basesoc_interface_bank6_rdata_valid)) | ((roundrobin7_grant == 1'd0) & basesoc_interface_bank7_rdata_valid));
    new_master_rdata_valid1 <= new_master_rdata_valid0;
    new_master_rdata_valid2 <= new_master_rdata_valid1;
    new_master_rdata_valid3 <= new_master_rdata_valid2;
    new_master_rdata_valid4 <= new_master_rdata_valid3;
    new_master_rdata_valid5 <= new_master_rdata_valid4;
    new_master_rdata_valid6 <= new_master_rdata_valid5;
    new_master_rdata_valid7 <= new_master_rdata_valid6;
    new_master_rdata_valid8 <= new_master_rdata_valid7;
    new_master_rdata_valid9 <= new_master_rdata_valid8;
    new_master_rdata_valid10 <= new_master_rdata_valid9;
    new_master_rdata_valid11 <= new_master_rdata_valid10;
    new_master_rdata_valid12 <= new_master_rdata_valid11;
    new_master_rdata_valid13 <= new_master_rdata_valid12;
    new_master_rdata_valid14 <= ((((((((1'd0 | ((roundrobin0_grant == 1'd1) & basesoc_interface_bank0_rdata_valid)) | ((roundrobin1_grant == 1'd1) & basesoc_interface_bank1_rdata_valid)) | ((roundrobin2_grant == 1'd1) & basesoc_interface_bank2_rdata_valid)) | ((roundrobin3_grant == 1'd1) & basesoc_interface_bank3_rdata_valid)) | ((roundrobin4_grant == 1'd1) & basesoc_interface_bank4_rdata_valid)) | ((roundrobin5_grant == 1'd1) & basesoc_interface_bank5_rdata_valid)) | ((roundrobin6_grant == 1'd1) & basesoc_interface_bank6_rdata_valid)) | ((roundrobin7_grant == 1'd1) & basesoc_interface_bank7_rdata_valid));
    new_master_rdata_valid15 <= new_master_rdata_valid14;
    new_master_rdata_valid16 <= new_master_rdata_valid15;
    new_master_rdata_valid17 <= new_master_rdata_valid16;
    new_master_rdata_valid18 <= new_master_rdata_valid17;
    new_master_rdata_valid19 <= new_master_rdata_valid18;
    new_master_rdata_valid20 <= new_master_rdata_valid19;
    new_master_rdata_valid21 <= new_master_rdata_valid20;
    new_master_rdata_valid22 <= new_master_rdata_valid21;
    new_master_rdata_valid23 <= new_master_rdata_valid22;
    new_master_rdata_valid24 <= new_master_rdata_valid23;
    new_master_rdata_valid25 <= new_master_rdata_valid24;
    new_master_rdata_valid26 <= new_master_rdata_valid25;
    new_master_rdata_valid27 <= new_master_rdata_valid26;
    new_master_rdata_valid28 <= ((((((((1'd0 | ((roundrobin0_grant == 2'd2) & basesoc_interface_bank0_rdata_valid)) | ((roundrobin1_grant == 2'd2) & basesoc_interface_bank1_rdata_valid)) | ((roundrobin2_grant == 2'd2) & basesoc_interface_bank2_rdata_valid)) | ((roundrobin3_grant == 2'd2) & basesoc_interface_bank3_rdata_valid)) | ((roundrobin4_grant == 2'd2) & basesoc_interface_bank4_rdata_valid)) | ((roundrobin5_grant == 2'd2) & basesoc_interface_bank5_rdata_valid)) | ((roundrobin6_grant == 2'd2) & basesoc_interface_bank6_rdata_valid)) | ((roundrobin7_grant == 2'd2) & basesoc_interface_bank7_rdata_valid));
    new_master_rdata_valid29 <= new_master_rdata_valid28;
    new_master_rdata_valid30 <= new_master_rdata_valid29;
    new_master_rdata_valid31 <= new_master_rdata_valid30;
    new_master_rdata_valid32 <= new_master_rdata_valid31;
    new_master_rdata_valid33 <= new_master_rdata_valid32;
    new_master_rdata_valid34 <= new_master_rdata_valid33;
    new_master_rdata_valid35 <= new_master_rdata_valid34;
    new_master_rdata_valid36 <= new_master_rdata_valid35;
    new_master_rdata_valid37 <= new_master_rdata_valid36;
    new_master_rdata_valid38 <= new_master_rdata_valid37;
    new_master_rdata_valid39 <= new_master_rdata_valid38;
    new_master_rdata_valid40 <= new_master_rdata_valid39;
    new_master_rdata_valid41 <= new_master_rdata_valid40;
    if (roundrobin0_ce) begin
        case (roundrobin0_grant)
            1'd0: begin
                if (roundrobin0_request[1]) begin
                    roundrobin0_grant <= 1'd1;
                end else begin
                    if (roundrobin0_request[2]) begin
                        roundrobin0_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin0_request[2]) begin
                    roundrobin0_grant <= 2'd2;
                end else begin
                    if (roundrobin0_request[0]) begin
                        roundrobin0_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin0_request[0]) begin
                    roundrobin0_grant <= 1'd0;
                end else begin
                    if (roundrobin0_request[1]) begin
                        roundrobin0_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (roundrobin1_ce) begin
        case (roundrobin1_grant)
            1'd0: begin
                if (roundrobin1_request[1]) begin
                    roundrobin1_grant <= 1'd1;
                end else begin
                    if (roundrobin1_request[2]) begin
                        roundrobin1_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin1_request[2]) begin
                    roundrobin1_grant <= 2'd2;
                end else begin
                    if (roundrobin1_request[0]) begin
                        roundrobin1_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin1_request[0]) begin
                    roundrobin1_grant <= 1'd0;
                end else begin
                    if (roundrobin1_request[1]) begin
                        roundrobin1_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (roundrobin2_ce) begin
        case (roundrobin2_grant)
            1'd0: begin
                if (roundrobin2_request[1]) begin
                    roundrobin2_grant <= 1'd1;
                end else begin
                    if (roundrobin2_request[2]) begin
                        roundrobin2_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin2_request[2]) begin
                    roundrobin2_grant <= 2'd2;
                end else begin
                    if (roundrobin2_request[0]) begin
                        roundrobin2_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin2_request[0]) begin
                    roundrobin2_grant <= 1'd0;
                end else begin
                    if (roundrobin2_request[1]) begin
                        roundrobin2_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (roundrobin3_ce) begin
        case (roundrobin3_grant)
            1'd0: begin
                if (roundrobin3_request[1]) begin
                    roundrobin3_grant <= 1'd1;
                end else begin
                    if (roundrobin3_request[2]) begin
                        roundrobin3_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin3_request[2]) begin
                    roundrobin3_grant <= 2'd2;
                end else begin
                    if (roundrobin3_request[0]) begin
                        roundrobin3_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin3_request[0]) begin
                    roundrobin3_grant <= 1'd0;
                end else begin
                    if (roundrobin3_request[1]) begin
                        roundrobin3_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (roundrobin4_ce) begin
        case (roundrobin4_grant)
            1'd0: begin
                if (roundrobin4_request[1]) begin
                    roundrobin4_grant <= 1'd1;
                end else begin
                    if (roundrobin4_request[2]) begin
                        roundrobin4_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin4_request[2]) begin
                    roundrobin4_grant <= 2'd2;
                end else begin
                    if (roundrobin4_request[0]) begin
                        roundrobin4_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin4_request[0]) begin
                    roundrobin4_grant <= 1'd0;
                end else begin
                    if (roundrobin4_request[1]) begin
                        roundrobin4_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (roundrobin5_ce) begin
        case (roundrobin5_grant)
            1'd0: begin
                if (roundrobin5_request[1]) begin
                    roundrobin5_grant <= 1'd1;
                end else begin
                    if (roundrobin5_request[2]) begin
                        roundrobin5_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin5_request[2]) begin
                    roundrobin5_grant <= 2'd2;
                end else begin
                    if (roundrobin5_request[0]) begin
                        roundrobin5_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin5_request[0]) begin
                    roundrobin5_grant <= 1'd0;
                end else begin
                    if (roundrobin5_request[1]) begin
                        roundrobin5_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (roundrobin6_ce) begin
        case (roundrobin6_grant)
            1'd0: begin
                if (roundrobin6_request[1]) begin
                    roundrobin6_grant <= 1'd1;
                end else begin
                    if (roundrobin6_request[2]) begin
                        roundrobin6_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin6_request[2]) begin
                    roundrobin6_grant <= 2'd2;
                end else begin
                    if (roundrobin6_request[0]) begin
                        roundrobin6_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin6_request[0]) begin
                    roundrobin6_grant <= 1'd0;
                end else begin
                    if (roundrobin6_request[1]) begin
                        roundrobin6_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (roundrobin7_ce) begin
        case (roundrobin7_grant)
            1'd0: begin
                if (roundrobin7_request[1]) begin
                    roundrobin7_grant <= 1'd1;
                end else begin
                    if (roundrobin7_request[2]) begin
                        roundrobin7_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin7_request[2]) begin
                    roundrobin7_grant <= 2'd2;
                end else begin
                    if (roundrobin7_request[0]) begin
                        roundrobin7_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin7_request[0]) begin
                    roundrobin7_grant <= 1'd0;
                end else begin
                    if (roundrobin7_request[1]) begin
                        roundrobin7_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    litedramwishbone2native_state <= litedramwishbone2native_next_state;
    if (basesoc_aborted_litedramwishbone2native_next_value_ce) begin
        basesoc_aborted <= basesoc_aborted_litedramwishbone2native_next_value;
    end
    wishbone2csr_state <= wishbone2csr_next_state;
    if (interface1_dat_w_wishbone2csr_next_value_ce0) begin
        interface1_dat_w <= interface1_dat_w_wishbone2csr_next_value0;
    end
    if (interface1_adr_wishbone2csr_next_value_ce1) begin
        interface1_adr <= interface1_adr_wishbone2csr_next_value1;
    end
    if (interface1_re_wishbone2csr_next_value_ce2) begin
        interface1_re <= interface1_re_wishbone2csr_next_value2;
    end
    if (interface1_we_wishbone2csr_next_value_ce3) begin
        interface1_we <= interface1_we_wishbone2csr_next_value3;
    end
    csr_bankarray_interface0_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank0_sel) begin
        case (csr_bankarray_interface0_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_reset0_w;
            end
            1'd1: begin
                csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_scratch0_w;
            end
            2'd2: begin
                csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_bus_errors_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank0_reset0_re) begin
        basesoc_reset_storage[1:0] <= csr_bankarray_csrbank0_reset0_r;
    end
    basesoc_reset_re <= csr_bankarray_csrbank0_reset0_re;
    if (csr_bankarray_csrbank0_scratch0_re) begin
        basesoc_scratch_storage[31:0] <= csr_bankarray_csrbank0_scratch0_r;
    end
    basesoc_scratch_re <= csr_bankarray_csrbank0_scratch0_re;
    basesoc_bus_errors_re <= csr_bankarray_csrbank0_bus_errors_re;
    csr_bankarray_interface1_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank1_sel) begin
        case (csr_bankarray_interface1_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_dly_sel0_w;
            end
            1'd1: begin
                csr_bankarray_interface1_bank_bus_dat_r <= gw5ddrphy_rdly_dq_rst_w;
            end
            2'd2: begin
                csr_bankarray_interface1_bank_bus_dat_r <= gw5ddrphy_rdly_dq_inc_w;
            end
            2'd3: begin
                csr_bankarray_interface1_bank_bus_dat_r <= gw5ddrphy_rdly_dq_bitslip_rst_w;
            end
            3'd4: begin
                csr_bankarray_interface1_bank_bus_dat_r <= gw5ddrphy_rdly_dq_bitslip_w;
            end
            3'd5: begin
                csr_bankarray_interface1_bank_bus_dat_r <= gw5ddrphy_burstdet_clr_w;
            end
            3'd6: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_burstdet_seen_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank1_dly_sel0_re) begin
        gw5ddrphy_dly_sel_storage[3:0] <= csr_bankarray_csrbank1_dly_sel0_r;
    end
    gw5ddrphy_dly_sel_re <= csr_bankarray_csrbank1_dly_sel0_re;
    gw5ddrphy_burstdet_seen_re <= csr_bankarray_csrbank1_burstdet_seen_re;
    csr_bankarray_sel_r <= csr_bankarray_sel;
    csr_bankarray_interface2_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank2_sel) begin
        case (csr_bankarray_interface2_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_control0_w;
            end
            1'd1: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi0_command0_w;
            end
            2'd2: begin
                csr_bankarray_interface2_bank_bus_dat_r <= basesoc_phaseinjector0_command_issue_w;
            end
            2'd3: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi0_address0_w;
            end
            3'd4: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi0_baddress0_w;
            end
            3'd5: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi0_wrdata3_w;
            end
            3'd6: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi0_wrdata2_w;
            end
            3'd7: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi0_wrdata1_w;
            end
            4'd8: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi0_wrdata0_w;
            end
            4'd9: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi0_rddata3_w;
            end
            4'd10: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi0_rddata2_w;
            end
            4'd11: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi0_rddata1_w;
            end
            4'd12: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi0_rddata0_w;
            end
            4'd13: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi1_command0_w;
            end
            4'd14: begin
                csr_bankarray_interface2_bank_bus_dat_r <= basesoc_phaseinjector1_command_issue_w;
            end
            4'd15: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi1_address0_w;
            end
            5'd16: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi1_baddress0_w;
            end
            5'd17: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi1_wrdata3_w;
            end
            5'd18: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi1_wrdata2_w;
            end
            5'd19: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi1_wrdata1_w;
            end
            5'd20: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi1_wrdata0_w;
            end
            5'd21: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi1_rddata3_w;
            end
            5'd22: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi1_rddata2_w;
            end
            5'd23: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi1_rddata1_w;
            end
            5'd24: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dfii_pi1_rddata0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank2_dfii_control0_re) begin
        basesoc_storage[3:0] <= csr_bankarray_csrbank2_dfii_control0_r;
    end
    basesoc_re <= csr_bankarray_csrbank2_dfii_control0_re;
    if (csr_bankarray_csrbank2_dfii_pi0_command0_re) begin
        basesoc_phaseinjector0_command_storage[7:0] <= csr_bankarray_csrbank2_dfii_pi0_command0_r;
    end
    basesoc_phaseinjector0_command_re <= csr_bankarray_csrbank2_dfii_pi0_command0_re;
    if (csr_bankarray_csrbank2_dfii_pi0_address0_re) begin
        basesoc_phaseinjector0_address_storage[13:0] <= csr_bankarray_csrbank2_dfii_pi0_address0_r;
    end
    basesoc_phaseinjector0_address_re <= csr_bankarray_csrbank2_dfii_pi0_address0_re;
    if (csr_bankarray_csrbank2_dfii_pi0_baddress0_re) begin
        basesoc_phaseinjector0_baddress_storage[2:0] <= csr_bankarray_csrbank2_dfii_pi0_baddress0_r;
    end
    basesoc_phaseinjector0_baddress_re <= csr_bankarray_csrbank2_dfii_pi0_baddress0_re;
    if (csr_bankarray_csrbank2_dfii_pi0_wrdata3_re) begin
        basesoc_phaseinjector0_wrdata_storage[127:96] <= csr_bankarray_csrbank2_dfii_pi0_wrdata3_r;
    end
    if (csr_bankarray_csrbank2_dfii_pi0_wrdata2_re) begin
        basesoc_phaseinjector0_wrdata_storage[95:64] <= csr_bankarray_csrbank2_dfii_pi0_wrdata2_r;
    end
    if (csr_bankarray_csrbank2_dfii_pi0_wrdata1_re) begin
        basesoc_phaseinjector0_wrdata_storage[63:32] <= csr_bankarray_csrbank2_dfii_pi0_wrdata1_r;
    end
    if (csr_bankarray_csrbank2_dfii_pi0_wrdata0_re) begin
        basesoc_phaseinjector0_wrdata_storage[31:0] <= csr_bankarray_csrbank2_dfii_pi0_wrdata0_r;
    end
    basesoc_phaseinjector0_wrdata_re <= csr_bankarray_csrbank2_dfii_pi0_wrdata0_re;
    basesoc_phaseinjector0_rddata_re <= csr_bankarray_csrbank2_dfii_pi0_rddata0_re;
    if (csr_bankarray_csrbank2_dfii_pi1_command0_re) begin
        basesoc_phaseinjector1_command_storage[7:0] <= csr_bankarray_csrbank2_dfii_pi1_command0_r;
    end
    basesoc_phaseinjector1_command_re <= csr_bankarray_csrbank2_dfii_pi1_command0_re;
    if (csr_bankarray_csrbank2_dfii_pi1_address0_re) begin
        basesoc_phaseinjector1_address_storage[13:0] <= csr_bankarray_csrbank2_dfii_pi1_address0_r;
    end
    basesoc_phaseinjector1_address_re <= csr_bankarray_csrbank2_dfii_pi1_address0_re;
    if (csr_bankarray_csrbank2_dfii_pi1_baddress0_re) begin
        basesoc_phaseinjector1_baddress_storage[2:0] <= csr_bankarray_csrbank2_dfii_pi1_baddress0_r;
    end
    basesoc_phaseinjector1_baddress_re <= csr_bankarray_csrbank2_dfii_pi1_baddress0_re;
    if (csr_bankarray_csrbank2_dfii_pi1_wrdata3_re) begin
        basesoc_phaseinjector1_wrdata_storage[127:96] <= csr_bankarray_csrbank2_dfii_pi1_wrdata3_r;
    end
    if (csr_bankarray_csrbank2_dfii_pi1_wrdata2_re) begin
        basesoc_phaseinjector1_wrdata_storage[95:64] <= csr_bankarray_csrbank2_dfii_pi1_wrdata2_r;
    end
    if (csr_bankarray_csrbank2_dfii_pi1_wrdata1_re) begin
        basesoc_phaseinjector1_wrdata_storage[63:32] <= csr_bankarray_csrbank2_dfii_pi1_wrdata1_r;
    end
    if (csr_bankarray_csrbank2_dfii_pi1_wrdata0_re) begin
        basesoc_phaseinjector1_wrdata_storage[31:0] <= csr_bankarray_csrbank2_dfii_pi1_wrdata0_r;
    end
    basesoc_phaseinjector1_wrdata_re <= csr_bankarray_csrbank2_dfii_pi1_wrdata0_re;
    basesoc_phaseinjector1_rddata_re <= csr_bankarray_csrbank2_dfii_pi1_rddata0_re;
    csr_bankarray_interface3_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank3_sel) begin
        case (csr_bankarray_interface3_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_load0_w;
            end
            1'd1: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_reload0_w;
            end
            2'd2: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_en0_w;
            end
            2'd3: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_update_value0_w;
            end
            3'd4: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_value_w;
            end
            3'd5: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_ev_status_w;
            end
            3'd6: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_ev_pending_w;
            end
            3'd7: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_ev_enable0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank3_load0_re) begin
        basesoc_timer_load_storage[31:0] <= csr_bankarray_csrbank3_load0_r;
    end
    basesoc_timer_load_re <= csr_bankarray_csrbank3_load0_re;
    if (csr_bankarray_csrbank3_reload0_re) begin
        basesoc_timer_reload_storage[31:0] <= csr_bankarray_csrbank3_reload0_r;
    end
    basesoc_timer_reload_re <= csr_bankarray_csrbank3_reload0_re;
    if (csr_bankarray_csrbank3_en0_re) begin
        basesoc_timer_en_storage <= csr_bankarray_csrbank3_en0_r;
    end
    basesoc_timer_en_re <= csr_bankarray_csrbank3_en0_re;
    if (csr_bankarray_csrbank3_update_value0_re) begin
        basesoc_timer_update_value_storage <= csr_bankarray_csrbank3_update_value0_r;
    end
    basesoc_timer_update_value_re <= csr_bankarray_csrbank3_update_value0_re;
    basesoc_timer_value_re <= csr_bankarray_csrbank3_value_re;
    basesoc_timer_status_re <= csr_bankarray_csrbank3_ev_status_re;
    if (csr_bankarray_csrbank3_ev_pending_re) begin
        basesoc_timer_pending_r <= csr_bankarray_csrbank3_ev_pending_r;
    end
    basesoc_timer_pending_re <= csr_bankarray_csrbank3_ev_pending_re;
    if (csr_bankarray_csrbank3_ev_enable0_re) begin
        basesoc_timer_enable_storage <= csr_bankarray_csrbank3_ev_enable0_r;
    end
    basesoc_timer_enable_re <= csr_bankarray_csrbank3_ev_enable0_re;
    csr_bankarray_interface4_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank4_sel) begin
        case (csr_bankarray_interface4_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface4_bank_bus_dat_r <= basesoc_uart_rxtx_w;
            end
            1'd1: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_txfull_w;
            end
            2'd2: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_rxempty_w;
            end
            2'd3: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_ev_status_w;
            end
            3'd4: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_ev_pending_w;
            end
            3'd5: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_ev_enable0_w;
            end
            3'd6: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_txempty_w;
            end
            3'd7: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_rxfull_w;
            end
        endcase
    end
    basesoc_uart_txfull_re <= csr_bankarray_csrbank4_txfull_re;
    basesoc_uart_rxempty_re <= csr_bankarray_csrbank4_rxempty_re;
    basesoc_uart_status_re <= csr_bankarray_csrbank4_ev_status_re;
    if (csr_bankarray_csrbank4_ev_pending_re) begin
        basesoc_uart_pending_r[1:0] <= csr_bankarray_csrbank4_ev_pending_r;
    end
    basesoc_uart_pending_re <= csr_bankarray_csrbank4_ev_pending_re;
    if (csr_bankarray_csrbank4_ev_enable0_re) begin
        basesoc_uart_enable_storage[1:0] <= csr_bankarray_csrbank4_ev_enable0_r;
    end
    basesoc_uart_enable_re <= csr_bankarray_csrbank4_ev_enable0_re;
    basesoc_uart_txempty_re <= csr_bankarray_csrbank4_txempty_re;
    basesoc_uart_rxfull_re <= csr_bankarray_csrbank4_rxfull_re;
    if (sys_rst) begin
        basesoc_reset_storage <= 2'd0;
        basesoc_reset_re <= 1'd0;
        basesoc_scratch_storage <= 32'd305419896;
        basesoc_scratch_re <= 1'd0;
        basesoc_bus_errors_re <= 1'd0;
        basesoc_bus_errors <= 32'd0;
        basesoc_basesoc_ram_bus_ack <= 1'd0;
        basesoc_ram_bus_ram_bus_ack <= 1'd0;
        serial_tx <= 1'd1;
        basesoc_tx_tick <= 1'd0;
        basesoc_rx_tick <= 1'd0;
        basesoc_rx_rx_d <= 1'd0;
        basesoc_uart_txfull_re <= 1'd0;
        basesoc_uart_rxempty_re <= 1'd0;
        basesoc_uart_tx_pending <= 1'd0;
        basesoc_uart_tx_trigger_d <= 1'd0;
        basesoc_uart_rx_pending <= 1'd0;
        basesoc_uart_rx_trigger_d <= 1'd0;
        basesoc_uart_status_re <= 1'd0;
        basesoc_uart_pending_re <= 1'd0;
        basesoc_uart_pending_r <= 2'd0;
        basesoc_uart_enable_storage <= 2'd0;
        basesoc_uart_enable_re <= 1'd0;
        basesoc_uart_txempty_re <= 1'd0;
        basesoc_uart_rxfull_re <= 1'd0;
        basesoc_uart_tx_fifo_readable <= 1'd0;
        basesoc_uart_tx_fifo_level0 <= 5'd0;
        basesoc_uart_tx_fifo_produce <= 4'd0;
        basesoc_uart_tx_fifo_consume <= 4'd0;
        basesoc_uart_rx_fifo_readable <= 1'd0;
        basesoc_uart_rx_fifo_level0 <= 5'd0;
        basesoc_uart_rx_fifo_produce <= 4'd0;
        basesoc_uart_rx_fifo_consume <= 4'd0;
        basesoc_timer_load_storage <= 32'd0;
        basesoc_timer_load_re <= 1'd0;
        basesoc_timer_reload_storage <= 32'd0;
        basesoc_timer_reload_re <= 1'd0;
        basesoc_timer_en_storage <= 1'd0;
        basesoc_timer_en_re <= 1'd0;
        basesoc_timer_update_value_storage <= 1'd0;
        basesoc_timer_update_value_re <= 1'd0;
        basesoc_timer_value_status <= 32'd0;
        basesoc_timer_value_re <= 1'd0;
        basesoc_timer_zero_pending <= 1'd0;
        basesoc_timer_zero_trigger_d <= 1'd0;
        basesoc_timer_status_re <= 1'd0;
        basesoc_timer_pending_re <= 1'd0;
        basesoc_timer_pending_r <= 1'd0;
        basesoc_timer_enable_storage <= 1'd0;
        basesoc_timer_enable_re <= 1'd0;
        basesoc_timer_value <= 32'd0;
        gw5ddrphy_dly_sel_storage <= 4'd0;
        gw5ddrphy_dly_sel_re <= 1'd0;
        gw5ddrphy_burstdet_seen_status <= 4'd0;
        gw5ddrphy_burstdet_seen_re <= 1'd0;
        gw5ddrphy_rdly0 <= 3'd0;
        gw5ddrphy_burstdet_d0 <= 1'd0;
        gw5ddrphy_dm_o_data_d0 <= 8'd0;
        gw5ddrphy_dm_o_data_muxed0 <= 4'd0;
        gw5ddrphy_dq_o_data_d0 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed0 <= 4'd0;
        gw5ddrphy_bitslip0_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d0 <= 4'd0;
        gw5ddrphy_dq_o_data_d1 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed1 <= 4'd0;
        gw5ddrphy_bitslip1_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d1 <= 4'd0;
        gw5ddrphy_dq_o_data_d2 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed2 <= 4'd0;
        gw5ddrphy_bitslip2_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d2 <= 4'd0;
        gw5ddrphy_dq_o_data_d3 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed3 <= 4'd0;
        gw5ddrphy_bitslip3_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d3 <= 4'd0;
        gw5ddrphy_dq_o_data_d4 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed4 <= 4'd0;
        gw5ddrphy_bitslip4_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d4 <= 4'd0;
        gw5ddrphy_dq_o_data_d5 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed5 <= 4'd0;
        gw5ddrphy_bitslip5_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d5 <= 4'd0;
        gw5ddrphy_dq_o_data_d6 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed6 <= 4'd0;
        gw5ddrphy_bitslip6_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d6 <= 4'd0;
        gw5ddrphy_dq_o_data_d7 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed7 <= 4'd0;
        gw5ddrphy_bitslip7_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d7 <= 4'd0;
        gw5ddrphy_rdly1 <= 3'd0;
        gw5ddrphy_burstdet_d1 <= 1'd0;
        gw5ddrphy_dm_o_data_d1 <= 8'd0;
        gw5ddrphy_dm_o_data_muxed1 <= 4'd0;
        gw5ddrphy_dq_o_data_d8 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed8 <= 4'd0;
        gw5ddrphy_bitslip8_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d8 <= 4'd0;
        gw5ddrphy_dq_o_data_d9 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed9 <= 4'd0;
        gw5ddrphy_bitslip9_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d9 <= 4'd0;
        gw5ddrphy_dq_o_data_d10 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed10 <= 4'd0;
        gw5ddrphy_bitslip10_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d10 <= 4'd0;
        gw5ddrphy_dq_o_data_d11 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed11 <= 4'd0;
        gw5ddrphy_bitslip11_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d11 <= 4'd0;
        gw5ddrphy_dq_o_data_d12 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed12 <= 4'd0;
        gw5ddrphy_bitslip12_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d12 <= 4'd0;
        gw5ddrphy_dq_o_data_d13 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed13 <= 4'd0;
        gw5ddrphy_bitslip13_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d13 <= 4'd0;
        gw5ddrphy_dq_o_data_d14 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed14 <= 4'd0;
        gw5ddrphy_bitslip14_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d14 <= 4'd0;
        gw5ddrphy_dq_o_data_d15 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed15 <= 4'd0;
        gw5ddrphy_bitslip15_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d15 <= 4'd0;
        gw5ddrphy_rdly2 <= 3'd0;
        gw5ddrphy_burstdet_d2 <= 1'd0;
        gw5ddrphy_dm_o_data_d2 <= 8'd0;
        gw5ddrphy_dm_o_data_muxed2 <= 4'd0;
        gw5ddrphy_dq_o_data_d16 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed16 <= 4'd0;
        gw5ddrphy_bitslip16_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d16 <= 4'd0;
        gw5ddrphy_dq_o_data_d17 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed17 <= 4'd0;
        gw5ddrphy_bitslip17_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d17 <= 4'd0;
        gw5ddrphy_dq_o_data_d18 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed18 <= 4'd0;
        gw5ddrphy_bitslip18_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d18 <= 4'd0;
        gw5ddrphy_dq_o_data_d19 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed19 <= 4'd0;
        gw5ddrphy_bitslip19_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d19 <= 4'd0;
        gw5ddrphy_dq_o_data_d20 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed20 <= 4'd0;
        gw5ddrphy_bitslip20_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d20 <= 4'd0;
        gw5ddrphy_dq_o_data_d21 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed21 <= 4'd0;
        gw5ddrphy_bitslip21_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d21 <= 4'd0;
        gw5ddrphy_dq_o_data_d22 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed22 <= 4'd0;
        gw5ddrphy_bitslip22_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d22 <= 4'd0;
        gw5ddrphy_dq_o_data_d23 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed23 <= 4'd0;
        gw5ddrphy_bitslip23_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d23 <= 4'd0;
        gw5ddrphy_rdly3 <= 3'd0;
        gw5ddrphy_burstdet_d3 <= 1'd0;
        gw5ddrphy_dm_o_data_d3 <= 8'd0;
        gw5ddrphy_dm_o_data_muxed3 <= 4'd0;
        gw5ddrphy_dq_o_data_d24 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed24 <= 4'd0;
        gw5ddrphy_bitslip24_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d24 <= 4'd0;
        gw5ddrphy_dq_o_data_d25 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed25 <= 4'd0;
        gw5ddrphy_bitslip25_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d25 <= 4'd0;
        gw5ddrphy_dq_o_data_d26 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed26 <= 4'd0;
        gw5ddrphy_bitslip26_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d26 <= 4'd0;
        gw5ddrphy_dq_o_data_d27 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed27 <= 4'd0;
        gw5ddrphy_bitslip27_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d27 <= 4'd0;
        gw5ddrphy_dq_o_data_d28 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed28 <= 4'd0;
        gw5ddrphy_bitslip28_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d28 <= 4'd0;
        gw5ddrphy_dq_o_data_d29 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed29 <= 4'd0;
        gw5ddrphy_bitslip29_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d29 <= 4'd0;
        gw5ddrphy_dq_o_data_d30 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed30 <= 4'd0;
        gw5ddrphy_bitslip30_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d30 <= 4'd0;
        gw5ddrphy_dq_o_data_d31 <= 8'd0;
        gw5ddrphy_dq_o_data_muxed31 <= 4'd0;
        gw5ddrphy_bitslip31_value <= 2'd0;
        gw5ddrphy_dq_i_bitslip_o_d31 <= 4'd0;
        gw5ddrphy_rddata_en_tappeddelayline0 <= 1'd0;
        gw5ddrphy_rddata_en_tappeddelayline1 <= 1'd0;
        gw5ddrphy_rddata_en_tappeddelayline2 <= 1'd0;
        gw5ddrphy_rddata_en_tappeddelayline3 <= 1'd0;
        gw5ddrphy_rddata_en_tappeddelayline4 <= 1'd0;
        gw5ddrphy_rddata_en_tappeddelayline5 <= 1'd0;
        gw5ddrphy_rddata_en_tappeddelayline6 <= 1'd0;
        gw5ddrphy_rddata_en_tappeddelayline7 <= 1'd0;
        gw5ddrphy_rddata_en_tappeddelayline8 <= 1'd0;
        gw5ddrphy_rddata_en_tappeddelayline9 <= 1'd0;
        gw5ddrphy_rddata_en_tappeddelayline10 <= 1'd0;
        gw5ddrphy_rddata_en_tappeddelayline11 <= 1'd0;
        gw5ddrphy_rddata_en_tappeddelayline12 <= 1'd0;
        gw5ddrphy_wrdata_en_tappeddelayline0 <= 1'd0;
        gw5ddrphy_wrdata_en_tappeddelayline1 <= 1'd0;
        gw5ddrphy_wrdata_en_tappeddelayline2 <= 1'd0;
        gw5ddrphy_wrdata_en_tappeddelayline3 <= 1'd0;
        gw5ddrphy_wrdata_en_tappeddelayline4 <= 1'd0;
        gw5ddrphy_wrdata_en_tappeddelayline5 <= 1'd0;
        gw5ddrphy_wrdata_en_tappeddelayline6 <= 1'd0;
        basesoc_storage <= 4'd1;
        basesoc_re <= 1'd0;
        basesoc_phaseinjector0_command_storage <= 8'd0;
        basesoc_phaseinjector0_command_re <= 1'd0;
        basesoc_phaseinjector0_address_re <= 1'd0;
        basesoc_phaseinjector0_baddress_re <= 1'd0;
        basesoc_phaseinjector0_wrdata_re <= 1'd0;
        basesoc_phaseinjector0_rddata_status <= 128'd0;
        basesoc_phaseinjector0_rddata_re <= 1'd0;
        basesoc_phaseinjector1_command_storage <= 8'd0;
        basesoc_phaseinjector1_command_re <= 1'd0;
        basesoc_phaseinjector1_address_re <= 1'd0;
        basesoc_phaseinjector1_baddress_re <= 1'd0;
        basesoc_phaseinjector1_wrdata_re <= 1'd0;
        basesoc_phaseinjector1_rddata_status <= 128'd0;
        basesoc_phaseinjector1_rddata_re <= 1'd0;
        basesoc_dfi_p0_address <= 14'd0;
        basesoc_dfi_p0_bank <= 3'd0;
        basesoc_dfi_p0_cas_n <= 1'd1;
        basesoc_dfi_p0_cs_n <= 1'd1;
        basesoc_dfi_p0_ras_n <= 1'd1;
        basesoc_dfi_p0_we_n <= 1'd1;
        basesoc_dfi_p0_wrdata_en <= 1'd0;
        basesoc_dfi_p0_rddata_en <= 1'd0;
        basesoc_dfi_p1_address <= 14'd0;
        basesoc_dfi_p1_bank <= 3'd0;
        basesoc_dfi_p1_cas_n <= 1'd1;
        basesoc_dfi_p1_cs_n <= 1'd1;
        basesoc_dfi_p1_ras_n <= 1'd1;
        basesoc_dfi_p1_we_n <= 1'd1;
        basesoc_dfi_p1_wrdata_en <= 1'd0;
        basesoc_dfi_p1_rddata_en <= 1'd0;
        basesoc_cmd_payload_a <= 14'd0;
        basesoc_cmd_payload_ba <= 3'd0;
        basesoc_cmd_payload_cas <= 1'd0;
        basesoc_cmd_payload_ras <= 1'd0;
        basesoc_cmd_payload_we <= 1'd0;
        basesoc_timer_count1 <= 9'd390;
        basesoc_postponer_req_o <= 1'd0;
        basesoc_postponer_count <= 1'd0;
        basesoc_sequencer_done1 <= 1'd0;
        basesoc_sequencer_trigger <= 6'd0;
        basesoc_sequencer_count <= 1'd0;
        basesoc_zqcs_timer_count1 <= 26'd49999999;
        basesoc_zqcs_executer_done <= 1'd0;
        basesoc_zqcs_executer_trigger <= 5'd0;
        basesoc_bankmachine0_level <= 4'd0;
        basesoc_bankmachine0_produce <= 3'd0;
        basesoc_bankmachine0_consume <= 3'd0;
        basesoc_bankmachine0_pipe_valid_source_valid <= 1'd0;
        basesoc_bankmachine0_pipe_valid_source_payload_we <= 1'd0;
        basesoc_bankmachine0_pipe_valid_source_payload_addr <= 21'd0;
        basesoc_bankmachine0_row <= 14'd0;
        basesoc_bankmachine0_row_opened <= 1'd0;
        basesoc_bankmachine0_twtpcon_ready <= 1'd0;
        basesoc_bankmachine0_twtpcon_count <= 3'd0;
        basesoc_bankmachine0_trccon_ready <= 1'd0;
        basesoc_bankmachine0_trccon_count <= 2'd0;
        basesoc_bankmachine0_trascon_ready <= 1'd0;
        basesoc_bankmachine0_trascon_count <= 2'd0;
        basesoc_bankmachine1_level <= 4'd0;
        basesoc_bankmachine1_produce <= 3'd0;
        basesoc_bankmachine1_consume <= 3'd0;
        basesoc_bankmachine1_pipe_valid_source_valid <= 1'd0;
        basesoc_bankmachine1_pipe_valid_source_payload_we <= 1'd0;
        basesoc_bankmachine1_pipe_valid_source_payload_addr <= 21'd0;
        basesoc_bankmachine1_row <= 14'd0;
        basesoc_bankmachine1_row_opened <= 1'd0;
        basesoc_bankmachine1_twtpcon_ready <= 1'd0;
        basesoc_bankmachine1_twtpcon_count <= 3'd0;
        basesoc_bankmachine1_trccon_ready <= 1'd0;
        basesoc_bankmachine1_trccon_count <= 2'd0;
        basesoc_bankmachine1_trascon_ready <= 1'd0;
        basesoc_bankmachine1_trascon_count <= 2'd0;
        basesoc_bankmachine2_level <= 4'd0;
        basesoc_bankmachine2_produce <= 3'd0;
        basesoc_bankmachine2_consume <= 3'd0;
        basesoc_bankmachine2_pipe_valid_source_valid <= 1'd0;
        basesoc_bankmachine2_pipe_valid_source_payload_we <= 1'd0;
        basesoc_bankmachine2_pipe_valid_source_payload_addr <= 21'd0;
        basesoc_bankmachine2_row <= 14'd0;
        basesoc_bankmachine2_row_opened <= 1'd0;
        basesoc_bankmachine2_twtpcon_ready <= 1'd0;
        basesoc_bankmachine2_twtpcon_count <= 3'd0;
        basesoc_bankmachine2_trccon_ready <= 1'd0;
        basesoc_bankmachine2_trccon_count <= 2'd0;
        basesoc_bankmachine2_trascon_ready <= 1'd0;
        basesoc_bankmachine2_trascon_count <= 2'd0;
        basesoc_bankmachine3_level <= 4'd0;
        basesoc_bankmachine3_produce <= 3'd0;
        basesoc_bankmachine3_consume <= 3'd0;
        basesoc_bankmachine3_pipe_valid_source_valid <= 1'd0;
        basesoc_bankmachine3_pipe_valid_source_payload_we <= 1'd0;
        basesoc_bankmachine3_pipe_valid_source_payload_addr <= 21'd0;
        basesoc_bankmachine3_row <= 14'd0;
        basesoc_bankmachine3_row_opened <= 1'd0;
        basesoc_bankmachine3_twtpcon_ready <= 1'd0;
        basesoc_bankmachine3_twtpcon_count <= 3'd0;
        basesoc_bankmachine3_trccon_ready <= 1'd0;
        basesoc_bankmachine3_trccon_count <= 2'd0;
        basesoc_bankmachine3_trascon_ready <= 1'd0;
        basesoc_bankmachine3_trascon_count <= 2'd0;
        basesoc_bankmachine4_level <= 4'd0;
        basesoc_bankmachine4_produce <= 3'd0;
        basesoc_bankmachine4_consume <= 3'd0;
        basesoc_bankmachine4_pipe_valid_source_valid <= 1'd0;
        basesoc_bankmachine4_pipe_valid_source_payload_we <= 1'd0;
        basesoc_bankmachine4_pipe_valid_source_payload_addr <= 21'd0;
        basesoc_bankmachine4_row <= 14'd0;
        basesoc_bankmachine4_row_opened <= 1'd0;
        basesoc_bankmachine4_twtpcon_ready <= 1'd0;
        basesoc_bankmachine4_twtpcon_count <= 3'd0;
        basesoc_bankmachine4_trccon_ready <= 1'd0;
        basesoc_bankmachine4_trccon_count <= 2'd0;
        basesoc_bankmachine4_trascon_ready <= 1'd0;
        basesoc_bankmachine4_trascon_count <= 2'd0;
        basesoc_bankmachine5_level <= 4'd0;
        basesoc_bankmachine5_produce <= 3'd0;
        basesoc_bankmachine5_consume <= 3'd0;
        basesoc_bankmachine5_pipe_valid_source_valid <= 1'd0;
        basesoc_bankmachine5_pipe_valid_source_payload_we <= 1'd0;
        basesoc_bankmachine5_pipe_valid_source_payload_addr <= 21'd0;
        basesoc_bankmachine5_row <= 14'd0;
        basesoc_bankmachine5_row_opened <= 1'd0;
        basesoc_bankmachine5_twtpcon_ready <= 1'd0;
        basesoc_bankmachine5_twtpcon_count <= 3'd0;
        basesoc_bankmachine5_trccon_ready <= 1'd0;
        basesoc_bankmachine5_trccon_count <= 2'd0;
        basesoc_bankmachine5_trascon_ready <= 1'd0;
        basesoc_bankmachine5_trascon_count <= 2'd0;
        basesoc_bankmachine6_level <= 4'd0;
        basesoc_bankmachine6_produce <= 3'd0;
        basesoc_bankmachine6_consume <= 3'd0;
        basesoc_bankmachine6_pipe_valid_source_valid <= 1'd0;
        basesoc_bankmachine6_pipe_valid_source_payload_we <= 1'd0;
        basesoc_bankmachine6_pipe_valid_source_payload_addr <= 21'd0;
        basesoc_bankmachine6_row <= 14'd0;
        basesoc_bankmachine6_row_opened <= 1'd0;
        basesoc_bankmachine6_twtpcon_ready <= 1'd0;
        basesoc_bankmachine6_twtpcon_count <= 3'd0;
        basesoc_bankmachine6_trccon_ready <= 1'd0;
        basesoc_bankmachine6_trccon_count <= 2'd0;
        basesoc_bankmachine6_trascon_ready <= 1'd0;
        basesoc_bankmachine6_trascon_count <= 2'd0;
        basesoc_bankmachine7_level <= 4'd0;
        basesoc_bankmachine7_produce <= 3'd0;
        basesoc_bankmachine7_consume <= 3'd0;
        basesoc_bankmachine7_pipe_valid_source_valid <= 1'd0;
        basesoc_bankmachine7_pipe_valid_source_payload_we <= 1'd0;
        basesoc_bankmachine7_pipe_valid_source_payload_addr <= 21'd0;
        basesoc_bankmachine7_row <= 14'd0;
        basesoc_bankmachine7_row_opened <= 1'd0;
        basesoc_bankmachine7_twtpcon_ready <= 1'd0;
        basesoc_bankmachine7_twtpcon_count <= 3'd0;
        basesoc_bankmachine7_trccon_ready <= 1'd0;
        basesoc_bankmachine7_trccon_count <= 2'd0;
        basesoc_bankmachine7_trascon_ready <= 1'd0;
        basesoc_bankmachine7_trascon_count <= 2'd0;
        basesoc_choose_cmd_grant <= 3'd0;
        basesoc_choose_req_grant <= 3'd0;
        basesoc_trrdcon_ready <= 1'd0;
        basesoc_trrdcon_count <= 1'd0;
        basesoc_tfawcon_ready <= 1'd1;
        basesoc_tfawcon_window <= 3'd0;
        basesoc_tccdcon_ready <= 1'd0;
        basesoc_tccdcon_count <= 1'd0;
        basesoc_twtrcon_ready <= 1'd0;
        basesoc_twtrcon_count <= 3'd0;
        basesoc_time0 <= 5'd0;
        basesoc_time1 <= 4'd0;
        basesoc_aborted <= 1'd0;
        interface1_re <= 1'd0;
        interface1_we <= 1'd0;
        slave_sel_r <= 6'd0;
        count <= 20'd1000000;
        csr_bankarray_sel_r <= 1'd0;
        rs232phytx_state <= 1'd0;
        rs232phyrx_state <= 1'd0;
        refresher_state <= 2'd0;
        bankmachine0_state <= 3'd0;
        bankmachine1_state <= 3'd0;
        bankmachine2_state <= 3'd0;
        bankmachine3_state <= 3'd0;
        bankmachine4_state <= 3'd0;
        bankmachine5_state <= 3'd0;
        bankmachine6_state <= 3'd0;
        bankmachine7_state <= 3'd0;
        multiplexer_state <= 4'd0;
        roundrobin0_grant <= 2'd0;
        roundrobin1_grant <= 2'd0;
        roundrobin2_grant <= 2'd0;
        roundrobin3_grant <= 2'd0;
        roundrobin4_grant <= 2'd0;
        roundrobin5_grant <= 2'd0;
        roundrobin6_grant <= 2'd0;
        roundrobin7_grant <= 2'd0;
        new_master_wdata_ready0 <= 1'd0;
        new_master_wdata_ready1 <= 1'd0;
        new_master_wdata_ready2 <= 1'd0;
        new_master_wdata_ready3 <= 1'd0;
        new_master_wdata_ready4 <= 1'd0;
        new_master_wdata_ready5 <= 1'd0;
        new_master_wdata_ready6 <= 1'd0;
        new_master_wdata_ready7 <= 1'd0;
        new_master_wdata_ready8 <= 1'd0;
        new_master_wdata_ready9 <= 1'd0;
        new_master_wdata_ready10 <= 1'd0;
        new_master_wdata_ready11 <= 1'd0;
        new_master_rdata_valid0 <= 1'd0;
        new_master_rdata_valid1 <= 1'd0;
        new_master_rdata_valid2 <= 1'd0;
        new_master_rdata_valid3 <= 1'd0;
        new_master_rdata_valid4 <= 1'd0;
        new_master_rdata_valid5 <= 1'd0;
        new_master_rdata_valid6 <= 1'd0;
        new_master_rdata_valid7 <= 1'd0;
        new_master_rdata_valid8 <= 1'd0;
        new_master_rdata_valid9 <= 1'd0;
        new_master_rdata_valid10 <= 1'd0;
        new_master_rdata_valid11 <= 1'd0;
        new_master_rdata_valid12 <= 1'd0;
        new_master_rdata_valid13 <= 1'd0;
        new_master_rdata_valid14 <= 1'd0;
        new_master_rdata_valid15 <= 1'd0;
        new_master_rdata_valid16 <= 1'd0;
        new_master_rdata_valid17 <= 1'd0;
        new_master_rdata_valid18 <= 1'd0;
        new_master_rdata_valid19 <= 1'd0;
        new_master_rdata_valid20 <= 1'd0;
        new_master_rdata_valid21 <= 1'd0;
        new_master_rdata_valid22 <= 1'd0;
        new_master_rdata_valid23 <= 1'd0;
        new_master_rdata_valid24 <= 1'd0;
        new_master_rdata_valid25 <= 1'd0;
        new_master_rdata_valid26 <= 1'd0;
        new_master_rdata_valid27 <= 1'd0;
        new_master_rdata_valid28 <= 1'd0;
        new_master_rdata_valid29 <= 1'd0;
        new_master_rdata_valid30 <= 1'd0;
        new_master_rdata_valid31 <= 1'd0;
        new_master_rdata_valid32 <= 1'd0;
        new_master_rdata_valid33 <= 1'd0;
        new_master_rdata_valid34 <= 1'd0;
        new_master_rdata_valid35 <= 1'd0;
        new_master_rdata_valid36 <= 1'd0;
        new_master_rdata_valid37 <= 1'd0;
        new_master_rdata_valid38 <= 1'd0;
        new_master_rdata_valid39 <= 1'd0;
        new_master_rdata_valid40 <= 1'd0;
        new_master_rdata_valid41 <= 1'd0;
        litedramwishbone2native_state <= 2'd0;
        wishbone2csr_state <= 2'd0;
    end
    multiregimpl00 <= serial_rx;
    multiregimpl01 <= multiregimpl00;
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Instance DHCE of DHCE Module.
//------------------------------------------------------------------------------
DHCE DHCE(
	// Inputs.
	.CEN    (crg_stop),
	.CLKIN  (sys2x_i_clk),

	// Outputs.
	.CLKOUT (sys2x_clk)
);

//------------------------------------------------------------------------------
// Memory rom: 32768-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [31:0] rom[0:32767];
initial begin
	$readmemh("sipeed_tang_mega_138k_pro_rom.init", rom);
end
reg [31:0] rom_dat0;
always @(posedge sys_clk) begin
	rom_dat0 <= rom[basesoc_basesoc_adr];
end
assign basesoc_basesoc_dat_r = rom_dat0;


//------------------------------------------------------------------------------
// Memory sram: 2048-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] sram[0:2047];
initial begin
	$readmemh("sipeed_tang_mega_138k_pro_sram.init", sram);
end
reg [10:0] sram_adr0;
always @(posedge sys_clk) begin
	if (basesoc_ram_we[0])
		sram[basesoc_ram_adr][7:0] <= basesoc_ram_dat_w[7:0];
	if (basesoc_ram_we[1])
		sram[basesoc_ram_adr][15:8] <= basesoc_ram_dat_w[15:8];
	if (basesoc_ram_we[2])
		sram[basesoc_ram_adr][23:16] <= basesoc_ram_dat_w[23:16];
	if (basesoc_ram_we[3])
		sram[basesoc_ram_adr][31:24] <= basesoc_ram_dat_w[31:24];
	sram_adr0 <= basesoc_ram_adr;
end
assign basesoc_ram_dat_r = sram[sram_adr0];


//------------------------------------------------------------------------------
// Memory mem: 52-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [7:0] mem[0:51];
initial begin
	$readmemh("sipeed_tang_mega_138k_pro_mem.init", mem);
end
reg [5:0] mem_adr0;
always @(posedge sys_clk) begin
	mem_adr0 <= csr_bankarray_adr;
end
assign csr_bankarray_dat_r = mem[mem_adr0];


//------------------------------------------------------------------------------
// Memory storage: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage[0:15];
reg [9:0] storage_dat0;
reg [9:0] storage_dat1;
always @(posedge sys_clk) begin
	if (basesoc_uart_tx_fifo_wrport_we)
		storage[basesoc_uart_tx_fifo_wrport_adr] <= basesoc_uart_tx_fifo_wrport_dat_w;
	storage_dat0 <= storage[basesoc_uart_tx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (basesoc_uart_tx_fifo_rdport_re)
		storage_dat1 <= storage[basesoc_uart_tx_fifo_rdport_adr];
end
assign basesoc_uart_tx_fifo_wrport_dat_r = storage_dat0;
assign basesoc_uart_tx_fifo_rdport_dat_r = storage_dat1;


//------------------------------------------------------------------------------
// Memory storage_1: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_1[0:15];
reg [9:0] storage_1_dat0;
reg [9:0] storage_1_dat1;
always @(posedge sys_clk) begin
	if (basesoc_uart_rx_fifo_wrport_we)
		storage_1[basesoc_uart_rx_fifo_wrport_adr] <= basesoc_uart_rx_fifo_wrport_dat_w;
	storage_1_dat0 <= storage_1[basesoc_uart_rx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (basesoc_uart_rx_fifo_rdport_re)
		storage_1_dat1 <= storage_1[basesoc_uart_rx_fifo_rdport_adr];
end
assign basesoc_uart_rx_fifo_wrport_dat_r = storage_1_dat0;
assign basesoc_uart_rx_fifo_rdport_dat_r = storage_1_dat1;


//------------------------------------------------------------------------------
// Instance DDRDLL of DDRDLL Module.
//------------------------------------------------------------------------------
DDRDLL #(
	// Parameters.
	.SCAL_EN ("false")
) DDRDLL (
	// Inputs.
	.CLKIN    (sys2x_clk),
	.RESET    (init_rst),
	.STOP     (gw5ddrphy_freeze),
	.UPDNCNTL ((~gw5ddrphy_update)),

	// Outputs.
	.LOCK     (gw5ddrphy_lock0),
	.STEP     (gw5ddrphy_delay1)
);

//------------------------------------------------------------------------------
// Instance OSER4 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4 (
	// Inputs.
	.D0    (1'd0),
	.D1    (1'd1),
	.D2    (1'd0),
	.D3    (1'd1),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f0),
	.Q1    (gw5ddrphy0)
);

//------------------------------------------------------------------------------
// Instance IODELAY of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f0),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy1),
	.DO      (gw5ddrphy_pad_clk)
);

//------------------------------------------------------------------------------
// Instance ELVDS_OBUF of ELVDS_OBUF Module.
//------------------------------------------------------------------------------
ELVDS_OBUF ELVDS_OBUF(
	// Inputs.
	.I  (gw5ddrphy_pad_clk),

	// Outputs.
	.O  (ddram_clk_p),
	.OB (ddram_clk_n)
);

//------------------------------------------------------------------------------
// Instance OSER4_1 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_1 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_reset_n),
	.D1    (gw5ddrphy_dfi_p0_reset_n),
	.D2    (gw5ddrphy_dfi_p1_reset_n),
	.D3    (gw5ddrphy_dfi_p1_reset_n),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f1),
	.Q1    (gw5ddrphy2)
);

//------------------------------------------------------------------------------
// Instance IODELAY_1 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_1 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f1),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy3),
	.DO      (ddram_reset_n)
);

//------------------------------------------------------------------------------
// Instance OSER4_2 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_2 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_cs_n),
	.D1    (gw5ddrphy_dfi_p0_cs_n),
	.D2    (gw5ddrphy_dfi_p1_cs_n),
	.D3    (gw5ddrphy_dfi_p1_cs_n),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f2),
	.Q1    (gw5ddrphy4)
);

//------------------------------------------------------------------------------
// Instance IODELAY_2 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_2 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f2),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy5),
	.DO      (ddram_cs_n)
);

//------------------------------------------------------------------------------
// Instance OSER4_3 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_3 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_address[0]),
	.D1    (gw5ddrphy_dfi_p0_address[0]),
	.D2    (gw5ddrphy_dfi_p1_address[0]),
	.D3    (gw5ddrphy_dfi_p1_address[0]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f3),
	.Q1    (gw5ddrphy6)
);

//------------------------------------------------------------------------------
// Instance IODELAY_3 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_3 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f3),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy7),
	.DO      (ddram_a[0])
);

//------------------------------------------------------------------------------
// Instance OSER4_4 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_4 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_address[1]),
	.D1    (gw5ddrphy_dfi_p0_address[1]),
	.D2    (gw5ddrphy_dfi_p1_address[1]),
	.D3    (gw5ddrphy_dfi_p1_address[1]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f4),
	.Q1    (gw5ddrphy8)
);

//------------------------------------------------------------------------------
// Instance IODELAY_4 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_4 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f4),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy9),
	.DO      (ddram_a[1])
);

//------------------------------------------------------------------------------
// Instance OSER4_5 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_5 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_address[2]),
	.D1    (gw5ddrphy_dfi_p0_address[2]),
	.D2    (gw5ddrphy_dfi_p1_address[2]),
	.D3    (gw5ddrphy_dfi_p1_address[2]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f5),
	.Q1    (gw5ddrphy10)
);

//------------------------------------------------------------------------------
// Instance IODELAY_5 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_5 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f5),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy11),
	.DO      (ddram_a[2])
);

//------------------------------------------------------------------------------
// Instance OSER4_6 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_6 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_address[3]),
	.D1    (gw5ddrphy_dfi_p0_address[3]),
	.D2    (gw5ddrphy_dfi_p1_address[3]),
	.D3    (gw5ddrphy_dfi_p1_address[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f6),
	.Q1    (gw5ddrphy12)
);

//------------------------------------------------------------------------------
// Instance IODELAY_6 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_6 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f6),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy13),
	.DO      (ddram_a[3])
);

//------------------------------------------------------------------------------
// Instance OSER4_7 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_7 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_address[4]),
	.D1    (gw5ddrphy_dfi_p0_address[4]),
	.D2    (gw5ddrphy_dfi_p1_address[4]),
	.D3    (gw5ddrphy_dfi_p1_address[4]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f7),
	.Q1    (gw5ddrphy14)
);

//------------------------------------------------------------------------------
// Instance IODELAY_7 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_7 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f7),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy15),
	.DO      (ddram_a[4])
);

//------------------------------------------------------------------------------
// Instance OSER4_8 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_8 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_address[5]),
	.D1    (gw5ddrphy_dfi_p0_address[5]),
	.D2    (gw5ddrphy_dfi_p1_address[5]),
	.D3    (gw5ddrphy_dfi_p1_address[5]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f8),
	.Q1    (gw5ddrphy16)
);

//------------------------------------------------------------------------------
// Instance IODELAY_8 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_8 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f8),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy17),
	.DO      (ddram_a[5])
);

//------------------------------------------------------------------------------
// Instance OSER4_9 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_9 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_address[6]),
	.D1    (gw5ddrphy_dfi_p0_address[6]),
	.D2    (gw5ddrphy_dfi_p1_address[6]),
	.D3    (gw5ddrphy_dfi_p1_address[6]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f9),
	.Q1    (gw5ddrphy18)
);

//------------------------------------------------------------------------------
// Instance IODELAY_9 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_9 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f9),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy19),
	.DO      (ddram_a[6])
);

//------------------------------------------------------------------------------
// Instance OSER4_10 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_10 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_address[7]),
	.D1    (gw5ddrphy_dfi_p0_address[7]),
	.D2    (gw5ddrphy_dfi_p1_address[7]),
	.D3    (gw5ddrphy_dfi_p1_address[7]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f10),
	.Q1    (gw5ddrphy20)
);

//------------------------------------------------------------------------------
// Instance IODELAY_10 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_10 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f10),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy21),
	.DO      (ddram_a[7])
);

//------------------------------------------------------------------------------
// Instance OSER4_11 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_11 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_address[8]),
	.D1    (gw5ddrphy_dfi_p0_address[8]),
	.D2    (gw5ddrphy_dfi_p1_address[8]),
	.D3    (gw5ddrphy_dfi_p1_address[8]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f11),
	.Q1    (gw5ddrphy22)
);

//------------------------------------------------------------------------------
// Instance IODELAY_11 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_11 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f11),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy23),
	.DO      (ddram_a[8])
);

//------------------------------------------------------------------------------
// Instance OSER4_12 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_12 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_address[9]),
	.D1    (gw5ddrphy_dfi_p0_address[9]),
	.D2    (gw5ddrphy_dfi_p1_address[9]),
	.D3    (gw5ddrphy_dfi_p1_address[9]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f12),
	.Q1    (gw5ddrphy24)
);

//------------------------------------------------------------------------------
// Instance IODELAY_12 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_12 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f12),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy25),
	.DO      (ddram_a[9])
);

//------------------------------------------------------------------------------
// Instance OSER4_13 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_13 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_address[10]),
	.D1    (gw5ddrphy_dfi_p0_address[10]),
	.D2    (gw5ddrphy_dfi_p1_address[10]),
	.D3    (gw5ddrphy_dfi_p1_address[10]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f13),
	.Q1    (gw5ddrphy26)
);

//------------------------------------------------------------------------------
// Instance IODELAY_13 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_13 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f13),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy27),
	.DO      (ddram_a[10])
);

//------------------------------------------------------------------------------
// Instance OSER4_14 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_14 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_address[11]),
	.D1    (gw5ddrphy_dfi_p0_address[11]),
	.D2    (gw5ddrphy_dfi_p1_address[11]),
	.D3    (gw5ddrphy_dfi_p1_address[11]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f14),
	.Q1    (gw5ddrphy28)
);

//------------------------------------------------------------------------------
// Instance IODELAY_14 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_14 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f14),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy29),
	.DO      (ddram_a[11])
);

//------------------------------------------------------------------------------
// Instance OSER4_15 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_15 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_address[12]),
	.D1    (gw5ddrphy_dfi_p0_address[12]),
	.D2    (gw5ddrphy_dfi_p1_address[12]),
	.D3    (gw5ddrphy_dfi_p1_address[12]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f15),
	.Q1    (gw5ddrphy30)
);

//------------------------------------------------------------------------------
// Instance IODELAY_15 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_15 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f15),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy31),
	.DO      (ddram_a[12])
);

//------------------------------------------------------------------------------
// Instance OSER4_16 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_16 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_address[13]),
	.D1    (gw5ddrphy_dfi_p0_address[13]),
	.D2    (gw5ddrphy_dfi_p1_address[13]),
	.D3    (gw5ddrphy_dfi_p1_address[13]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f16),
	.Q1    (gw5ddrphy32)
);

//------------------------------------------------------------------------------
// Instance IODELAY_16 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_16 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f16),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy33),
	.DO      (ddram_a[13])
);

//------------------------------------------------------------------------------
// Instance OSER4_17 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_17 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_address[14]),
	.D1    (gw5ddrphy_dfi_p0_address[14]),
	.D2    (gw5ddrphy_dfi_p1_address[14]),
	.D3    (gw5ddrphy_dfi_p1_address[14]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f17),
	.Q1    (gw5ddrphy34)
);

//------------------------------------------------------------------------------
// Instance IODELAY_17 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_17 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f17),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy35),
	.DO      (ddram_a[14])
);

//------------------------------------------------------------------------------
// Instance OSER4_18 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_18 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_bank[0]),
	.D1    (gw5ddrphy_dfi_p0_bank[0]),
	.D2    (gw5ddrphy_dfi_p1_bank[0]),
	.D3    (gw5ddrphy_dfi_p1_bank[0]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f18),
	.Q1    (gw5ddrphy36)
);

//------------------------------------------------------------------------------
// Instance IODELAY_18 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_18 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f18),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy37),
	.DO      (ddram_ba[0])
);

//------------------------------------------------------------------------------
// Instance OSER4_19 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_19 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_bank[1]),
	.D1    (gw5ddrphy_dfi_p0_bank[1]),
	.D2    (gw5ddrphy_dfi_p1_bank[1]),
	.D3    (gw5ddrphy_dfi_p1_bank[1]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f19),
	.Q1    (gw5ddrphy38)
);

//------------------------------------------------------------------------------
// Instance IODELAY_19 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_19 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f19),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy39),
	.DO      (ddram_ba[1])
);

//------------------------------------------------------------------------------
// Instance OSER4_20 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_20 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_bank[2]),
	.D1    (gw5ddrphy_dfi_p0_bank[2]),
	.D2    (gw5ddrphy_dfi_p1_bank[2]),
	.D3    (gw5ddrphy_dfi_p1_bank[2]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f20),
	.Q1    (gw5ddrphy40)
);

//------------------------------------------------------------------------------
// Instance IODELAY_20 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_20 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f20),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy41),
	.DO      (ddram_ba[2])
);

//------------------------------------------------------------------------------
// Instance OSER4_21 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_21 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_ras_n),
	.D1    (gw5ddrphy_dfi_p0_ras_n),
	.D2    (gw5ddrphy_dfi_p1_ras_n),
	.D3    (gw5ddrphy_dfi_p1_ras_n),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f21),
	.Q1    (gw5ddrphy42)
);

//------------------------------------------------------------------------------
// Instance IODELAY_21 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_21 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f21),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy43),
	.DO      (ddram_ras_n)
);

//------------------------------------------------------------------------------
// Instance OSER4_22 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_22 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_cas_n),
	.D1    (gw5ddrphy_dfi_p0_cas_n),
	.D2    (gw5ddrphy_dfi_p1_cas_n),
	.D3    (gw5ddrphy_dfi_p1_cas_n),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f22),
	.Q1    (gw5ddrphy44)
);

//------------------------------------------------------------------------------
// Instance IODELAY_22 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_22 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f22),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy45),
	.DO      (ddram_cas_n)
);

//------------------------------------------------------------------------------
// Instance OSER4_23 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_23 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_we_n),
	.D1    (gw5ddrphy_dfi_p0_we_n),
	.D2    (gw5ddrphy_dfi_p1_we_n),
	.D3    (gw5ddrphy_dfi_p1_we_n),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f23),
	.Q1    (gw5ddrphy46)
);

//------------------------------------------------------------------------------
// Instance IODELAY_23 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_23 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f23),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy47),
	.DO      (ddram_we_n)
);

//------------------------------------------------------------------------------
// Instance OSER4_24 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_24 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_cke),
	.D1    (gw5ddrphy_dfi_p0_cke),
	.D2    (gw5ddrphy_dfi_p1_cke),
	.D3    (gw5ddrphy_dfi_p1_cke),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f24),
	.Q1    (gw5ddrphy48)
);

//------------------------------------------------------------------------------
// Instance IODELAY_24 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_24 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f24),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy49),
	.DO      (ddram_cke)
);

//------------------------------------------------------------------------------
// Instance OSER4_25 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_25 (
	// Inputs.
	.D0    (gw5ddrphy_dfi_p0_odt),
	.D1    (gw5ddrphy_dfi_p0_odt),
	.D2    (gw5ddrphy_dfi_p1_odt),
	.D3    (gw5ddrphy_dfi_p1_odt),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw5ddrphy_pad_oddrx2f25),
	.Q1    (gw5ddrphy50)
);

//------------------------------------------------------------------------------
// Instance IODELAY_25 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.ADAPT_EN     ("FALSE"),
	.C_STATIC_DLY (1'd0),
	.DYN_DLY_EN   ("FALSE")
) IODELAY_25 (
	// Inputs.
	.DI      (gw5ddrphy_pad_oddrx2f25),
	.DLYSTEP (8'd0),
	.SDTAP   (1'd0),
	.VALUE   (1'd0),

	// Outputs.
	.DF      (gw5ddrphy51),
	.DO      (ddram_odt)
);

//------------------------------------------------------------------------------
// Instance DQS of DQS Module.
//------------------------------------------------------------------------------
DQS #(
	// Parameters.
	.DQS_MODE ("X2_DDR3")
) DQS (
	// Inputs.
	.DLLSTEP (gw5ddrphy_delay0),
	.DQSIN   (gw5ddrphy_dqs_i0),
	.FCLK    (sys2x_clk),
	.HOLD    ((gw5ddrphy_pause0 | gw5ddrphy_dly_sel_storage[0])),
	.PCLK    (sys_clk),
	.RCLKSEL (gw5ddrphy_rdly0),
	.RDIR    (1'd1),
	.READ    ({4{gw5ddrphy_dqs_re}}),
	.RESET   (sys_rst),
	.RLOADN  (1'd0),
	.RMOVE   (1'd0),
	.WDIR    (1'd1),
	.WLOADN  (1'd0),
	.WMOVE   (1'd0),
	.WSTEP   (8'd0),

	// Outputs.
	.DQSR90  (gw5ddrphy_dqsr900),
	.DQSW0   (gw5ddrphy_dqsw0),
	.DQSW270 (gw5ddrphy_dqsw2700),
	.RBURST  (gw5ddrphy_burstdet0),
	.RFLAG   (gw5ddrphy52),
	.RPOINT  (gw5ddrphy_rdpntr0),
	.RVALID  (gw5ddrphy_datavalid[0]),
	.WFLAG   (gw5ddrphy53),
	.WPOINT  (gw5ddrphy_wrpntr0)
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW"),
	.TXCLK_POL   (1'd1)
) OSER4_MEM (
	// Inputs.
	.D0    (1'd0),
	.D1    (1'd1),
	.D2    (1'd0),
	.D3    (1'd1),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw0),
	.TX0   ((~(gw5ddrphy_dqs_oe | gw5ddrphy_dqs_postamble))),
	.TX1   ((~(gw5ddrphy_dqs_oe | gw5ddrphy_dqs_preamble))),

	// Outputs.
	.Q0    (gw5ddrphy_dqs_o0),
	.Q1    (gw5ddrphy_dqs_o_oen0)
);

//------------------------------------------------------------------------------
// Instance ELVDS_IOBUF of ELVDS_IOBUF Module.
//------------------------------------------------------------------------------
ELVDS_IOBUF ELVDS_IOBUF(
	// Inputs.
	.I   (gw5ddrphy_dqs_o0),
	.OEN (gw5ddrphy_dqs_o_oen0),

	// Outputs.
	.O   (gw5ddrphy_dqs_i0),

	// InOuts.
	.IO  (ddram_dqs_p[0]),
	.IOB (ddram_dqs_n[0])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_1 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_1 (
	// Inputs.
	.D0    (gw5ddrphy_dm_o_data_muxed0[0]),
	.D1    (gw5ddrphy_dm_o_data_muxed0[1]),
	.D2    (gw5ddrphy_dm_o_data_muxed0[2]),
	.D3    (gw5ddrphy_dm_o_data_muxed0[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2700),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (ddram_dm[0]),
	.Q1    (gw5ddrphy54)
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_2 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_2 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed0[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed0[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed0[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed0[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2700),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o0),
	.Q1    (gw5ddrphy_dq_o_oen0)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i0),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip0_i[0]),
	.Q1    (gw5ddrphy_bitslip0_i[1]),
	.Q2    (gw5ddrphy_bitslip0_i[2]),
	.Q3    (gw5ddrphy_bitslip0_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF(
	// Inputs.
	.I   (gw5ddrphy_dq_o0),
	.OEN (gw5ddrphy_dq_o_oen0),

	// Outputs.
	.O   (gw5ddrphy_dq_i0),

	// InOuts.
	.IO  (ddram_dq[0])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_3 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_3 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed1[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed1[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed1[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed1[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2700),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o1),
	.Q1    (gw5ddrphy_dq_o_oen1)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_1 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_1(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i1),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip1_i[0]),
	.Q1    (gw5ddrphy_bitslip1_i[1]),
	.Q2    (gw5ddrphy_bitslip1_i[2]),
	.Q3    (gw5ddrphy_bitslip1_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_1 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_1(
	// Inputs.
	.I   (gw5ddrphy_dq_o1),
	.OEN (gw5ddrphy_dq_o_oen1),

	// Outputs.
	.O   (gw5ddrphy_dq_i1),

	// InOuts.
	.IO  (ddram_dq[1])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_4 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_4 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed2[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed2[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed2[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed2[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2700),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o2),
	.Q1    (gw5ddrphy_dq_o_oen2)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_2 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_2(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i2),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip2_i[0]),
	.Q1    (gw5ddrphy_bitslip2_i[1]),
	.Q2    (gw5ddrphy_bitslip2_i[2]),
	.Q3    (gw5ddrphy_bitslip2_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_2 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_2(
	// Inputs.
	.I   (gw5ddrphy_dq_o2),
	.OEN (gw5ddrphy_dq_o_oen2),

	// Outputs.
	.O   (gw5ddrphy_dq_i2),

	// InOuts.
	.IO  (ddram_dq[2])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_5 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_5 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed3[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed3[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed3[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed3[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2700),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o3),
	.Q1    (gw5ddrphy_dq_o_oen3)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_3 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_3(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i3),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip3_i[0]),
	.Q1    (gw5ddrphy_bitslip3_i[1]),
	.Q2    (gw5ddrphy_bitslip3_i[2]),
	.Q3    (gw5ddrphy_bitslip3_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_3 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_3(
	// Inputs.
	.I   (gw5ddrphy_dq_o3),
	.OEN (gw5ddrphy_dq_o_oen3),

	// Outputs.
	.O   (gw5ddrphy_dq_i3),

	// InOuts.
	.IO  (ddram_dq[3])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_6 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_6 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed4[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed4[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed4[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed4[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2700),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o4),
	.Q1    (gw5ddrphy_dq_o_oen4)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_4 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_4(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i4),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip4_i[0]),
	.Q1    (gw5ddrphy_bitslip4_i[1]),
	.Q2    (gw5ddrphy_bitslip4_i[2]),
	.Q3    (gw5ddrphy_bitslip4_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_4 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_4(
	// Inputs.
	.I   (gw5ddrphy_dq_o4),
	.OEN (gw5ddrphy_dq_o_oen4),

	// Outputs.
	.O   (gw5ddrphy_dq_i4),

	// InOuts.
	.IO  (ddram_dq[4])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_7 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_7 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed5[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed5[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed5[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed5[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2700),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o5),
	.Q1    (gw5ddrphy_dq_o_oen5)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_5 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_5(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i5),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip5_i[0]),
	.Q1    (gw5ddrphy_bitslip5_i[1]),
	.Q2    (gw5ddrphy_bitslip5_i[2]),
	.Q3    (gw5ddrphy_bitslip5_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_5 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_5(
	// Inputs.
	.I   (gw5ddrphy_dq_o5),
	.OEN (gw5ddrphy_dq_o_oen5),

	// Outputs.
	.O   (gw5ddrphy_dq_i5),

	// InOuts.
	.IO  (ddram_dq[5])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_8 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_8 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed6[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed6[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed6[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed6[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2700),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o6),
	.Q1    (gw5ddrphy_dq_o_oen6)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_6 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_6(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i6),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip6_i[0]),
	.Q1    (gw5ddrphy_bitslip6_i[1]),
	.Q2    (gw5ddrphy_bitslip6_i[2]),
	.Q3    (gw5ddrphy_bitslip6_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_6 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_6(
	// Inputs.
	.I   (gw5ddrphy_dq_o6),
	.OEN (gw5ddrphy_dq_o_oen6),

	// Outputs.
	.O   (gw5ddrphy_dq_i6),

	// InOuts.
	.IO  (ddram_dq[6])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_9 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_9 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed7[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed7[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed7[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed7[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2700),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o7),
	.Q1    (gw5ddrphy_dq_o_oen7)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_7 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_7(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i7),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip7_i[0]),
	.Q1    (gw5ddrphy_bitslip7_i[1]),
	.Q2    (gw5ddrphy_bitslip7_i[2]),
	.Q3    (gw5ddrphy_bitslip7_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_7 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_7(
	// Inputs.
	.I   (gw5ddrphy_dq_o7),
	.OEN (gw5ddrphy_dq_o_oen7),

	// Outputs.
	.O   (gw5ddrphy_dq_i7),

	// InOuts.
	.IO  (ddram_dq[7])
);

//------------------------------------------------------------------------------
// Instance DQS_1 of DQS Module.
//------------------------------------------------------------------------------
DQS #(
	// Parameters.
	.DQS_MODE ("X2_DDR3")
) DQS_1 (
	// Inputs.
	.DLLSTEP (gw5ddrphy_delay0),
	.DQSIN   (gw5ddrphy_dqs_i1),
	.FCLK    (sys2x_clk),
	.HOLD    ((gw5ddrphy_pause0 | gw5ddrphy_dly_sel_storage[1])),
	.PCLK    (sys_clk),
	.RCLKSEL (gw5ddrphy_rdly1),
	.RDIR    (1'd1),
	.READ    ({4{gw5ddrphy_dqs_re}}),
	.RESET   (sys_rst),
	.RLOADN  (1'd0),
	.RMOVE   (1'd0),
	.WDIR    (1'd1),
	.WLOADN  (1'd0),
	.WMOVE   (1'd0),
	.WSTEP   (8'd0),

	// Outputs.
	.DQSR90  (gw5ddrphy_dqsr901),
	.DQSW0   (gw5ddrphy_dqsw1),
	.DQSW270 (gw5ddrphy_dqsw2701),
	.RBURST  (gw5ddrphy_burstdet1),
	.RFLAG   (gw5ddrphy55),
	.RPOINT  (gw5ddrphy_rdpntr1),
	.RVALID  (gw5ddrphy_datavalid[1]),
	.WFLAG   (gw5ddrphy56),
	.WPOINT  (gw5ddrphy_wrpntr1)
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_10 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW"),
	.TXCLK_POL   (1'd1)
) OSER4_MEM_10 (
	// Inputs.
	.D0    (1'd0),
	.D1    (1'd1),
	.D2    (1'd0),
	.D3    (1'd1),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw1),
	.TX0   ((~(gw5ddrphy_dqs_oe | gw5ddrphy_dqs_postamble))),
	.TX1   ((~(gw5ddrphy_dqs_oe | gw5ddrphy_dqs_preamble))),

	// Outputs.
	.Q0    (gw5ddrphy_dqs_o1),
	.Q1    (gw5ddrphy_dqs_o_oen1)
);

//------------------------------------------------------------------------------
// Instance ELVDS_IOBUF_1 of ELVDS_IOBUF Module.
//------------------------------------------------------------------------------
ELVDS_IOBUF ELVDS_IOBUF_1(
	// Inputs.
	.I   (gw5ddrphy_dqs_o1),
	.OEN (gw5ddrphy_dqs_o_oen1),

	// Outputs.
	.O   (gw5ddrphy_dqs_i1),

	// InOuts.
	.IO  (ddram_dqs_p[1]),
	.IOB (ddram_dqs_n[1])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_11 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_11 (
	// Inputs.
	.D0    (gw5ddrphy_dm_o_data_muxed1[0]),
	.D1    (gw5ddrphy_dm_o_data_muxed1[1]),
	.D2    (gw5ddrphy_dm_o_data_muxed1[2]),
	.D3    (gw5ddrphy_dm_o_data_muxed1[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2701),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (ddram_dm[1]),
	.Q1    (gw5ddrphy57)
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_12 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_12 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed8[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed8[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed8[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed8[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2701),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o8),
	.Q1    (gw5ddrphy_dq_o_oen8)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_8 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_8(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i8),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip8_i[0]),
	.Q1    (gw5ddrphy_bitslip8_i[1]),
	.Q2    (gw5ddrphy_bitslip8_i[2]),
	.Q3    (gw5ddrphy_bitslip8_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_8 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_8(
	// Inputs.
	.I   (gw5ddrphy_dq_o8),
	.OEN (gw5ddrphy_dq_o_oen8),

	// Outputs.
	.O   (gw5ddrphy_dq_i8),

	// InOuts.
	.IO  (ddram_dq[8])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_13 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_13 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed9[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed9[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed9[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed9[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2701),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o9),
	.Q1    (gw5ddrphy_dq_o_oen9)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_9 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_9(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i9),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip9_i[0]),
	.Q1    (gw5ddrphy_bitslip9_i[1]),
	.Q2    (gw5ddrphy_bitslip9_i[2]),
	.Q3    (gw5ddrphy_bitslip9_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_9 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_9(
	// Inputs.
	.I   (gw5ddrphy_dq_o9),
	.OEN (gw5ddrphy_dq_o_oen9),

	// Outputs.
	.O   (gw5ddrphy_dq_i9),

	// InOuts.
	.IO  (ddram_dq[9])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_14 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_14 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed10[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed10[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed10[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed10[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2701),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o10),
	.Q1    (gw5ddrphy_dq_o_oen10)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_10 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_10(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i10),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip10_i[0]),
	.Q1    (gw5ddrphy_bitslip10_i[1]),
	.Q2    (gw5ddrphy_bitslip10_i[2]),
	.Q3    (gw5ddrphy_bitslip10_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_10 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_10(
	// Inputs.
	.I   (gw5ddrphy_dq_o10),
	.OEN (gw5ddrphy_dq_o_oen10),

	// Outputs.
	.O   (gw5ddrphy_dq_i10),

	// InOuts.
	.IO  (ddram_dq[10])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_15 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_15 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed11[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed11[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed11[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed11[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2701),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o11),
	.Q1    (gw5ddrphy_dq_o_oen11)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_11 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_11(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i11),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip11_i[0]),
	.Q1    (gw5ddrphy_bitslip11_i[1]),
	.Q2    (gw5ddrphy_bitslip11_i[2]),
	.Q3    (gw5ddrphy_bitslip11_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_11 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_11(
	// Inputs.
	.I   (gw5ddrphy_dq_o11),
	.OEN (gw5ddrphy_dq_o_oen11),

	// Outputs.
	.O   (gw5ddrphy_dq_i11),

	// InOuts.
	.IO  (ddram_dq[11])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_16 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_16 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed12[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed12[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed12[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed12[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2701),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o12),
	.Q1    (gw5ddrphy_dq_o_oen12)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_12 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_12(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i12),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip12_i[0]),
	.Q1    (gw5ddrphy_bitslip12_i[1]),
	.Q2    (gw5ddrphy_bitslip12_i[2]),
	.Q3    (gw5ddrphy_bitslip12_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_12 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_12(
	// Inputs.
	.I   (gw5ddrphy_dq_o12),
	.OEN (gw5ddrphy_dq_o_oen12),

	// Outputs.
	.O   (gw5ddrphy_dq_i12),

	// InOuts.
	.IO  (ddram_dq[12])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_17 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_17 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed13[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed13[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed13[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed13[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2701),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o13),
	.Q1    (gw5ddrphy_dq_o_oen13)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_13 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_13(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i13),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip13_i[0]),
	.Q1    (gw5ddrphy_bitslip13_i[1]),
	.Q2    (gw5ddrphy_bitslip13_i[2]),
	.Q3    (gw5ddrphy_bitslip13_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_13 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_13(
	// Inputs.
	.I   (gw5ddrphy_dq_o13),
	.OEN (gw5ddrphy_dq_o_oen13),

	// Outputs.
	.O   (gw5ddrphy_dq_i13),

	// InOuts.
	.IO  (ddram_dq[13])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_18 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_18 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed14[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed14[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed14[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed14[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2701),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o14),
	.Q1    (gw5ddrphy_dq_o_oen14)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_14 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_14(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i14),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip14_i[0]),
	.Q1    (gw5ddrphy_bitslip14_i[1]),
	.Q2    (gw5ddrphy_bitslip14_i[2]),
	.Q3    (gw5ddrphy_bitslip14_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_14 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_14(
	// Inputs.
	.I   (gw5ddrphy_dq_o14),
	.OEN (gw5ddrphy_dq_o_oen14),

	// Outputs.
	.O   (gw5ddrphy_dq_i14),

	// InOuts.
	.IO  (ddram_dq[14])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_19 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_19 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed15[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed15[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed15[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed15[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2701),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o15),
	.Q1    (gw5ddrphy_dq_o_oen15)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_15 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_15(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i15),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip15_i[0]),
	.Q1    (gw5ddrphy_bitslip15_i[1]),
	.Q2    (gw5ddrphy_bitslip15_i[2]),
	.Q3    (gw5ddrphy_bitslip15_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_15 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_15(
	// Inputs.
	.I   (gw5ddrphy_dq_o15),
	.OEN (gw5ddrphy_dq_o_oen15),

	// Outputs.
	.O   (gw5ddrphy_dq_i15),

	// InOuts.
	.IO  (ddram_dq[15])
);

//------------------------------------------------------------------------------
// Instance DQS_2 of DQS Module.
//------------------------------------------------------------------------------
DQS #(
	// Parameters.
	.DQS_MODE ("X2_DDR3")
) DQS_2 (
	// Inputs.
	.DLLSTEP (gw5ddrphy_delay0),
	.DQSIN   (gw5ddrphy_dqs_i2),
	.FCLK    (sys2x_clk),
	.HOLD    ((gw5ddrphy_pause0 | gw5ddrphy_dly_sel_storage[2])),
	.PCLK    (sys_clk),
	.RCLKSEL (gw5ddrphy_rdly2),
	.RDIR    (1'd1),
	.READ    ({4{gw5ddrphy_dqs_re}}),
	.RESET   (sys_rst),
	.RLOADN  (1'd0),
	.RMOVE   (1'd0),
	.WDIR    (1'd1),
	.WLOADN  (1'd0),
	.WMOVE   (1'd0),
	.WSTEP   (8'd0),

	// Outputs.
	.DQSR90  (gw5ddrphy_dqsr902),
	.DQSW0   (gw5ddrphy_dqsw2),
	.DQSW270 (gw5ddrphy_dqsw2702),
	.RBURST  (gw5ddrphy_burstdet2),
	.RFLAG   (gw5ddrphy58),
	.RPOINT  (gw5ddrphy_rdpntr2),
	.RVALID  (gw5ddrphy_datavalid[2]),
	.WFLAG   (gw5ddrphy59),
	.WPOINT  (gw5ddrphy_wrpntr2)
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_20 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW"),
	.TXCLK_POL   (1'd1)
) OSER4_MEM_20 (
	// Inputs.
	.D0    (1'd0),
	.D1    (1'd1),
	.D2    (1'd0),
	.D3    (1'd1),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2),
	.TX0   ((~(gw5ddrphy_dqs_oe | gw5ddrphy_dqs_postamble))),
	.TX1   ((~(gw5ddrphy_dqs_oe | gw5ddrphy_dqs_preamble))),

	// Outputs.
	.Q0    (gw5ddrphy_dqs_o2),
	.Q1    (gw5ddrphy_dqs_o_oen2)
);

//------------------------------------------------------------------------------
// Instance ELVDS_IOBUF_2 of ELVDS_IOBUF Module.
//------------------------------------------------------------------------------
ELVDS_IOBUF ELVDS_IOBUF_2(
	// Inputs.
	.I   (gw5ddrphy_dqs_o2),
	.OEN (gw5ddrphy_dqs_o_oen2),

	// Outputs.
	.O   (gw5ddrphy_dqs_i2),

	// InOuts.
	.IO  (ddram_dqs_p[2]),
	.IOB (ddram_dqs_n[2])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_21 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_21 (
	// Inputs.
	.D0    (gw5ddrphy_dm_o_data_muxed2[0]),
	.D1    (gw5ddrphy_dm_o_data_muxed2[1]),
	.D2    (gw5ddrphy_dm_o_data_muxed2[2]),
	.D3    (gw5ddrphy_dm_o_data_muxed2[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2702),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (ddram_dm[2]),
	.Q1    (gw5ddrphy60)
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_22 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_22 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed16[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed16[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed16[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed16[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2702),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o16),
	.Q1    (gw5ddrphy_dq_o_oen16)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_16 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_16(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i16),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr902),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr2),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr2),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip16_i[0]),
	.Q1    (gw5ddrphy_bitslip16_i[1]),
	.Q2    (gw5ddrphy_bitslip16_i[2]),
	.Q3    (gw5ddrphy_bitslip16_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_16 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_16(
	// Inputs.
	.I   (gw5ddrphy_dq_o16),
	.OEN (gw5ddrphy_dq_o_oen16),

	// Outputs.
	.O   (gw5ddrphy_dq_i16),

	// InOuts.
	.IO  (ddram_dq[16])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_23 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_23 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed17[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed17[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed17[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed17[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2702),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o17),
	.Q1    (gw5ddrphy_dq_o_oen17)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_17 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_17(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i17),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr902),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr2),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr2),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip17_i[0]),
	.Q1    (gw5ddrphy_bitslip17_i[1]),
	.Q2    (gw5ddrphy_bitslip17_i[2]),
	.Q3    (gw5ddrphy_bitslip17_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_17 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_17(
	// Inputs.
	.I   (gw5ddrphy_dq_o17),
	.OEN (gw5ddrphy_dq_o_oen17),

	// Outputs.
	.O   (gw5ddrphy_dq_i17),

	// InOuts.
	.IO  (ddram_dq[17])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_24 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_24 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed18[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed18[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed18[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed18[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2702),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o18),
	.Q1    (gw5ddrphy_dq_o_oen18)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_18 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_18(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i18),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr902),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr2),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr2),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip18_i[0]),
	.Q1    (gw5ddrphy_bitslip18_i[1]),
	.Q2    (gw5ddrphy_bitslip18_i[2]),
	.Q3    (gw5ddrphy_bitslip18_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_18 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_18(
	// Inputs.
	.I   (gw5ddrphy_dq_o18),
	.OEN (gw5ddrphy_dq_o_oen18),

	// Outputs.
	.O   (gw5ddrphy_dq_i18),

	// InOuts.
	.IO  (ddram_dq[18])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_25 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_25 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed19[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed19[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed19[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed19[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2702),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o19),
	.Q1    (gw5ddrphy_dq_o_oen19)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_19 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_19(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i19),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr902),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr2),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr2),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip19_i[0]),
	.Q1    (gw5ddrphy_bitslip19_i[1]),
	.Q2    (gw5ddrphy_bitslip19_i[2]),
	.Q3    (gw5ddrphy_bitslip19_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_19 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_19(
	// Inputs.
	.I   (gw5ddrphy_dq_o19),
	.OEN (gw5ddrphy_dq_o_oen19),

	// Outputs.
	.O   (gw5ddrphy_dq_i19),

	// InOuts.
	.IO  (ddram_dq[19])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_26 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_26 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed20[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed20[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed20[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed20[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2702),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o20),
	.Q1    (gw5ddrphy_dq_o_oen20)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_20 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_20(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i20),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr902),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr2),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr2),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip20_i[0]),
	.Q1    (gw5ddrphy_bitslip20_i[1]),
	.Q2    (gw5ddrphy_bitslip20_i[2]),
	.Q3    (gw5ddrphy_bitslip20_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_20 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_20(
	// Inputs.
	.I   (gw5ddrphy_dq_o20),
	.OEN (gw5ddrphy_dq_o_oen20),

	// Outputs.
	.O   (gw5ddrphy_dq_i20),

	// InOuts.
	.IO  (ddram_dq[20])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_27 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_27 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed21[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed21[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed21[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed21[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2702),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o21),
	.Q1    (gw5ddrphy_dq_o_oen21)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_21 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_21(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i21),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr902),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr2),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr2),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip21_i[0]),
	.Q1    (gw5ddrphy_bitslip21_i[1]),
	.Q2    (gw5ddrphy_bitslip21_i[2]),
	.Q3    (gw5ddrphy_bitslip21_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_21 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_21(
	// Inputs.
	.I   (gw5ddrphy_dq_o21),
	.OEN (gw5ddrphy_dq_o_oen21),

	// Outputs.
	.O   (gw5ddrphy_dq_i21),

	// InOuts.
	.IO  (ddram_dq[21])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_28 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_28 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed22[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed22[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed22[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed22[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2702),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o22),
	.Q1    (gw5ddrphy_dq_o_oen22)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_22 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_22(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i22),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr902),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr2),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr2),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip22_i[0]),
	.Q1    (gw5ddrphy_bitslip22_i[1]),
	.Q2    (gw5ddrphy_bitslip22_i[2]),
	.Q3    (gw5ddrphy_bitslip22_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_22 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_22(
	// Inputs.
	.I   (gw5ddrphy_dq_o22),
	.OEN (gw5ddrphy_dq_o_oen22),

	// Outputs.
	.O   (gw5ddrphy_dq_i22),

	// InOuts.
	.IO  (ddram_dq[22])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_29 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_29 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed23[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed23[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed23[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed23[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2702),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o23),
	.Q1    (gw5ddrphy_dq_o_oen23)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_23 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_23(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i23),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr902),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr2),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr2),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip23_i[0]),
	.Q1    (gw5ddrphy_bitslip23_i[1]),
	.Q2    (gw5ddrphy_bitslip23_i[2]),
	.Q3    (gw5ddrphy_bitslip23_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_23 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_23(
	// Inputs.
	.I   (gw5ddrphy_dq_o23),
	.OEN (gw5ddrphy_dq_o_oen23),

	// Outputs.
	.O   (gw5ddrphy_dq_i23),

	// InOuts.
	.IO  (ddram_dq[23])
);

//------------------------------------------------------------------------------
// Instance DQS_3 of DQS Module.
//------------------------------------------------------------------------------
DQS #(
	// Parameters.
	.DQS_MODE ("X2_DDR3")
) DQS_3 (
	// Inputs.
	.DLLSTEP (gw5ddrphy_delay0),
	.DQSIN   (gw5ddrphy_dqs_i3),
	.FCLK    (sys2x_clk),
	.HOLD    ((gw5ddrphy_pause0 | gw5ddrphy_dly_sel_storage[3])),
	.PCLK    (sys_clk),
	.RCLKSEL (gw5ddrphy_rdly3),
	.RDIR    (1'd1),
	.READ    ({4{gw5ddrphy_dqs_re}}),
	.RESET   (sys_rst),
	.RLOADN  (1'd0),
	.RMOVE   (1'd0),
	.WDIR    (1'd1),
	.WLOADN  (1'd0),
	.WMOVE   (1'd0),
	.WSTEP   (8'd0),

	// Outputs.
	.DQSR90  (gw5ddrphy_dqsr903),
	.DQSW0   (gw5ddrphy_dqsw3),
	.DQSW270 (gw5ddrphy_dqsw2703),
	.RBURST  (gw5ddrphy_burstdet3),
	.RFLAG   (gw5ddrphy61),
	.RPOINT  (gw5ddrphy_rdpntr3),
	.RVALID  (gw5ddrphy_datavalid[3]),
	.WFLAG   (gw5ddrphy62),
	.WPOINT  (gw5ddrphy_wrpntr3)
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_30 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW"),
	.TXCLK_POL   (1'd1)
) OSER4_MEM_30 (
	// Inputs.
	.D0    (1'd0),
	.D1    (1'd1),
	.D2    (1'd0),
	.D3    (1'd1),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw3),
	.TX0   ((~(gw5ddrphy_dqs_oe | gw5ddrphy_dqs_postamble))),
	.TX1   ((~(gw5ddrphy_dqs_oe | gw5ddrphy_dqs_preamble))),

	// Outputs.
	.Q0    (gw5ddrphy_dqs_o3),
	.Q1    (gw5ddrphy_dqs_o_oen3)
);

//------------------------------------------------------------------------------
// Instance ELVDS_IOBUF_3 of ELVDS_IOBUF Module.
//------------------------------------------------------------------------------
ELVDS_IOBUF ELVDS_IOBUF_3(
	// Inputs.
	.I   (gw5ddrphy_dqs_o3),
	.OEN (gw5ddrphy_dqs_o_oen3),

	// Outputs.
	.O   (gw5ddrphy_dqs_i3),

	// InOuts.
	.IO  (ddram_dqs_p[3]),
	.IOB (ddram_dqs_n[3])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_31 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_31 (
	// Inputs.
	.D0    (gw5ddrphy_dm_o_data_muxed3[0]),
	.D1    (gw5ddrphy_dm_o_data_muxed3[1]),
	.D2    (gw5ddrphy_dm_o_data_muxed3[2]),
	.D3    (gw5ddrphy_dm_o_data_muxed3[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2703),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (ddram_dm[3]),
	.Q1    (gw5ddrphy63)
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_32 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_32 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed24[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed24[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed24[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed24[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2703),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o24),
	.Q1    (gw5ddrphy_dq_o_oen24)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_24 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_24(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i24),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr903),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr3),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr3),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip24_i[0]),
	.Q1    (gw5ddrphy_bitslip24_i[1]),
	.Q2    (gw5ddrphy_bitslip24_i[2]),
	.Q3    (gw5ddrphy_bitslip24_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_24 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_24(
	// Inputs.
	.I   (gw5ddrphy_dq_o24),
	.OEN (gw5ddrphy_dq_o_oen24),

	// Outputs.
	.O   (gw5ddrphy_dq_i24),

	// InOuts.
	.IO  (ddram_dq[24])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_33 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_33 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed25[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed25[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed25[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed25[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2703),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o25),
	.Q1    (gw5ddrphy_dq_o_oen25)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_25 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_25(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i25),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr903),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr3),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr3),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip25_i[0]),
	.Q1    (gw5ddrphy_bitslip25_i[1]),
	.Q2    (gw5ddrphy_bitslip25_i[2]),
	.Q3    (gw5ddrphy_bitslip25_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_25 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_25(
	// Inputs.
	.I   (gw5ddrphy_dq_o25),
	.OEN (gw5ddrphy_dq_o_oen25),

	// Outputs.
	.O   (gw5ddrphy_dq_i25),

	// InOuts.
	.IO  (ddram_dq[25])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_34 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_34 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed26[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed26[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed26[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed26[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2703),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o26),
	.Q1    (gw5ddrphy_dq_o_oen26)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_26 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_26(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i26),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr903),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr3),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr3),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip26_i[0]),
	.Q1    (gw5ddrphy_bitslip26_i[1]),
	.Q2    (gw5ddrphy_bitslip26_i[2]),
	.Q3    (gw5ddrphy_bitslip26_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_26 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_26(
	// Inputs.
	.I   (gw5ddrphy_dq_o26),
	.OEN (gw5ddrphy_dq_o_oen26),

	// Outputs.
	.O   (gw5ddrphy_dq_i26),

	// InOuts.
	.IO  (ddram_dq[26])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_35 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_35 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed27[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed27[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed27[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed27[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2703),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o27),
	.Q1    (gw5ddrphy_dq_o_oen27)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_27 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_27(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i27),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr903),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr3),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr3),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip27_i[0]),
	.Q1    (gw5ddrphy_bitslip27_i[1]),
	.Q2    (gw5ddrphy_bitslip27_i[2]),
	.Q3    (gw5ddrphy_bitslip27_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_27 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_27(
	// Inputs.
	.I   (gw5ddrphy_dq_o27),
	.OEN (gw5ddrphy_dq_o_oen27),

	// Outputs.
	.O   (gw5ddrphy_dq_i27),

	// InOuts.
	.IO  (ddram_dq[27])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_36 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_36 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed28[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed28[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed28[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed28[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2703),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o28),
	.Q1    (gw5ddrphy_dq_o_oen28)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_28 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_28(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i28),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr903),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr3),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr3),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip28_i[0]),
	.Q1    (gw5ddrphy_bitslip28_i[1]),
	.Q2    (gw5ddrphy_bitslip28_i[2]),
	.Q3    (gw5ddrphy_bitslip28_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_28 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_28(
	// Inputs.
	.I   (gw5ddrphy_dq_o28),
	.OEN (gw5ddrphy_dq_o_oen28),

	// Outputs.
	.O   (gw5ddrphy_dq_i28),

	// InOuts.
	.IO  (ddram_dq[28])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_37 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_37 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed29[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed29[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed29[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed29[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2703),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o29),
	.Q1    (gw5ddrphy_dq_o_oen29)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_29 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_29(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i29),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr903),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr3),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr3),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip29_i[0]),
	.Q1    (gw5ddrphy_bitslip29_i[1]),
	.Q2    (gw5ddrphy_bitslip29_i[2]),
	.Q3    (gw5ddrphy_bitslip29_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_29 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_29(
	// Inputs.
	.I   (gw5ddrphy_dq_o29),
	.OEN (gw5ddrphy_dq_o_oen29),

	// Outputs.
	.O   (gw5ddrphy_dq_i29),

	// InOuts.
	.IO  (ddram_dq[29])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_38 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_38 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed30[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed30[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed30[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed30[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2703),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o30),
	.Q1    (gw5ddrphy_dq_o_oen30)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_30 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_30(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i30),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr903),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr3),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr3),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip30_i[0]),
	.Q1    (gw5ddrphy_bitslip30_i[1]),
	.Q2    (gw5ddrphy_bitslip30_i[2]),
	.Q3    (gw5ddrphy_bitslip30_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_30 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_30(
	// Inputs.
	.I   (gw5ddrphy_dq_o30),
	.OEN (gw5ddrphy_dq_o_oen30),

	// Outputs.
	.O   (gw5ddrphy_dq_i30),

	// InOuts.
	.IO  (ddram_dq[30])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_39 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_39 (
	// Inputs.
	.D0    (gw5ddrphy_dq_o_data_muxed31[0]),
	.D1    (gw5ddrphy_dq_o_data_muxed31[1]),
	.D2    (gw5ddrphy_dq_o_data_muxed31[2]),
	.D3    (gw5ddrphy_dq_o_data_muxed31[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw5ddrphy_dqsw2703),
	.TX0   ((~gw5ddrphy_dq_oe)),
	.TX1   ((~gw5ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw5ddrphy_dq_o31),
	.Q1    (gw5ddrphy_dq_o_oen31)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_31 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_31(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw5ddrphy_dq_i31),
	.FCLK  (sys2x_clk),
	.ICLK  (gw5ddrphy_dqsr903),
	.PCLK  (sys_clk),
	.RADDR (gw5ddrphy_rdpntr3),
	.RESET (sys_rst),
	.WADDR (gw5ddrphy_wrpntr3),

	// Outputs.
	.Q0    (gw5ddrphy_bitslip31_i[0]),
	.Q1    (gw5ddrphy_bitslip31_i[1]),
	.Q2    (gw5ddrphy_bitslip31_i[2]),
	.Q3    (gw5ddrphy_bitslip31_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_31 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_31(
	// Inputs.
	.I   (gw5ddrphy_dq_o31),
	.OEN (gw5ddrphy_dq_o_oen31),

	// Outputs.
	.O   (gw5ddrphy_dq_i31),

	// InOuts.
	.IO  (ddram_dq[31])
);

//------------------------------------------------------------------------------
// Memory storage_2: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_2[0:7];
reg [23:0] storage_2_dat0;
always @(posedge sys_clk) begin
	if (basesoc_bankmachine0_wrport_we)
		storage_2[basesoc_bankmachine0_wrport_adr] <= basesoc_bankmachine0_wrport_dat_w;
	storage_2_dat0 <= storage_2[basesoc_bankmachine0_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_bankmachine0_wrport_dat_r = storage_2_dat0;
assign basesoc_bankmachine0_rdport_dat_r = storage_2[basesoc_bankmachine0_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_3: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_3[0:7];
reg [23:0] storage_3_dat0;
always @(posedge sys_clk) begin
	if (basesoc_bankmachine1_wrport_we)
		storage_3[basesoc_bankmachine1_wrport_adr] <= basesoc_bankmachine1_wrport_dat_w;
	storage_3_dat0 <= storage_3[basesoc_bankmachine1_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_bankmachine1_wrport_dat_r = storage_3_dat0;
assign basesoc_bankmachine1_rdport_dat_r = storage_3[basesoc_bankmachine1_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_4: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_4[0:7];
reg [23:0] storage_4_dat0;
always @(posedge sys_clk) begin
	if (basesoc_bankmachine2_wrport_we)
		storage_4[basesoc_bankmachine2_wrport_adr] <= basesoc_bankmachine2_wrport_dat_w;
	storage_4_dat0 <= storage_4[basesoc_bankmachine2_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_bankmachine2_wrport_dat_r = storage_4_dat0;
assign basesoc_bankmachine2_rdport_dat_r = storage_4[basesoc_bankmachine2_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_5: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_5[0:7];
reg [23:0] storage_5_dat0;
always @(posedge sys_clk) begin
	if (basesoc_bankmachine3_wrport_we)
		storage_5[basesoc_bankmachine3_wrport_adr] <= basesoc_bankmachine3_wrport_dat_w;
	storage_5_dat0 <= storage_5[basesoc_bankmachine3_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_bankmachine3_wrport_dat_r = storage_5_dat0;
assign basesoc_bankmachine3_rdport_dat_r = storage_5[basesoc_bankmachine3_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_6: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_6[0:7];
reg [23:0] storage_6_dat0;
always @(posedge sys_clk) begin
	if (basesoc_bankmachine4_wrport_we)
		storage_6[basesoc_bankmachine4_wrport_adr] <= basesoc_bankmachine4_wrport_dat_w;
	storage_6_dat0 <= storage_6[basesoc_bankmachine4_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_bankmachine4_wrport_dat_r = storage_6_dat0;
assign basesoc_bankmachine4_rdport_dat_r = storage_6[basesoc_bankmachine4_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_7: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_7[0:7];
reg [23:0] storage_7_dat0;
always @(posedge sys_clk) begin
	if (basesoc_bankmachine5_wrport_we)
		storage_7[basesoc_bankmachine5_wrport_adr] <= basesoc_bankmachine5_wrport_dat_w;
	storage_7_dat0 <= storage_7[basesoc_bankmachine5_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_bankmachine5_wrport_dat_r = storage_7_dat0;
assign basesoc_bankmachine5_rdport_dat_r = storage_7[basesoc_bankmachine5_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_8: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_8[0:7];
reg [23:0] storage_8_dat0;
always @(posedge sys_clk) begin
	if (basesoc_bankmachine6_wrport_we)
		storage_8[basesoc_bankmachine6_wrport_adr] <= basesoc_bankmachine6_wrport_dat_w;
	storage_8_dat0 <= storage_8[basesoc_bankmachine6_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_bankmachine6_wrport_dat_r = storage_8_dat0;
assign basesoc_bankmachine6_rdport_dat_r = storage_8[basesoc_bankmachine6_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_9: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_9[0:7];
reg [23:0] storage_9_dat0;
always @(posedge sys_clk) begin
	if (basesoc_bankmachine7_wrport_we)
		storage_9[basesoc_bankmachine7_wrport_adr] <= basesoc_bankmachine7_wrport_dat_w;
	storage_9_dat0 <= storage_9[basesoc_bankmachine7_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_bankmachine7_wrport_dat_r = storage_9_dat0;
assign basesoc_bankmachine7_rdport_dat_r = storage_9[basesoc_bankmachine7_rdport_adr];


//------------------------------------------------------------------------------
// Instance PLL of PLL Module.
//------------------------------------------------------------------------------
PLL #(
	// Parameters.
	.CLK0_IN_SEL       (1'd0),
	.CLK0_OUT_SEL      (1'd0),
	.CLK1_IN_SEL       (1'd0),
	.CLK1_OUT_SEL      (1'd0),
	.CLK2_IN_SEL       (1'd0),
	.CLK2_OUT_SEL      (1'd0),
	.CLK3_IN_SEL       (1'd0),
	.CLK3_OUT_SEL      (1'd0),
	.CLK4_IN_SEL       (1'd0),
	.CLK4_OUT_SEL      (1'd0),
	.CLK5_IN_SEL       (1'd0),
	.CLK5_OUT_SEL      (1'd0),
	.CLKFB_SEL         ("INTERNAL"),
	.CLKOUT0_DT_DIR    (1'd1),
	.CLKOUT0_DT_STEP   (1'd0),
	.CLKOUT0_EN        ("TRUE"),
	.CLKOUT0_PE_COARSE (1'd0),
	.CLKOUT0_PE_FINE   (1'd0),
	.CLKOUT1_DT_DIR    (1'd1),
	.CLKOUT1_DT_STEP   (1'd0),
	.CLKOUT1_EN        ("TRUE"),
	.CLKOUT1_PE_COARSE (1'd0),
	.CLKOUT1_PE_FINE   (1'd0),
	.CLKOUT2_DT_DIR    (1'd1),
	.CLKOUT2_DT_STEP   (1'd0),
	.CLKOUT2_EN        ("FALSE"),
	.CLKOUT2_PE_COARSE (1'd0),
	.CLKOUT2_PE_FINE   (1'd0),
	.CLKOUT3_DT_DIR    (1'd1),
	.CLKOUT3_DT_STEP   (1'd0),
	.CLKOUT3_EN        ("FALSE"),
	.CLKOUT3_PE_COARSE (1'd0),
	.CLKOUT3_PE_FINE   (1'd0),
	.CLKOUT4_EN        ("FALSE"),
	.CLKOUT4_PE_COARSE (1'd0),
	.CLKOUT4_PE_FINE   (1'd0),
	.CLKOUT5_EN        ("FALSE"),
	.CLKOUT5_PE_COARSE (1'd0),
	.CLKOUT5_PE_FINE   (1'd0),
	.CLKOUT6_EN        ("FALSE"),
	.CLKOUT6_PE_COARSE (1'd0),
	.CLKOUT6_PE_FINE   (1'd0),
	.DE0_EN            ("FALSE"),
	.DE1_EN            ("FALSE"),
	.DE2_EN            ("FALSE"),
	.DE3_EN            ("FALSE"),
	.DE4_EN            ("FALSE"),
	.DE5_EN            ("FALSE"),
	.DE6_EN            ("FALSE"),
	.DYN_DPA_EN        ("FALSE"),
	.DYN_DT0_SEL       ("FALSE"),
	.DYN_DT1_SEL       ("FALSE"),
	.DYN_DT2_SEL       ("FALSE"),
	.DYN_DT3_SEL       ("FALSE"),
	.DYN_FBDIV_SEL     ("FALSE"),
	.DYN_ICP_SEL       ("FALSE"),
	.DYN_IDIV_SEL      ("FALSE"),
	.DYN_LPF_SEL       ("FALSE"),
	.DYN_ODIV0_SEL     ("FALSE"),
	.DYN_ODIV1_SEL     ("FALSE"),
	.DYN_ODIV2_SEL     ("FALSE"),
	.DYN_ODIV3_SEL     ("FALSE"),
	.DYN_ODIV4_SEL     ("FALSE"),
	.DYN_ODIV5_SEL     ("FALSE"),
	.DYN_ODIV6_SEL     ("FALSE"),
	.DYN_PE0_SEL       ("FALSE"),
	.DYN_PE1_SEL       ("FALSE"),
	.DYN_PE2_SEL       ("FALSE"),
	.DYN_PE3_SEL       ("FALSE"),
	.DYN_PE4_SEL       ("FALSE"),
	.DYN_PE5_SEL       ("FALSE"),
	.DYN_PE6_SEL       ("FALSE"),
	.FBDIV_SEL         (1'd1),
	.FCLKIN            ("50.0"),
	.IDIV_SEL          (1'd1),
	.MDIV_FRAC_SEL     (1'd0),
	.MDIV_SEL          (5'd16),
	.ODIV0_FRAC_SEL    (1'd0),
	.ODIV0_SEL         (5'd16),
	.ODIV1_SEL         (4'd8),
	.ODIV2_SEL         (4'd8),
	.ODIV3_SEL         (4'd8),
	.ODIV4_SEL         (4'd8),
	.ODIV5_SEL         (4'd8),
	.ODIV6_SEL         (4'd8),
	.RESET_I_EN        ("FALSE"),
	.RESET_O_EN        ("FALSE"),
	.SSC_EN            ("FALSE")
) PLL (
	// Inputs.
	.CLKFB         (1'd0),
	.CLKIN         (crg_clkin),
	.DT0           (4'd0),
	.DT1           (4'd0),
	.DT2           (4'd0),
	.DT3           (4'd0),
	.ENCLK0        (1'd1),
	.ENCLK1        (1'd1),
	.ENCLK2        (1'd1),
	.ENCLK3        (1'd1),
	.ENCLK4        (1'd1),
	.ENCLK5        (1'd1),
	.ENCLK6        (1'd1),
	.FBDSEL        (6'd0),
	.ICPSEL        (6'd0),
	.IDSEL         (6'd0),
	.LPFCAP        (2'd0),
	.LPFRES        (3'd0),
	.MDSEL         (7'd0),
	.MDSEL_FRAC    (3'd0),
	.ODSEL0        (7'd0),
	.ODSEL0_FRAC   (3'd0),
	.ODSEL1        (7'd0),
	.ODSEL2        (7'd0),
	.ODSEL3        (7'd0),
	.ODSEL4        (7'd0),
	.ODSEL5        (7'd0),
	.ODSEL6        (7'd0),
	.PLLPWD        (1'd0),
	.PSDIR         (1'd0),
	.PSPULSE       (1'd0),
	.PSSEL         (3'd0),
	.RESET         (crg_reset1),
	.RESET_I       (1'd0),
	.RESET_O       (1'd0),
	.SSCMDSEL      (7'd0),
	.SSCMDSEL_FRAC (3'd0),
	.SSCON         (1'd0),
	.SSCPOL        (1'd0),

	// Outputs.
	.CLKFBOUT      (gw5apll5),
	.CLKOUT0       (crg_clkout0),
	.CLKOUT1       (crg_clkout1),
	.CLKOUT2       (gw5apll0),
	.CLKOUT3       (gw5apll1),
	.CLKOUT4       (gw5apll2),
	.CLKOUT5       (gw5apll3),
	.CLKOUT6       (gw5apll4),
	.LOCK          (crg_locked)
);

//------------------------------------------------------------------------------
// Instance VexRiscvLitexSmpCluster_Cc1_Iw32Is4096Iy1_Dw32Ds4096Dy1_ITs4DTs4_Ldw256_Ood_Hb1 of VexRiscvLitexSmpCluster_Cc1_Iw32Is4096Iy1_Dw32Ds4096Dy1_ITs4DTs4_Ldw256_Ood_Hb1 Module.
//------------------------------------------------------------------------------
VexRiscvLitexSmpCluster_Cc1_Iw32Is4096Iy1_Dw32Ds4096Dy1_ITs4DTs4_Ldw256_Ood_Hb1 VexRiscvLitexSmpCluster_Cc1_Iw32Is4096Iy1_Dw32Ds4096Dy1_ITs4DTs4_Ldw256_Ood_Hb1(
	// Inputs.
	.clintWishbone_ADR               (basesoc_clintbus_adr),
	.clintWishbone_CYC               (basesoc_clintbus_cyc),
	.clintWishbone_DAT_MOSI          (basesoc_clintbus_dat_w),
	.clintWishbone_STB               (basesoc_clintbus_stb),
	.clintWishbone_WE                (basesoc_clintbus_we),
	.dBridge_dram_cmd_ready          (basesoc_dbus_cmd_ready),
	.dBridge_dram_rdata_payload_data (basesoc_dbus_rdata_payload_data),
	.dBridge_dram_rdata_valid        (basesoc_dbus_rdata_valid),
	.dBridge_dram_wdata_ready        (basesoc_dbus_wdata_ready),
	.debugCd_external_clk            (sys_clk),
	.debugCd_external_reset          ((sys_rst | basesoc_reset)),
	.debugPort_capture               (basesoc_jtag_capture),
	.debugPort_enable                (basesoc_jtag_enable),
	.debugPort_reset                 (basesoc_jtag_reset),
	.debugPort_shift                 (basesoc_jtag_shift),
	.debugPort_tdi                   (basesoc_jtag_tdi),
	.debugPort_update                (basesoc_jtag_update),
	.iBridge_dram_cmd_ready          (basesoc_ibus_cmd_ready),
	.iBridge_dram_rdata_payload_data (basesoc_ibus_rdata_payload_data),
	.iBridge_dram_rdata_valid        (basesoc_ibus_rdata_valid),
	.iBridge_dram_wdata_ready        (basesoc_ibus_wdata_ready),
	.interrupts                      (basesoc_interrupt),
	.jtag_clk                        (basesoc_jtag_clk),
	.peripheral_ACK                  (basesoc_pbus_ack),
	.peripheral_DAT_MISO             (basesoc_pbus_dat_r),
	.peripheral_ERR                  (basesoc_pbus_err),
	.plicWishbone_ADR                (basesoc_plicbus_adr),
	.plicWishbone_CYC                (basesoc_plicbus_cyc),
	.plicWishbone_DAT_MOSI           (basesoc_plicbus_dat_w),
	.plicWishbone_STB                (basesoc_plicbus_stb),
	.plicWishbone_WE                 (basesoc_plicbus_we),

	// Outputs.
	.clintWishbone_ACK               (basesoc_clintbus_ack),
	.clintWishbone_DAT_MISO          (basesoc_clintbus_dat_r),
	.dBridge_dram_cmd_payload_addr   (basesoc_dbus_cmd_payload_addr),
	.dBridge_dram_cmd_payload_we     (basesoc_dbus_cmd_payload_we),
	.dBridge_dram_cmd_valid          (basesoc_dbus_cmd_valid),
	.dBridge_dram_rdata_ready        (basesoc_dbus_rdata_ready),
	.dBridge_dram_wdata_payload_data (basesoc_dbus_wdata_payload_data),
	.dBridge_dram_wdata_payload_we   (basesoc_dbus_wdata_payload_we),
	.dBridge_dram_wdata_valid        (basesoc_dbus_wdata_valid),
	.debugPort_tdo                   (basesoc_jtag_tdo),
	.iBridge_dram_cmd_payload_addr   (basesoc_ibus_cmd_payload_addr),
	.iBridge_dram_cmd_payload_we     (basesoc_ibus_cmd_payload_we),
	.iBridge_dram_cmd_valid          (basesoc_ibus_cmd_valid),
	.iBridge_dram_rdata_ready        (basesoc_ibus_rdata_ready),
	.iBridge_dram_wdata_payload_data (basesoc_ibus_wdata_payload_data),
	.iBridge_dram_wdata_payload_we   (basesoc_ibus_wdata_payload_we),
	.iBridge_dram_wdata_valid        (basesoc_ibus_wdata_valid),
	.peripheral_ADR                  (basesoc_pbus_adr),
	.peripheral_BTE                  (basesoc_pbus_bte),
	.peripheral_CTI                  (basesoc_pbus_cti),
	.peripheral_CYC                  (basesoc_pbus_cyc),
	.peripheral_DAT_MOSI             (basesoc_pbus_dat_w),
	.peripheral_SEL                  (basesoc_pbus_sel),
	.peripheral_STB                  (basesoc_pbus_stb),
	.peripheral_WE                   (basesoc_pbus_we),
	.plicWishbone_ACK                (basesoc_plicbus_ack),
	.plicWishbone_DAT_MISO           (basesoc_plicbus_dat_r)
);

//------------------------------------------------------------------------------
// Instance DFFP of DFFP Module.
//------------------------------------------------------------------------------
DFFP DFFP(
	// Inputs.
	.CLK    (sys2x_i_clk),
	.D      (1'd0),
	.PRESET ((~crg_locked)),

	// Outputs.
	.Q      (rst10)
);

//------------------------------------------------------------------------------
// Instance DFFP_1 of DFFP Module.
//------------------------------------------------------------------------------
DFFP DFFP_1(
	// Inputs.
	.CLK    (sys2x_i_clk),
	.D      (rst10),
	.PRESET ((~crg_locked)),

	// Outputs.
	.Q      (sys2x_i_rst)
);

//------------------------------------------------------------------------------
// Instance DFFP_2 of DFFP Module.
//------------------------------------------------------------------------------
DFFP DFFP_2(
	// Inputs.
	.CLK    (sys_clk),
	.D      (1'd0),
	.PRESET (((~crg_locked) | crg_reset0)),

	// Outputs.
	.Q      (rst11)
);

//------------------------------------------------------------------------------
// Instance DFFP_3 of DFFP Module.
//------------------------------------------------------------------------------
DFFP DFFP_3(
	// Inputs.
	.CLK    (sys_clk),
	.D      (rst11),
	.PRESET (((~crg_locked) | crg_reset0)),

	// Outputs.
	.Q      (sys_rst)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2024-10-25 16:50:32.
//------------------------------------------------------------------------------
